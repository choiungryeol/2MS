--------------------------------------------------------
--  파일이 생성됨 - 목요일-11월-16-2023   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Type OBJECTS_LIST
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "C##LMS"."OBJECTS_LIST" IS TABLE OF VARCHAR2(32767)

/
--------------------------------------------------------
--  DDL for Type REPORT_TEMPLATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "C##LMS"."REPORT_TEMPLATE" AS OBJECT (reportType                 		INTEGER, useDescriptionInfo         		INTEGER, useQuantitativeInfo         		INTEGER, useDiagrams                 		INTEGER, useTableColumns             		INTEGER, useTableColumnsComments     		INTEGER, useTableIndexes             		INTEGER, useTableConstraints         		INTEGER, useTableFKReferringTo       		INTEGER, useTableFKReferredFrom      		INTEGER, useEntityAttributes         		INTEGER, useEntityAttributesComments 		INTEGER, useEntityConstraints        		INTEGER, useEntityIdentifiers      			INTEGER, useEntityRelationships      		INTEGER, useEntityIncomingProcesses  		INTEGER, useEntityOutgoingProcesses  		INTEGER, useDomainConstraints        		INTEGER, useDomainUsedInTables       		INTEGER, useDomainUsedInEntities     		INTEGER, useSTAttributes             		INTEGER, useSTAttributesComments     		INTEGER, useSTMethods                		INTEGER, useSTUsedInTables           		INTEGER, useSTUsedInEntities         		INTEGER, useCTUsedInTables           		INTEGER, useCTUsedInEntities         		INTEGER, useCTUsedInStructuredTypes  		INTEGER, useDTUsedInTables           		INTEGER, useDTUsedInEntities         		INTEGER, useDTUsedInStructuredTypes  		INTEGER, useSTUsedInStructuredTypes  		INTEGER, useDomainUsedInStructuredTypes  	INTEGER, useCRImpactedObjects        		INTEGER, useMRImpactedObjects        		INTEGER)

/
--------------------------------------------------------
--  DDL for Sequence CHATROOM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##LMS"."CHATROOM_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence CLASS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##LMS"."CLASS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 89 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence FORM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##LMS"."FORM_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence HW_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##LMS"."HW_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 36 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence NOTICE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##LMS"."NOTICE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 17 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PROF_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##LMS"."PROF_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 90 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence QUIZ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##LMS"."QUIZ_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 401 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence STUDENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##LMS"."STUDENT_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 107 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TEST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##LMS"."TEST_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 112 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table ABILITY
--------------------------------------------------------

  CREATE TABLE "C##LMS"."ABILITY" 
   (	"SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"ABILITY_NUM" VARCHAR2(50 BYTE), 
	"ABILITY" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."ABILITY"."SUBJECT_CODE" IS '과목코드';
   COMMENT ON COLUMN "C##LMS"."ABILITY"."ABILITY_NUM" IS '능력단위요소번호';
   COMMENT ON COLUMN "C##LMS"."ABILITY"."ABILITY" IS '능력단위요소';
   COMMENT ON TABLE "C##LMS"."ABILITY"  IS '능력단위';
--------------------------------------------------------
--  DDL for Table ARTICLE
--------------------------------------------------------

  CREATE TABLE "C##LMS"."ARTICLE" 
   (	"CATEGORY" VARCHAR2(100 BYTE), 
	"TITLE" VARCHAR2(500 BYTE), 
	"CONTENT" VARCHAR2(2000 BYTE), 
	"URL_ADDRESS" VARCHAR2(300 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."ARTICLE"."CATEGORY" IS '분류';
   COMMENT ON COLUMN "C##LMS"."ARTICLE"."TITLE" IS '제목';
   COMMENT ON COLUMN "C##LMS"."ARTICLE"."CONTENT" IS '내용';
   COMMENT ON COLUMN "C##LMS"."ARTICLE"."URL_ADDRESS" IS '링크';
--------------------------------------------------------
--  DDL for Table ATTENDENCE
--------------------------------------------------------

  CREATE TABLE "C##LMS"."ATTENDENCE" 
   (	"STUDENT_CODE" VARCHAR2(50 BYTE), 
	"CLASS_CODE" VARCHAR2(10 BYTE), 
	"ATTDATE" DATE DEFAULT sysdate, 
	"STATUS" VARCHAR2(10 BYTE) DEFAULT '대기', 
	"NOTE" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."ATTENDENCE"."STUDENT_CODE" IS '학생코드';
   COMMENT ON COLUMN "C##LMS"."ATTENDENCE"."CLASS_CODE" IS '과정코드';
   COMMENT ON COLUMN "C##LMS"."ATTENDENCE"."ATTDATE" IS '날짜';
   COMMENT ON COLUMN "C##LMS"."ATTENDENCE"."STATUS" IS '출결상태';
   COMMENT ON COLUMN "C##LMS"."ATTENDENCE"."NOTE" IS '비고';
   COMMENT ON TABLE "C##LMS"."ATTENDENCE"  IS '출석부';
--------------------------------------------------------
--  DDL for Table CHATROOM
--------------------------------------------------------

  CREATE TABLE "C##LMS"."CHATROOM" 
   (	"CHAT_ROOM" NUMBER, 
	"PROF_CODE" VARCHAR2(50 BYTE), 
	"STUDENT_CODE" VARCHAR2(50 BYTE), 
	"PROF_NAME" VARCHAR2(30 BYTE), 
	"STUDENT_NAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CHAT_CONTENT
--------------------------------------------------------

  CREATE TABLE "C##LMS"."CHAT_CONTENT" 
   (	"CHAT_ROOM" NUMBER, 
	"CHAT_TALKER" VARCHAR2(20 BYTE), 
	"CHAT_CONTENT" VARCHAR2(1000 BYTE), 
	"CHAT_TIME" VARCHAR2(50 BYTE), 
	"CHAT_READCOUNT" NUMBER, 
	"CHAT_DATE" DATE, 
	"CHAT_TALKER_NAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."CHAT_CONTENT"."CHAT_ROOM" IS '채팅방 코드';
   COMMENT ON COLUMN "C##LMS"."CHAT_CONTENT"."CHAT_TALKER" IS '발신자';
   COMMENT ON COLUMN "C##LMS"."CHAT_CONTENT"."CHAT_CONTENT" IS '채팅내용';
   COMMENT ON COLUMN "C##LMS"."CHAT_CONTENT"."CHAT_TIME" IS '전송시간';
   COMMENT ON COLUMN "C##LMS"."CHAT_CONTENT"."CHAT_READCOUNT" IS '확인여부';
   COMMENT ON TABLE "C##LMS"."CHAT_CONTENT"  IS '채팅내용';
--------------------------------------------------------
--  DDL for Table DESIGNED_CLASS
--------------------------------------------------------

  CREATE TABLE "C##LMS"."DESIGNED_CLASS" 
   (	"CLASS_CODE" VARCHAR2(20 BYTE), 
	"CLASS_NAME" VARCHAR2(200 BYTE), 
	"CLASS_GOAL" VARCHAR2(500 BYTE), 
	"UPLOAD_DATE" DATE, 
	"EXECUTE_DATE" DATE, 
	"CONFIRMED" VARCHAR2(10 BYTE) DEFAULT 'NY', 
	"PROF_CODE" VARCHAR2(50 BYTE), 
	"PROF_CONFIRM" VARCHAR2(10 BYTE) DEFAULT 'N'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."DESIGNED_CLASS"."CLASS_CODE" IS '과정코드';
   COMMENT ON COLUMN "C##LMS"."DESIGNED_CLASS"."CLASS_NAME" IS '과정명';
   COMMENT ON COLUMN "C##LMS"."DESIGNED_CLASS"."CLASS_GOAL" IS '학습목표';
   COMMENT ON COLUMN "C##LMS"."DESIGNED_CLASS"."UPLOAD_DATE" IS '글 작성일';
   COMMENT ON COLUMN "C##LMS"."DESIGNED_CLASS"."EXECUTE_DATE" IS '사업실행연도';
   COMMENT ON COLUMN "C##LMS"."DESIGNED_CLASS"."CONFIRMED" IS '승인, 탈락여부';
   COMMENT ON COLUMN "C##LMS"."DESIGNED_CLASS"."PROF_CODE" IS '교사코드';
   COMMENT ON COLUMN "C##LMS"."DESIGNED_CLASS"."PROF_CONFIRM" IS '교사수정여부';
   COMMENT ON TABLE "C##LMS"."DESIGNED_CLASS"  IS '과정설계';
--------------------------------------------------------
--  DDL for Table DESIGNED_SUBJECT
--------------------------------------------------------

  CREATE TABLE "C##LMS"."DESIGNED_SUBJECT" 
   (	"SUBJECT_CODE" VARCHAR2(20 BYTE) DEFAULT NULL, 
	"CLASS_CODE" VARCHAR2(20 BYTE), 
	"SET_TIME" NUMBER, 
	"SUBJ_INDEX" NUMBER, 
	"SUBJECT_NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FORM
--------------------------------------------------------

  CREATE TABLE "C##LMS"."FORM" 
   (	"FORM_NO" VARCHAR2(50 BYTE), 
	"FORM_TITLE" VARCHAR2(500 BYTE), 
	"FORM_AUTHOR" VARCHAR2(50 BYTE), 
	"FORM_DATE" DATE, 
	"FORM_CONTENT" VARCHAR2(2000 BYTE), 
	"READCOUNT" NUMBER, 
	"ORIGINALFILENAME" VARCHAR2(1000 BYTE), 
	"RENAMEFILENAME" VARCHAR2(1000 BYTE), 
	"FORM_AUTHOR_NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."FORM"."FORM_NO" IS '게시글번호';
   COMMENT ON COLUMN "C##LMS"."FORM"."FORM_TITLE" IS '제목';
   COMMENT ON COLUMN "C##LMS"."FORM"."FORM_AUTHOR" IS '작성자';
   COMMENT ON COLUMN "C##LMS"."FORM"."FORM_DATE" IS '작성일';
   COMMENT ON COLUMN "C##LMS"."FORM"."FORM_CONTENT" IS '내용';
   COMMENT ON TABLE "C##LMS"."FORM"  IS '서식자료실';
--------------------------------------------------------
--  DDL for Table HOMEWORK
--------------------------------------------------------

  CREATE TABLE "C##LMS"."HOMEWORK" 
   (	"HW_CODE" VARCHAR2(20 BYTE), 
	"S_HW_DATE" DATE, 
	"S_HW_CONT" VARCHAR2(1000 BYTE), 
	"S_HW_FILE" VARCHAR2(300 BYTE), 
	"HW_RST" VARCHAR2(20 BYTE), 
	"HW_COME" VARCHAR2(1000 BYTE), 
	"STUDENT_CODE" VARCHAR2(50 BYTE), 
	"PROF_CODE" VARCHAR2(50 BYTE), 
	"S_HW_RFILE" VARCHAR2(300 BYTE), 
	"CLASS_CODE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."HOMEWORK"."HW_CODE" IS '과제코드';
   COMMENT ON COLUMN "C##LMS"."HOMEWORK"."S_HW_DATE" IS '제출날짜';
   COMMENT ON COLUMN "C##LMS"."HOMEWORK"."S_HW_CONT" IS '내용';
   COMMENT ON COLUMN "C##LMS"."HOMEWORK"."S_HW_FILE" IS '파일';
   COMMENT ON COLUMN "C##LMS"."HOMEWORK"."HW_RST" IS '제출현황';
   COMMENT ON COLUMN "C##LMS"."HOMEWORK"."HW_COME" IS '코멘트';
   COMMENT ON COLUMN "C##LMS"."HOMEWORK"."STUDENT_CODE" IS '학생코드';
   COMMENT ON COLUMN "C##LMS"."HOMEWORK"."PROF_CODE" IS '교사코드';
   COMMENT ON COLUMN "C##LMS"."HOMEWORK"."S_HW_RFILE" IS '파일수정';
   COMMENT ON TABLE "C##LMS"."HOMEWORK"  IS '과제';
--------------------------------------------------------
--  DDL for Table NOTICE
--------------------------------------------------------

  CREATE TABLE "C##LMS"."NOTICE" 
   (	"NOTICE_NO" VARCHAR2(10 BYTE), 
	"NOTICE_TITLE" VARCHAR2(50 BYTE), 
	"NOTICE_AUTHOR" VARCHAR2(10 BYTE), 
	"NOTICE_DATE" DATE, 
	"NOTICE_CONTENT" VARCHAR2(2000 BYTE), 
	"NOTICE_COUNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."NOTICE"."NOTICE_NO" IS '게시글번호';
   COMMENT ON COLUMN "C##LMS"."NOTICE"."NOTICE_TITLE" IS '제목';
   COMMENT ON COLUMN "C##LMS"."NOTICE"."NOTICE_AUTHOR" IS '작성자';
   COMMENT ON COLUMN "C##LMS"."NOTICE"."NOTICE_DATE" IS '작성일';
   COMMENT ON COLUMN "C##LMS"."NOTICE"."NOTICE_CONTENT" IS '내용';
   COMMENT ON COLUMN "C##LMS"."NOTICE"."NOTICE_COUNT" IS '조회수';
   COMMENT ON TABLE "C##LMS"."NOTICE"  IS '공지사항';
--------------------------------------------------------
--  DDL for Table QBOARD
--------------------------------------------------------

  CREATE TABLE "C##LMS"."QBOARD" 
   (	"Q_BOARD_SEQ" NUMBER, 
	"Q_BOARD_WRITER" VARCHAR2(20 BYTE), 
	"Q_BOARD_TITLE" VARCHAR2(100 BYTE), 
	"Q_BOARD_DATE" DATE, 
	"Q_BOARD_CONTENT" VARCHAR2(1000 BYTE), 
	"Q_BOARD_IMAGE" VARCHAR2(50 BYTE), 
	"Q_BOARD_SECRET" VARCHAR2(10 BYTE), 
	"Q_BOARD_READCOUNT" NUMBER, 
	"GRADE" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."QBOARD"."Q_BOARD_SEQ" IS '게시글번호';
   COMMENT ON COLUMN "C##LMS"."QBOARD"."Q_BOARD_WRITER" IS '작성자';
   COMMENT ON COLUMN "C##LMS"."QBOARD"."Q_BOARD_TITLE" IS '제목';
   COMMENT ON COLUMN "C##LMS"."QBOARD"."Q_BOARD_DATE" IS '작성일';
   COMMENT ON COLUMN "C##LMS"."QBOARD"."Q_BOARD_CONTENT" IS '내용';
   COMMENT ON COLUMN "C##LMS"."QBOARD"."Q_BOARD_IMAGE" IS '이미지';
   COMMENT ON COLUMN "C##LMS"."QBOARD"."Q_BOARD_SECRET" IS '공개여부';
   COMMENT ON COLUMN "C##LMS"."QBOARD"."Q_BOARD_READCOUNT" IS '조회수';
   COMMENT ON COLUMN "C##LMS"."QBOARD"."GRADE" IS '등급';
   COMMENT ON TABLE "C##LMS"."QBOARD"  IS '질문게시판';
--------------------------------------------------------
--  DDL for Table QBOARD_ANS
--------------------------------------------------------

  CREATE TABLE "C##LMS"."QBOARD_ANS" 
   (	"Q_BOARD_SEQ" NUMBER, 
	"QA_BOARD_RESPONSE" VARCHAR2(20 BYTE), 
	"QA_BOARD_CONTENT" VARCHAR2(1000 BYTE), 
	"QA_BOARD_DATE" DATE, 
	"GRADE" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."QBOARD_ANS"."Q_BOARD_SEQ" IS '게시글번호';
   COMMENT ON COLUMN "C##LMS"."QBOARD_ANS"."QA_BOARD_RESPONSE" IS '답변자';
   COMMENT ON COLUMN "C##LMS"."QBOARD_ANS"."QA_BOARD_CONTENT" IS '내용';
   COMMENT ON COLUMN "C##LMS"."QBOARD_ANS"."QA_BOARD_DATE" IS '작성일';
   COMMENT ON COLUMN "C##LMS"."QBOARD_ANS"."GRADE" IS '등급';
   COMMENT ON TABLE "C##LMS"."QBOARD_ANS"  IS '질문게시판_답변';
--------------------------------------------------------
--  DDL for Table QNA
--------------------------------------------------------

  CREATE TABLE "C##LMS"."QNA" 
   (	"QNA_NO" NUMBER, 
	"QNA_CATE" VARCHAR2(20 BYTE), 
	"QNA_TYPE" VARCHAR2(20 BYTE), 
	"CONTENT" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."QNA"."QNA_NO" IS '설문번호';
   COMMENT ON COLUMN "C##LMS"."QNA"."QNA_CATE" IS '설문분류';
   COMMENT ON COLUMN "C##LMS"."QNA"."QNA_TYPE" IS '설문종류';
   COMMENT ON COLUMN "C##LMS"."QNA"."CONTENT" IS '설문내용';
   COMMENT ON TABLE "C##LMS"."QNA"  IS '설문등록';
--------------------------------------------------------
--  DDL for Table QNARESULT
--------------------------------------------------------

  CREATE TABLE "C##LMS"."QNARESULT" 
   (	"QNA_CATE" VARCHAR2(20 BYTE), 
	"QNA_NO" NUMBER, 
	"QNA_TYPE" VARCHAR2(20 BYTE), 
	"COUNT" VARCHAR2(20 BYTE), 
	"SUM" VARCHAR2(30 BYTE), 
	"AVG" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."QNARESULT"."QNA_CATE" IS '설문분류';
   COMMENT ON COLUMN "C##LMS"."QNARESULT"."QNA_NO" IS '설문번호';
   COMMENT ON COLUMN "C##LMS"."QNARESULT"."QNA_TYPE" IS '설문종류';
   COMMENT ON COLUMN "C##LMS"."QNARESULT"."COUNT" IS '참여자수';
   COMMENT ON COLUMN "C##LMS"."QNARESULT"."SUM" IS '점수합계';
   COMMENT ON COLUMN "C##LMS"."QNARESULT"."AVG" IS '평균';
   COMMENT ON TABLE "C##LMS"."QNARESULT"  IS '설문결과';
--------------------------------------------------------
--  DDL for Table QUIZ
--------------------------------------------------------

  CREATE TABLE "C##LMS"."QUIZ" 
   (	"QUIZ_SEQ" NUMBER, 
	"PROF_CODE" VARCHAR2(50 BYTE), 
	"QUIZ_CONTENT" VARCHAR2(1000 BYTE), 
	"QUIZ_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."QUIZ"."QUIZ_SEQ" IS '퀴즈번호';
   COMMENT ON COLUMN "C##LMS"."QUIZ"."PROF_CODE" IS '교사코드';
   COMMENT ON COLUMN "C##LMS"."QUIZ"."QUIZ_CONTENT" IS '퀴즈';
   COMMENT ON COLUMN "C##LMS"."QUIZ"."QUIZ_DATE" IS '출제일시';
   COMMENT ON TABLE "C##LMS"."QUIZ"  IS '퀴즈_Q';
--------------------------------------------------------
--  DDL for Table QUIZ_ANSWER
--------------------------------------------------------

  CREATE TABLE "C##LMS"."QUIZ_ANSWER" 
   (	"QUIZ_SEQ" NUMBER, 
	"STUDENT_CODE" VARCHAR2(50 BYTE), 
	"QUIZ_ANSWER" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."QUIZ_ANSWER"."QUIZ_SEQ" IS '퀴즈번호';
   COMMENT ON COLUMN "C##LMS"."QUIZ_ANSWER"."STUDENT_CODE" IS '학생코드';
   COMMENT ON COLUMN "C##LMS"."QUIZ_ANSWER"."QUIZ_ANSWER" IS '답변';
   COMMENT ON TABLE "C##LMS"."QUIZ_ANSWER"  IS '퀴즈_A';
--------------------------------------------------------
--  DDL for Table STUDENT
--------------------------------------------------------

  CREATE TABLE "C##LMS"."STUDENT" 
   (	"STUDENT_CODE" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(30 BYTE), 
	"RESIDENT_NUMBER" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"ID" VARCHAR2(50 BYTE), 
	"PWD" VARCHAR2(200 BYTE), 
	"MODIFIED_DATE" DATE, 
	"EDUATION" VARCHAR2(1000 BYTE), 
	"SCHOOL" VARCHAR2(50 BYTE), 
	"INACTIVE_OR_NOT" VARCHAR2(1 BYTE), 
	"CLASS_CODE" VARCHAR2(20 BYTE), 
	"PHONE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."STUDENT"."STUDENT_CODE" IS '학생코드';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."NAME" IS '이름';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."RESIDENT_NUMBER" IS '주민번호';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."EMAIL" IS '이메일';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."ID" IS '아이디';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."PWD" IS '비밀번호';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."MODIFIED_DATE" IS '수정일자';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."EDUATION" IS '학력';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."SCHOOL" IS '학교';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."INACTIVE_OR_NOT" IS '비활성여부';
   COMMENT ON COLUMN "C##LMS"."STUDENT"."CLASS_CODE" IS '과정코드';
   COMMENT ON TABLE "C##LMS"."STUDENT"  IS '학생';
--------------------------------------------------------
--  DDL for Table SUBJECT
--------------------------------------------------------

  CREATE TABLE "C##LMS"."SUBJECT" 
   (	"SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"SUBJECT_NAME" VARCHAR2(100 BYTE), 
	"BASIC_TIME" NUMBER, 
	"FIRST_CATEGORY" VARCHAR2(2 BYTE), 
	"FIRST_NAME" VARCHAR2(50 BYTE), 
	"SECOND_CATEGORY" VARCHAR2(2 BYTE), 
	"SECOND_NAME" VARCHAR2(50 BYTE), 
	"THIRD_CATEGORY" VARCHAR2(2 BYTE), 
	"THIRD_NAME" VARCHAR2(50 BYTE), 
	"FOURTH_CATEGORY" VARCHAR2(2 BYTE), 
	"FOURTH_NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."SUBJECT"."SUBJECT_CODE" IS '과목코드';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."SUBJECT_NAME" IS '과목명';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."BASIC_TIME" IS '과목기본시수';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."FIRST_CATEGORY" IS '대분류코드';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."FIRST_NAME" IS '대분류명';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."SECOND_CATEGORY" IS '중분류코드';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."SECOND_NAME" IS '중분류명';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."THIRD_CATEGORY" IS '소분류코드';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."THIRD_NAME" IS '소분류명';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."FOURTH_CATEGORY" IS '세분류코드';
   COMMENT ON COLUMN "C##LMS"."SUBJECT"."FOURTH_NAME" IS '세분류명';
   COMMENT ON TABLE "C##LMS"."SUBJECT"  IS '과목';
--------------------------------------------------------
--  DDL for Table SURVEY
--------------------------------------------------------

  CREATE TABLE "C##LMS"."SURVEY" 
   (	"SURVEY_NO" NUMBER, 
	"SURVEY_CATE" VARCHAR2(20 BYTE), 
	"SURVEY_TYPE" VARCHAR2(20 BYTE), 
	"SURVEY_DATE" DATE, 
	"SURVEY1" VARCHAR2(2000 BYTE), 
	"SURVEY2" VARCHAR2(2000 BYTE), 
	"SURVEY3" VARCHAR2(2000 BYTE), 
	"SURVEY4" VARCHAR2(2000 BYTE), 
	"SURVEY5" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."SURVEY"."SURVEY_NO" IS '설문번호';
   COMMENT ON COLUMN "C##LMS"."SURVEY"."SURVEY_CATE" IS '설문분류';
   COMMENT ON COLUMN "C##LMS"."SURVEY"."SURVEY_TYPE" IS '설문종류';
   COMMENT ON COLUMN "C##LMS"."SURVEY"."SURVEY_DATE" IS '등록날짜';
   COMMENT ON COLUMN "C##LMS"."SURVEY"."SURVEY1" IS '설문1';
   COMMENT ON COLUMN "C##LMS"."SURVEY"."SURVEY2" IS '설문2';
   COMMENT ON COLUMN "C##LMS"."SURVEY"."SURVEY3" IS '설문3';
   COMMENT ON COLUMN "C##LMS"."SURVEY"."SURVEY4" IS '설문4';
   COMMENT ON COLUMN "C##LMS"."SURVEY"."SURVEY5" IS '설문5';
   COMMENT ON TABLE "C##LMS"."SURVEY"  IS '설문등록';
--------------------------------------------------------
--  DDL for Table SURVEYDIS
--------------------------------------------------------

  CREATE TABLE "C##LMS"."SURVEYDIS" 
   (	"SURVEY_NO" NUMBER, 
	"STUDENT_CODE" VARCHAR2(50 BYTE), 
	"CLASS_CODE" VARCHAR2(20 BYTE), 
	"STATUS" VARCHAR2(20 BYTE) DEFAULT 'N'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."SURVEYDIS"."SURVEY_NO" IS '설문번호';
   COMMENT ON COLUMN "C##LMS"."SURVEYDIS"."STUDENT_CODE" IS '학생 코드';
   COMMENT ON COLUMN "C##LMS"."SURVEYDIS"."CLASS_CODE" IS '반 코드';
   COMMENT ON COLUMN "C##LMS"."SURVEYDIS"."STATUS" IS '상태';
   COMMENT ON TABLE "C##LMS"."SURVEYDIS"  IS '설문배포';
--------------------------------------------------------
--  DDL for Table SURVEYRESULT
--------------------------------------------------------

  CREATE TABLE "C##LMS"."SURVEYRESULT" 
   (	"SURVEY_NO" NUMBER, 
	"SURVEY_CATE" VARCHAR2(20 BYTE), 
	"SURVEY_TYPE" VARCHAR2(20 BYTE), 
	"ANSWER1" VARCHAR2(20 BYTE), 
	"ANSWER2" VARCHAR2(20 BYTE), 
	"ANSWER3" VARCHAR2(20 BYTE), 
	"ANSWER4" VARCHAR2(20 BYTE), 
	"ANSWER5" VARCHAR2(20 BYTE), 
	"CLASS_CODE" VARCHAR2(20 BYTE), 
	"STUDENT_CODE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."SURVEY_NO" IS '설문번호';
   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."SURVEY_CATE" IS '설문분류';
   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."SURVEY_TYPE" IS '설문종류';
   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."ANSWER1" IS '결과1';
   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."ANSWER2" IS '결과2';
   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."ANSWER3" IS '결과3';
   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."ANSWER4" IS '결과4';
   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."ANSWER5" IS '결과5';
   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."CLASS_CODE" IS '반';
   COMMENT ON COLUMN "C##LMS"."SURVEYRESULT"."STUDENT_CODE" IS '학생코드';
   COMMENT ON TABLE "C##LMS"."SURVEYRESULT"  IS '설문결과';
--------------------------------------------------------
--  DDL for Table S_TEST
--------------------------------------------------------

  CREATE TABLE "C##LMS"."S_TEST" 
   (	"TEST_CODE" VARCHAR2(20 BYTE), 
	"SCORE_SUM" NUMBER, 
	"TEST_DATE" DATE, 
	"TEST_A" VARCHAR2(1000 BYTE), 
	"TEST_YN" VARCHAR2(10 BYTE), 
	"TEST_NO" NUMBER, 
	"STUDENT_CODE" VARCHAR2(50 BYTE), 
	"TEST_OK" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."S_TEST"."TEST_CODE" IS '시험코드';
   COMMENT ON COLUMN "C##LMS"."S_TEST"."SCORE_SUM" IS '점수';
   COMMENT ON COLUMN "C##LMS"."S_TEST"."TEST_DATE" IS '제출날짜';
   COMMENT ON COLUMN "C##LMS"."S_TEST"."TEST_A" IS '답';
   COMMENT ON COLUMN "C##LMS"."S_TEST"."TEST_YN" IS '채점';
   COMMENT ON COLUMN "C##LMS"."S_TEST"."TEST_NO" IS '문항';
   COMMENT ON COLUMN "C##LMS"."S_TEST"."STUDENT_CODE" IS '학생코드';
   COMMENT ON TABLE "C##LMS"."S_TEST"  IS '학생시험';
--------------------------------------------------------
--  DDL for Table TEACHER
--------------------------------------------------------

  CREATE TABLE "C##LMS"."TEACHER" 
   (	"PROF_CODE" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(30 BYTE), 
	"RESIDENT_NUMBER" VARCHAR2(20 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"ID" VARCHAR2(50 BYTE), 
	"PWD" VARCHAR2(100 BYTE), 
	"PHOTO" VARCHAR2(1000 BYTE), 
	"CV" VARCHAR2(2000 BYTE), 
	"CERTIFICATE" VARCHAR2(1000 BYTE), 
	"SIGNATURE_IMG" VARCHAR2(1000 BYTE), 
	"MODIFIED_DATE" DATE DEFAULT sysdate, 
	"INACTIVE_OR_NOT" VARCHAR2(1 BYTE), 
	"GRADE" VARCHAR2(1 BYTE), 
	"PHONE" VARCHAR2(30 BYTE), 
	"CLASS_CODE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."TEACHER"."PROF_CODE" IS '교사코드';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."NAME" IS '이름';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."RESIDENT_NUMBER" IS '주민번호';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."EMAIL" IS '이메일';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."ID" IS '아이디';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."PWD" IS '비밀번호';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."PHOTO" IS '사진';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."CV" IS '이력서';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."CERTIFICATE" IS '자격증';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."SIGNATURE_IMG" IS '서명이미지';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."MODIFIED_DATE" IS '수정일자';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."INACTIVE_OR_NOT" IS '비활성여부';
   COMMENT ON COLUMN "C##LMS"."TEACHER"."GRADE" IS '등급여부';
   COMMENT ON TABLE "C##LMS"."TEACHER"  IS '교사 ';
--------------------------------------------------------
--  DDL for Table TEST
--------------------------------------------------------

  CREATE TABLE "C##LMS"."TEST" 
   (	"TEST_CODE" VARCHAR2(20 BYTE), 
	"TEST_NO" NUMBER, 
	"TEST_Q" VARCHAR2(1000 BYTE), 
	"TEST_Q1" VARCHAR2(1000 BYTE), 
	"TEST_Q2" VARCHAR2(1000 BYTE), 
	"TEST_Q3" VARCHAR2(1000 BYTE), 
	"TEST_Q4" VARCHAR2(1000 BYTE), 
	"TEST_RA" VARCHAR2(1000 BYTE), 
	"TEST_SCORE" NUMBER, 
	"ABILITY" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."TEST"."TEST_CODE" IS '시험코드';
   COMMENT ON COLUMN "C##LMS"."TEST"."TEST_NO" IS '문항';
   COMMENT ON COLUMN "C##LMS"."TEST"."TEST_Q" IS '문제';
   COMMENT ON COLUMN "C##LMS"."TEST"."TEST_Q1" IS '문제1';
   COMMENT ON COLUMN "C##LMS"."TEST"."TEST_Q2" IS '문제2';
   COMMENT ON COLUMN "C##LMS"."TEST"."TEST_Q3" IS '문제3';
   COMMENT ON COLUMN "C##LMS"."TEST"."TEST_Q4" IS '문제4';
   COMMENT ON COLUMN "C##LMS"."TEST"."TEST_RA" IS '정답';
   COMMENT ON COLUMN "C##LMS"."TEST"."TEST_SCORE" IS '배점';
   COMMENT ON COLUMN "C##LMS"."TEST"."ABILITY" IS '능력단위요소';
   COMMENT ON TABLE "C##LMS"."TEST"  IS '문제';
--------------------------------------------------------
--  DDL for Table T_HOMEWORK
--------------------------------------------------------

  CREATE TABLE "C##LMS"."T_HOMEWORK" 
   (	"HW_CODE" VARCHAR2(20 BYTE), 
	"PROF_CODE" VARCHAR2(50 BYTE), 
	"HW_STARTDATE" DATE, 
	"HW_ENDDATE" DATE, 
	"T_HW_FILE" VARCHAR2(300 BYTE), 
	"T_HW_RFILE" VARCHAR2(300 BYTE), 
	"T_HW_TITLE" VARCHAR2(300 BYTE), 
	"T_HW_CONT" VARCHAR2(1000 BYTE), 
	"CLASS_CODE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."T_HOMEWORK"."HW_CODE" IS '과제코드';
   COMMENT ON COLUMN "C##LMS"."T_HOMEWORK"."PROF_CODE" IS '교사코드';
   COMMENT ON COLUMN "C##LMS"."T_HOMEWORK"."HW_STARTDATE" IS '시작날짜';
   COMMENT ON COLUMN "C##LMS"."T_HOMEWORK"."HW_ENDDATE" IS '마감날짜';
   COMMENT ON COLUMN "C##LMS"."T_HOMEWORK"."T_HW_FILE" IS '파일';
   COMMENT ON COLUMN "C##LMS"."T_HOMEWORK"."T_HW_RFILE" IS '파일수정';
   COMMENT ON COLUMN "C##LMS"."T_HOMEWORK"."T_HW_TITLE" IS '제목';
   COMMENT ON COLUMN "C##LMS"."T_HOMEWORK"."T_HW_CONT" IS '내용';
   COMMENT ON COLUMN "C##LMS"."T_HOMEWORK"."CLASS_CODE" IS '과정코드';
   COMMENT ON TABLE "C##LMS"."T_HOMEWORK"  IS '교사과제';
--------------------------------------------------------
--  DDL for Table T_TEST
--------------------------------------------------------

  CREATE TABLE "C##LMS"."T_TEST" 
   (	"TEST_CODE" VARCHAR2(20 BYTE), 
	"SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"TEST_CONT" NUMBER, 
	"TEST_STARTDATE" DATE, 
	"TEST_ENDDATE" DATE, 
	"TEST_TYPE" VARCHAR2(300 BYTE), 
	"CLASS_CODE" VARCHAR2(20 BYTE), 
	"PROF_CODE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "C##LMS"."T_TEST"."TEST_CODE" IS '시험코드';
   COMMENT ON COLUMN "C##LMS"."T_TEST"."SUBJECT_CODE" IS '과목코드';
   COMMENT ON COLUMN "C##LMS"."T_TEST"."TEST_CONT" IS '문제수';
   COMMENT ON COLUMN "C##LMS"."T_TEST"."TEST_STARTDATE" IS '시작날짜';
   COMMENT ON COLUMN "C##LMS"."T_TEST"."TEST_ENDDATE" IS '마감날짜';
   COMMENT ON COLUMN "C##LMS"."T_TEST"."TEST_TYPE" IS '문제유형';
   COMMENT ON COLUMN "C##LMS"."T_TEST"."CLASS_CODE" IS '과정코드';
   COMMENT ON COLUMN "C##LMS"."T_TEST"."PROF_CODE" IS '교사코드';
   COMMENT ON TABLE "C##LMS"."T_TEST"  IS '교사시험';
--------------------------------------------------------
--  DDL for View DMRS_INSTALLATION
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRS_INSTALLATION" ("DMRS_PERSISTENCE_VERSION", "DMRS_REPORTS_VERSION", "CREATED_ON") AS 
  select 1.6 DMRS_Persistence_Version, 1.0 DMRS_Reports_Version, to_timestamp('2023/11/13 19:28:48','YYYY/MM/DD HH24:MI:SS') Created_On from dual with read only
;
--------------------------------------------------------
--  DDL for View DMRS_VDIAGRAMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRS_VDIAGRAMS" ("DIAGRAM_NAME", "OBJECT_ID", "OVID", "DIAGRAM_TYPE", "IS_DISPLAY", "VISIBLE", "MASTER_DIAGRAM_ID", "MASTER_DIAGRAM_OVID", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "NOTATION", "SHOW_ALL_DETAILS", "SHOW_NAMES_ONLY", "SHOW_ELEMENTS", "SHOW_DATATYPE", "SHOW_KEYS", "AUTOROUTE", "BOX_IN_BOX", "DIAGRAM_SVG", "DIAGRAM_PDF", "DESIGN_OVID", "PDF_NAME", "SVG_NAME") AS 
  Select Diagram_Name, Object_Id, Ovid, Diagram_Type, Is_Display, Visible, Master_Diagram_Id, Master_Diagram_Ovid, Model_Id, Model_Ovid, Model_Name, Notation, Show_All_Details, Show_Names_Only, Show_Elements, Show_Datatype,Show_Keys, Autoroute, Box_In_Box, Diagram_Svg, Diagram_Pdf,  Design_Ovid, Diagram_Name||'.PDF', Diagram_Name||'.SVG' from DMRS_DIAGRAMS
;
--------------------------------------------------------
--  DDL for View DMRV_AGGR_FUNC_DIMENSIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_AGGR_FUNC_DIMENSIONS" ("AGGREGATE_FUNCTION_ID", "AGGREGATE_FUNCTION_NAME", "AGGREGATE_FUNCTION_OVID", "DIMENSION_ID", "DIMENSION_NAME", "DIMENSION_OVID", "DESIGN_OVID") AS 
  select  Aggregate_Function_ID, Aggregate_Function_Name, Aggregate_Function_OVID, Dimension_ID, Dimension_Name, Dimension_OVID, Design_OVID from DMRS_AGGR_FUNC_DIMENSIONS
;
--------------------------------------------------------
--  DDL for View DMRV_AGGR_FUNC_LEVELS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_AGGR_FUNC_LEVELS" ("AGGREGATE_FUNCTION_ID", "AGGREGATE_FUNCTION_NAME", "AGGREGATE_FUNCTION_OVID", "LEVEL_ID", "LEVEL_NAME", "LEVEL_OVID", "DESIGN_OVID") AS 
  select  Aggregate_Function_ID, Aggregate_Function_Name, Aggregate_Function_OVID, Level_ID, Level_Name, Level_OVID, Design_OVID from DMRS_AGGR_FUNC_LEVELS
;
--------------------------------------------------------
--  DDL for View DMRV_ATTRIBUTES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_ATTRIBUTES" ("ATTRIBUTE_NAME", "OBJECT_ID", "OVID", "IMPORT_ID", "CONTAINER_ID", "CONTAINER_OVID", "MANDATORY", "DATATYPE_KIND", "VALUE_TYPE", "FORMULA", "SCOPEENTITY_ID", "SCOPEENTITY_OVID", "DOMAIN_ID", "DOMAIN_OVID", "LOGICAL_TYPE_ID", "LOGICAL_TYPE_OVID", "DISTINCT_TYPE_ID", "DISTINCT_TYPE_OVID", "STRUCTURED_TYPE_ID", "STRUCTURED_TYPE_OVID", "COLLECTION_TYPE_ID", "COLLECTION_TYPE_OVID", "CHECK_CONSTRAINT_NAME", "DEFAULT_VALUE", "USE_DOMAIN_CONSTRAINT", "DOMAIN_NAME", "LOGICAL_TYPE_NAME", "STRUCTURED_TYPE_NAME", "DISTINCT_TYPE_NAME", "COLLECTION_TYPE_NAME", "SYNONYMS", "PREFERRED_ABBREVIATION", "RELATIONSHIP_ID", "RELATIONSHIP_OVID", "ENTITY_NAME", "PK_FLAG", "FK_FLAG", "RELATIONSHIP_NAME", "SEQUENCE", "T_SIZE", "T_PRECISION", "CHAR_UNITS", "NATIVE_TYPE", "T_SCALE", "DATA_SOURCE", "SCOPEENTITY_NAME", "DESIGN_OVID") AS 
  select  Attribute_Name, Object_ID, OVID, Import_ID, Container_ID, Container_OVID, Mandatory, DataType_Kind, Value_Type, Formula, ScopeEntity_ID, ScopeEntity_OVID, Domain_ID, Domain_OVID, Logical_Type_ID, Logical_Type_OVID, Distinct_Type_ID, Distinct_Type_OVID, Structured_Type_ID, Structured_Type_OVID, Collection_Type_ID, Collection_Type_OVID, Check_Constraint_Name, Default_Value, Use_Domain_Constraint, Domain_Name, Logical_Type_Name, Structured_Type_Name, Distinct_Type_Name, Collection_Type_Name, Synonyms, Preferred_Abbreviation, Relationship_ID, Relationship_OVID, Entity_Name, PK_Flag, FK_Flag, Relationship_Name, Sequence, T_Size, T_Precision, Char_Units, Native_Type, T_Scale, Data_Source, ScopeEntity_Name, Design_OVID from DMRS_ATTRIBUTES
;
--------------------------------------------------------
--  DDL for View DMRV_AVT
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_AVT" ("DATAELEMENT_ID", "DATAELEMENT_OVID", "TYPE", "SEQUENCE", "VALUE", "SHORT_DESCRIPTION", "CONTAINER_ID", "CONTAINER_OVID", "CONTAINER_NAME", "DATAELEMENT_NAME", "DESIGN_OVID") AS 
  select  DataElement_ID, DataElement_OVID, Type, Sequence, Value, Short_Description, Container_ID, Container_OVID, Container_Name, DataElement_Name, Design_OVID from DMRS_AVT
;
--------------------------------------------------------
--  DDL for View DMRV_BUSINESS_INFO
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_BUSINESS_INFO" ("DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "BUSINESS_INFO_ID", "BUSINESS_INFO_OVID", "BUSINESS_INFO_NAME") AS 
  select  Design_ID, Design_OVID, Design_Name, Business_Info_ID, Business_Info_OVID, Business_Info_Name from DMRS_BUSINESS_INFO
;
--------------------------------------------------------
--  DDL for View DMRV_CHANGE_REQUESTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CHANGE_REQUESTS" ("DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "CHANGE_REQUEST_ID", "CHANGE_REQUEST_OVID", "CHANGE_REQUEST_NAME", "REQUEST_STATUS", "REQUEST_DATE_STRING", "COMPLETION_DATE_STRING", "IS_COMPLETED", "REASON") AS 
  select  Design_ID, Design_OVID, Design_Name, Change_Request_ID, Change_Request_OVID, Change_Request_Name, Request_Status, Request_Date_String, Completion_Date_String, Is_Completed, Reason from DMRS_CHANGE_REQUESTS
;
--------------------------------------------------------
--  DDL for View DMRV_CHANGE_REQUEST_ELEMENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CHANGE_REQUEST_ELEMENTS" ("CHANGE_REQUEST_ID", "CHANGE_REQUEST_OVID", "CHANGE_REQUEST_NAME", "ELEMENT_ID", "ELEMENT_OVID", "ELEMENT_NAME", "ELEMENT_TYPE", "DESIGN_OVID") AS 
  select  Change_Request_ID, Change_Request_OVID, Change_Request_Name, Element_ID, Element_OVID, Element_Name, Element_Type, Design_OVID from DMRS_CHANGE_REQUEST_ELEMENTS
;
--------------------------------------------------------
--  DDL for View DMRV_CHECK_CONSTRAINTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CHECK_CONSTRAINTS" ("DATAELEMENT_ID", "DATAELEMENT_OVID", "TYPE", "SEQUENCE", "CONSTRAINT_NAME", "TEXT", "DATABASE_TYPE", "CONTAINER_ID", "CONTAINER_OVID", "CONTAINER_NAME", "DATAELEMENT_NAME", "DESIGN_OVID") AS 
  select  DataElement_ID, DataElement_OVID, Type, Sequence, Constraint_Name, Text, Database_Type, Container_ID, Container_OVID, Container_Name, DataElement_Name, Design_OVID from DMRS_CHECK_CONSTRAINTS
;
--------------------------------------------------------
--  DDL for View DMRV_CLASSIFICATION_TYPES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CLASSIFICATION_TYPES" ("TYPE_ID", "TYPE_OVID", "TYPE_NAME", "DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME") AS 
  select  Type_ID, Type_OVID, Type_Name, Design_ID, Design_OVID, Design_Name from DMRS_CLASSIFICATION_TYPES
;
--------------------------------------------------------
--  DDL for View DMRV_COLLECTION_TYPES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_COLLECTION_TYPES" ("DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "COLLECTION_TYPE_ID", "COLLECTION_TYPE_OVID", "COLLECTION_TYPE_NAME", "C_TYPE", "DATATYPE_ID", "DATATYPE_OVID", "DATATYPE_NAME", "DT_TYPE", "DT_REF", "MAX_ELEMENT", "PREDEFINED") AS 
  select  Design_ID, Design_OVID, Design_Name, Collection_Type_ID, Collection_Type_OVID, Collection_Type_Name, C_Type, DataType_ID, DataType_OVID, DataType_Name, DT_Type, DT_Ref, Max_Element, Predefined from DMRS_COLLECTION_TYPES
;
--------------------------------------------------------
--  DDL for View DMRV_COLUMNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_COLUMNS" ("COLUMN_NAME", "ABBREVIATION", "OBJECT_ID", "OVID", "IMPORT_ID", "CONTAINER_ID", "CONTAINER_OVID", "MANDATORY", "DATATYPE_KIND", "VALUE_TYPE", "COMPUTED", "FORMULA", "SCOPEENTITY_ID", "SCOPEENTITY_OVID", "DOMAIN_ID", "DOMAIN_OVID", "LOGICAL_TYPE_ID", "LOGICAL_TYPE_OVID", "DISTINCT_TYPE_ID", "DISTINCT_TYPE_OVID", "STRUCTURED_TYPE_ID", "STRUCTURED_TYPE_OVID", "COLLECTION_TYPE_ID", "COLLECTION_TYPE_OVID", "CHECK_CONSTRAINT_NAME", "DEFAULT_VALUE", "USE_DOMAIN_CONSTRAINT", "DOMAIN_NAME", "LOGICAL_TYPE_NAME", "STRUCTURED_TYPE_NAME", "DISTINCT_TYPE_NAME", "COLLECTION_TYPE_NAME", "USES_DEFAULT", "ENGINEER", "TABLE_NAME", "PK_FLAG", "FK_FLAG", "NATIVE_TYPE", "SEQUENCE", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "T_SIZE", "T_PRECISION", "T_SCALE", "CHAR_UNITS", "PERSONALLY_ID_INFORMATION", "SENSITIVE_INFORMATION", "MASK_FOR_NONE_PRODUCTION", "SCOPEENTITY_NAME", "AUTO_INCREMENT_COLUMN", "IDENTITY_COLUMN", "AUTO_INCREMENT_GENERATE_ALWAYS", "AUTO_INCREMENT_START_WITH", "AUTO_INCREMENT_INCREMENT_BY", "AUTO_INCREMENT_MIN_VALUE", "AUTO_INCREMENT_MAX_VALUE", "AUTO_INCREMENT_CYCLE", "AUTO_INCREMENT_DISABLE_CACHE", "AUTO_INCREMENT_CACHE", "AUTO_INCREMENT_ORDER", "AUTO_INCREMENT_SEQUENCE_NAME", "AUTO_INCREMENT_TRIGGER_NAME", "DESIGN_OVID") AS 
  select  Column_Name, Abbreviation, Object_ID, OVID, Import_ID, Container_ID, Container_OVID, Mandatory, DataType_Kind, Value_Type, Computed, Formula, ScopeEntity_ID, ScopeEntity_OVID, Domain_ID, Domain_OVID, Logical_Type_ID, Logical_Type_OVID, Distinct_Type_ID, Distinct_Type_OVID, Structured_Type_ID, Structured_Type_OVID, Collection_Type_ID, Collection_Type_OVID, Check_Constraint_Name, Default_Value, Use_Domain_Constraint, Domain_Name, Logical_Type_Name, Structured_Type_Name, Distinct_Type_Name, Collection_Type_Name, Uses_Default, Engineer, Table_Name, PK_Flag, FK_Flag, Native_Type, Sequence, Model_ID, Model_OVID, Model_Name, T_Size, T_Precision, T_Scale, Char_Units, Personally_ID_Information, Sensitive_Information, Mask_For_None_Production, ScopeEntity_Name, Auto_Increment_Column, Identity_Column, Auto_Increment_Generate_Always, Auto_Increment_Start_With, Auto_Increment_Increment_By, Auto_Increment_Min_Value, Auto_Increment_Max_Value, Auto_Increment_Cycle, Auto_Increment_Disable_Cache, Auto_Increment_Cache, Auto_Increment_Order, Auto_Increment_Sequence_Name, Auto_Increment_Trigger_Name, Design_OVID from DMRS_COLUMNS
;
--------------------------------------------------------
--  DDL for View DMRV_COLUMN_GROUPS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_COLUMN_GROUPS" ("TABLE_ID", "TABLE_OVID", "SEQUENCE", "COLUMNGROUP_ID", "COLUMNGROUP_OVID", "COLUMNGROUP_NAME", "COLUMNS", "NOTES", "TABLE_NAME", "DESIGN_OVID") AS 
  select  Table_ID, Table_OVID, Sequence, ColumnGroup_ID, ColumnGroup_OVID, ColumnGroup_Name, Columns, Notes, Table_Name, Design_OVID from DMRS_COLUMN_GROUPS
;
--------------------------------------------------------
--  DDL for View DMRV_COLUMN_UI
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_COLUMN_UI" ("LABEL", "FORMAT_MASK", "FORM_DISPLAY_WIDTH", "FORM_MAXIMUM_WIDTH", "DISPLAY_AS", "FORM_HEIGHT", "DISPLAYED_ON_FORMS", "DISPLAYED_ON_REPORTS", "READ_ONLY", "HELP_TEXT", "OBJECT_ID", "OBJECT_OVID", "OBJECT_NAME", "DESIGN_OVID") AS 
  select  Label, Format_Mask, Form_Display_Width, Form_Maximum_Width, Display_As, Form_Height, Displayed_On_Forms, Displayed_On_Reports, Read_Only, Help_Text, Object_ID, Object_OVID, Object_Name, Design_OVID from DMRS_COLUMN_UI
;
--------------------------------------------------------
--  DDL for View DMRV_CONSTR_FK_COLUMNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CONSTR_FK_COLUMNS" ("FK_ID", "FK_OVID", "COLUMN_ID", "COLUMN_OVID", "TABLE_ID", "TABLE_OVID", "INDEX_NAME", "TABLE_NAME", "COLUMN_NAME", "SEQUENCE", "SORT_ORDER", "DESIGN_OVID") AS 
  select  Fk_ID, Fk_OVID, Column_ID, Column_OVID, Table_ID, Table_OVID, Index_Name, Table_Name, Column_Name, Sequence, Sort_Order, Design_OVID from DMRS_CONSTR_FK_COLUMNS
;
--------------------------------------------------------
--  DDL for View DMRV_CONSTR_INDEX_COLUMNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CONSTR_INDEX_COLUMNS" ("INDEX_ID", "INDEX_OVID", "COLUMN_ID", "COLUMN_OVID", "TABLE_ID", "TABLE_OVID", "INDEX_NAME", "TABLE_NAME", "COLUMN_NAME", "SEQUENCE", "SORT_ORDER", "DESIGN_OVID") AS 
  select  Index_ID, Index_OVID, Column_ID, Column_OVID, Table_ID, Table_OVID, Index_Name, Table_Name, Column_Name, Sequence, Sort_Order, Design_OVID from DMRS_CONSTR_INDEX_COLUMNS
;
--------------------------------------------------------
--  DDL for View DMRV_CONTACTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CONTACTS" ("CONTACT_ID", "CONTACT_OVID", "CONTACT_NAME", "BUSINESS_INFO_ID", "BUSINESS_INFO_OVID", "BUSINESS_INFO_NAME", "DESIGN_OVID") AS 
  select  Contact_ID, Contact_OVID, Contact_Name, Business_Info_ID, Business_Info_OVID, Business_Info_Name, Design_OVID from DMRS_CONTACTS
;
--------------------------------------------------------
--  DDL for View DMRV_CONTACT_EMAILS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CONTACT_EMAILS" ("CONTACT_ID", "CONTACT_OVID", "CONTACT_NAME", "EMAIL_ID", "EMAIL_OVID", "EMAIL_NAME", "DESIGN_OVID") AS 
  select  Contact_ID, Contact_OVID, Contact_Name, Email_ID, Email_OVID, Email_Name, Design_OVID from DMRS_CONTACT_EMAILS
;
--------------------------------------------------------
--  DDL for View DMRV_CONTACT_LOCATIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CONTACT_LOCATIONS" ("CONTACT_ID", "CONTACT_OVID", "CONTACT_NAME", "LOCATION_ID", "LOCATION_OVID", "LOCATION_NAME", "DESIGN_OVID") AS 
  select  Contact_ID, Contact_OVID, Contact_Name, Location_ID, Location_OVID, Location_Name, Design_OVID from DMRS_CONTACT_LOCATIONS
;
--------------------------------------------------------
--  DDL for View DMRV_CONTACT_RES_LOCATORS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CONTACT_RES_LOCATORS" ("CONTACT_ID", "CONTACT_OVID", "CONTACT_NAME", "RESOURCE_LOCATOR_ID", "RESOURCE_LOCATOR_OVID", "RESOURCE_LOCATOR_NAME", "DESIGN_OVID") AS 
  select  Contact_ID, Contact_OVID, Contact_Name, Resource_Locator_ID, Resource_Locator_OVID, Resource_Locator_Name, Design_OVID from DMRS_CONTACT_RES_LOCATORS
;
--------------------------------------------------------
--  DDL for View DMRV_CONTACT_TELEPHONES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CONTACT_TELEPHONES" ("CONTACT_ID", "CONTACT_OVID", "CONTACT_NAME", "TELEPHONE_ID", "TELEPHONE_OVID", "TELEPHONE_NAME", "DESIGN_OVID") AS 
  select  Contact_ID, Contact_OVID, Contact_Name, Telephone_ID, Telephone_OVID, Telephone_Name, Design_OVID from DMRS_CONTACT_TELEPHONES
;
--------------------------------------------------------
--  DDL for View DMRV_CUBES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CUBES" ("CUBE_ID", "CUBE_NAME", "CUBE_OVID", "MODEL_ID", "MODEL_NAME", "MODEL_OVID", "PART_DIMENSION_ID", "PART_DIMENSION_NAME", "PART_DIMENSION_OVID", "PART_HIERARCHY_ID", "PART_HIERARCHY_NAME", "PART_HIERARCHY_OVID", "PART_LEVEL_ID", "PART_LEVEL_NAME", "PART_LEVEL_OVID", "FULL_CUBE_SLICE_ID", "FULL_CUBE_SLICE_NAME", "FULL_CUBE_SLICE_OVID", "ORACLE_LONG_NAME", "ORACLE_PLURAL_NAME", "ORACLE_SHORT_NAME", "IS_COMPRESSED_COMPOSITES", "IS_GLOBAL_COMPOSITES", "IS_PARTITIONED", "IS_VIRTUAL", "PART_DESCRIPTION", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Cube_ID, Cube_Name, Cube_OVID, Model_ID, Model_Name, Model_OVID, Part_Dimension_ID, Part_Dimension_Name, Part_Dimension_OVID, Part_Hierarchy_ID, Part_Hierarchy_Name, Part_Hierarchy_OVID, Part_Level_ID, Part_Level_Name, Part_Level_OVID, Full_Cube_Slice_ID, Full_Cube_Slice_Name, Full_Cube_Slice_OVID, Oracle_Long_Name, Oracle_Plural_Name, Oracle_Short_Name, Is_Compressed_Composites, Is_Global_Composites, Is_Partitioned, Is_Virtual, Part_Description, Description, Design_OVID from DMRS_CUBES
;
--------------------------------------------------------
--  DDL for View DMRV_CUBE_DIMENSIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_CUBE_DIMENSIONS" ("CUBE_ID", "CUBE_NAME", "CUBE_OVID", "DIMENSION_ID", "DIMENSION_NAME", "DIMENSION_OVID", "DESIGN_OVID") AS 
  select  Cube_ID, Cube_Name, Cube_OVID, Dimension_ID, Dimension_Name, Dimension_OVID, Design_OVID from DMRS_CUBE_DIMENSIONS
;
--------------------------------------------------------
--  DDL for View DMRV_DATA_FLOW_DIAGRAM_INFOS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DATA_FLOW_DIAGRAM_INFOS" ("DIAGRAM_ID", "DIAGRAM_OVID", "DIAGRAM_NAME", "INFO_STORE_ID", "INFO_STORE_OVID", "INFO_STORE_NAME", "DESIGN_OVID") AS 
  select  Diagram_ID, Diagram_OVID, Diagram_Name, Info_Store_ID, Info_Store_OVID, Info_Store_Name, Design_OVID from DMRS_DATA_FLOW_DIAGRAM_INFOS
;
--------------------------------------------------------
--  DDL for View DMRV_DESIGNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DESIGNS" ("DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "DATE_PUBLISHED", "PUBLISHED_BY", "PERSISTENCE_VERSION", "VERSION_COMMENTS") AS 
  select  Design_ID, Design_OVID, Design_Name, Date_Published, Published_By, Persistence_Version, Version_Comments from DMRS_DESIGNS
;
--------------------------------------------------------
--  DDL for View DMRV_DIAGRAMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DIAGRAMS" ("DIAGRAM_NAME", "OBJECT_ID", "OVID", "DIAGRAM_TYPE", "IS_DISPLAY", "VISIBLE", "MASTER_DIAGRAM_ID", "MASTER_DIAGRAM_OVID", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "SUBVIEW_ID", "SUBVIEW_OVID", "SUBVIEW_NAME", "DISPLAY_ID", "DISPLAY_OVID", "DISPLAY_NAME", "NOTATION", "SHOW_ALL_DETAILS", "SHOW_NAMES_ONLY", "SHOW_ELEMENTS", "SHOW_DATATYPE", "SHOW_KEYS", "AUTOROUTE", "BOX_IN_BOX", "MASTER_DIAGRAM_NAME", "DIAGRAM_SVG", "DIAGRAM_PDF", "DESIGN_OVID") AS 
  select  Diagram_Name, Object_ID, OVID, Diagram_Type, Is_Display, Visible, Master_Diagram_ID, Master_Diagram_OVID, Model_ID, Model_OVID, Model_Name, Subview_ID, Subview_OVID, Subview_Name, Display_ID, Display_OVID, Display_Name, Notation, Show_All_Details, Show_Names_Only, Show_Elements, Show_Datatype, Show_Keys, Autoroute, Box_In_box, Master_Diagram_Name, Diagram_SVG, Diagram_PDF, Design_OVID from DMRS_DIAGRAMS
;
--------------------------------------------------------
--  DDL for View DMRV_DIAGRAM_ELEMENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DIAGRAM_ELEMENTS" ("NAME", "TYPE", "GEOMETRY_TYPE", "OBJECT_ID", "OVID", "VIEW_ID", "SOURCE_ID", "SOURCE_OVID", "SOURCE_VIEW_ID", "TARGET_ID", "TARGET_OVID", "TARGET_VIEW_ID", "MODEL_ID", "MODEL_OVID", "LOCATION_X", "HEIGHT", "WIDTH", "BG_COLOR", "FG_COLOR", "USE_DEFAULT_COLOR", "FORMATTING", "POINTS", "DIAGRAM_OVID", "DIAGRAM_ID", "DIAGRAM_NAME", "SOURCE_NAME", "TARGET_NAME", "MODEL_NAME", "DESIGN_OVID") AS 
  select  Name, Type, Geometry_Type, Object_ID, OVID, View_ID, Source_ID, Source_OVID, Source_View_ID, Target_ID, Target_OVID, Target_View_ID, Model_ID, Model_OVID, Location_X, Height, Width, BG_Color, FG_Color, Use_Default_Color, Formatting, Points, Diagram_OVID, Diagram_ID, Diagram_Name, Source_Name, Target_Name, Model_Name, Design_OVID from DMRS_DIAGRAM_ELEMENTS
;
--------------------------------------------------------
--  DDL for View DMRV_DIMENSIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DIMENSIONS" ("DIMENSION_ID", "DIMENSION_NAME", "DIMENSION_OVID", "MODEL_ID", "MODEL_NAME", "MODEL_OVID", "BASE_ENTITY_ID", "BASE_ENTITY_NAME", "BASE_ENTITY_OVID", "BASE_LEVEL_ID", "BASE_LEVEL_NAME", "BASE_LEVEL_OVID", "ORACLE_LONG_NAME", "ORACLE_PLURAL_NAME", "ORACLE_SHORT_NAME", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Dimension_ID, Dimension_Name, Dimension_OVID, Model_ID, Model_Name, Model_OVID, Base_Entity_ID, Base_Entity_Name, Base_Entity_OVID, Base_Level_ID, Base_Level_Name, Base_Level_OVID, Oracle_Long_Name, Oracle_Plural_Name, Oracle_Short_Name, Description, Design_OVID from DMRS_DIMENSIONS
;
--------------------------------------------------------
--  DDL for View DMRV_DIMENSION_CALC_ATTRS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DIMENSION_CALC_ATTRS" ("DIMENSION_ID", "DIMENSION_NAME", "DIMENSION_OVID", "CALC_ATTRIBUTE_ID", "CALC_ATTRIBUTE_NAME", "CALC_ATTRIBUTE_OVID", "CALCULATED_EXPR", "DESIGN_OVID") AS 
  select  Dimension_ID, Dimension_Name, Dimension_OVID, Calc_Attribute_ID, Calc_Attribute_Name, Calc_Attribute_OVID, Calculated_Expr, Design_OVID from DMRS_DIMENSION_CALC_ATTRS
;
--------------------------------------------------------
--  DDL for View DMRV_DIMENSION_LEVELS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DIMENSION_LEVELS" ("DIMENSION_ID", "DIMENSION_NAME", "DIMENSION_OVID", "LEVEL_ID", "LEVEL_NAME", "LEVEL_OVID", "DESIGN_OVID") AS 
  select  Dimension_ID, Dimension_Name, Dimension_OVID, Level_ID, Level_Name, Level_OVID, Design_OVID from DMRS_DIMENSION_LEVELS
;
--------------------------------------------------------
--  DDL for View DMRV_DISTINCT_TYPES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DISTINCT_TYPES" ("DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "DISTINCT_TYPE_ID", "DISTINCT_TYPE_OVID", "DISTINCT_TYPE_NAME", "LOGICAL_TYPE_ID", "LOGICAL_TYPE_OVID", "LOGICAL_TYPE_NAME", "T_SIZE", "T_PRECISION", "T_SCALE") AS 
  select  Design_ID, Design_OVID, Design_Name, Distinct_Type_ID, Distinct_Type_OVID, Distinct_Type_Name, Logical_Type_ID, Logical_Type_OVID, Logical_Type_Name, T_Size, T_Precision, T_Scale from DMRS_DISTINCT_TYPES
;
--------------------------------------------------------
--  DDL for View DMRV_DOCUMENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DOCUMENTS" ("DOCUMENT_ID", "DOCUMENT_OVID", "DOCUMENT_NAME", "BUSINESS_INFO_ID", "BUSINESS_INFO_OVID", "BUSINESS_INFO_NAME", "PARENT_ID", "PARENT_OVID", "PARENT_NAME", "DOC_REFERENCE", "DOC_TYPE", "DESIGN_OVID") AS 
  select  Document_ID, Document_OVID, Document_Name, Business_Info_ID, Business_Info_OVID, Business_Info_Name, Parent_ID, Parent_OVID, Parent_Name, Doc_Reference, Doc_Type, Design_OVID from DMRS_DOCUMENTS
;
--------------------------------------------------------
--  DDL for View DMRV_DOCUMENT_ELEMENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DOCUMENT_ELEMENTS" ("DOCUMENT_ID", "DOCUMENT_OVID", "DOCUMENT_NAME", "ELEMENT_ID", "ELEMENT_OVID", "ELEMENT_NAME", "ELEMENT_TYPE", "DESIGN_OVID") AS 
  select  Document_ID, Document_OVID, Document_Name, Element_ID, Element_OVID, Element_Name, Element_Type, Design_OVID from DMRS_DOCUMENT_ELEMENTS
;
--------------------------------------------------------
--  DDL for View DMRV_DOMAINS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DOMAINS" ("DOMAIN_ID", "DOMAIN_NAME", "OVID", "SYNONYMS", "LOGICAL_TYPE_ID", "LOGICAL_TYPE_OVID", "T_SIZE", "T_PRECISION", "T_SCALE", "NATIVE_TYPE", "LT_NAME", "DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "DEFAULT_VALUE", "UNIT_OF_MEASURE", "CHAR_UNITS") AS 
  select  Domain_ID, Domain_Name, OVID, Synonyms, Logical_Type_ID, Logical_Type_OVID, T_Size, T_Precision, T_Scale, Native_Type, LT_Name, Design_ID, Design_OVID, Design_Name, Default_Value, Unit_Of_Measure, Char_Units from DMRS_DOMAINS
;
--------------------------------------------------------
--  DDL for View DMRV_DOMAIN_AVT
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DOMAIN_AVT" ("DOMAIN_ID", "DOMAIN_OVID", "SEQUENCE", "VALUE", "SHORT_DESCRIPTION", "DOMAIN_NAME", "DESIGN_OVID") AS 
  select  Domain_ID, Domain_OVID, Sequence, Value, Short_Description, Domain_Name, Design_OVID from DMRS_DOMAIN_AVT
;
--------------------------------------------------------
--  DDL for View DMRV_DOMAIN_CHECK_CONSTRAINTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DOMAIN_CHECK_CONSTRAINTS" ("DOMAIN_ID", "DOMAIN_OVID", "SEQUENCE", "TEXT", "DATABASE_TYPE", "DOMAIN_NAME", "DESIGN_OVID") AS 
  select  Domain_ID, Domain_OVID, Sequence, Text, Database_Type, Domain_Name, Design_OVID from DMRS_DOMAIN_CHECK_CONSTRAINTS
;
--------------------------------------------------------
--  DDL for View DMRV_DOMAIN_VALUE_RANGES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_DOMAIN_VALUE_RANGES" ("DOMAIN_ID", "DOMAIN_OVID", "SEQUENCE", "BEGIN_VALUE", "END_VALUE", "SHORT_DESCRIPTION", "DOMAIN_NAME", "DESIGN_OVID") AS 
  select  Domain_ID, Domain_OVID, Sequence, Begin_Value, End_Value, Short_Description, Domain_Name, Design_OVID from DMRS_DOMAIN_VALUE_RANGES
;
--------------------------------------------------------
--  DDL for View DMRV_EMAILS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_EMAILS" ("EMAIL_ID", "EMAIL_OVID", "EMAIL_NAME", "BUSINESS_INFO_ID", "BUSINESS_INFO_OVID", "BUSINESS_INFO_NAME", "EMAIL_ADDRESS", "EMAIL_TYPE", "DESIGN_OVID") AS 
  select  Email_ID, Email_OVID, Email_Name, Business_Info_ID, Business_Info_OVID, Business_Info_Name, Email_Address, Email_Type, Design_OVID from DMRS_EMAILS
;
--------------------------------------------------------
--  DDL for View DMRV_ENTITIES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_ENTITIES" ("ENTITY_NAME", "OBJECT_ID", "OVID", "IMPORT_ID", "MODEL_ID", "MODEL_OVID", "STRUCTURED_TYPE_ID", "STRUCTURED_TYPE_OVID", "STRUCTURED_TYPE_NAME", "NUMBER_DATA_ELEMENTS", "CLASSIFICATION_TYPE_ID", "CLASSIFICATION_TYPE_OVID", "CLASSIFICATION_TYPE_NAME", "ALLOW_TYPE_SUBSTITUTION", "MIN_VOLUME", "EXPECTED_VOLUME", "MAX_VOLUME", "GROWTH_RATE_PERCENTS", "GROWTH_RATE_INTERVAL", "NORMAL_FORM", "TEMPORARY_OBJECT_SCOPE", "ADEQUATELY_NORMALIZED", "SUBSTITUTION_PARENT", "SUBSTITUTION_PARENT_OVID", "SYNONYMS", "SYNONYM_TO_DISPLAY", "PREFERRED_ABBREVIATION", "SUPERTYPEENTITY_ID", "SUPERTYPEENTITY_OVID", "ENGINEERING_STRATEGY", "OWNER", "ENTITY_SOURCE", "MODEL_NAME", "SUBSTITUTION_PARENT_NAME", "SUPERTYPEENTITY_NAME", "DESIGN_OVID") AS 
  select  Entity_Name, Object_ID, OVID, Import_ID, Model_ID, Model_OVID, Structured_Type_ID, Structured_Type_OVID, Structured_Type_Name, Number_Data_Elements, Classification_Type_ID, Classification_Type_OVID, Classification_Type_Name, Allow_Type_Substitution, Min_Volume, Expected_Volume, Max_Volume, Growth_Rate_Percents, Growth_Rate_Interval, Normal_Form, Temporary_Object_Scope, Adequately_Normalized, Substitution_Parent, Substitution_Parent_OVID, Synonyms, Synonym_To_Display, Preferred_Abbreviation, SuperTypeEntity_ID, SuperTypeEntity_OVID, Engineering_Strategy, Owner, Entity_Source, Model_Name, Substitution_Parent_Name, SuperTypeEntity_Name, Design_OVID from DMRS_ENTITIES
;
--------------------------------------------------------
--  DDL for View DMRV_ENTITYVIEWS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_ENTITYVIEWS" ("ENTITYVIEW_NAME", "OBJECT_ID", "OVID", "MODEL_ID", "MODEL_OVID", "IMPORT_ID", "STRUCTURED_TYPE_ID", "STRUCTURED_TYPE_OVID", "STRUCTURED_TYPE_NAME", "USER_DEFINED", "VIEW_TYPE", "MODEL_NAME", "DESIGN_OVID") AS 
  select  EntityView_Name, Object_ID, OVID, Model_ID, Model_OVID, Import_ID, Structured_Type_ID, Structured_Type_OVID, Structured_Type_Name, User_Defined, View_Type, Model_Name, Design_OVID from DMRS_ENTITYVIEWS
;
--------------------------------------------------------
--  DDL for View DMRV_EVENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_EVENTS" ("EVENT_ID", "EVENT_OVID", "EVENT_NAME", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "FLOW_ID", "FLOW_OVID", "FLOW_NAME", "EVENT_TYPE", "TIMES_WHEN_RUN", "DAY_OF_WEEK", "MONTHS", "FREQUENCY", "TIME_FREQUENCY", "MINUTE", "HOUR", "DAY_OF_MONTH", "QUARTER", "YEAR", "ON_DAY", "AT_TIME", "FISCAL", "TEXT", "DESIGN_OVID") AS 
  select  Event_ID, Event_OVID, Event_Name, Model_ID, Model_OVID, Model_Name, Flow_ID, Flow_OVID, Flow_Name, Event_Type, Times_When_Run, Day_Of_Week, Months, Frequency, Time_Frequency, Minute, Hour, Day_Of_Month, Quarter, Year, On_Day, At_Time, Fiscal, Text, Design_OVID from DMRS_EVENTS
;
--------------------------------------------------------
--  DDL for View DMRV_EXTERNAL_AGENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_EXTERNAL_AGENTS" ("EXTERNAL_AGENT_ID", "EXTERNAL_AGENT_OVID", "EXTERNAL_AGENT_NAME", "DIAGRAM_ID", "DIAGRAM_OVID", "DIAGRAM_NAME", "EXTERNAL_AGENT_TYPE", "FILE_LOCATION", "FILE_SOURCE", "FILE_NAME", "FILE_TYPE", "FILE_OWNER", "DATA_CAPTURE_TYPE", "FIELD_SEPARATOR", "TEXT_DELIMITER", "SKIP_RECORDS", "SELF_DESCRIBING", "DESIGN_OVID") AS 
  select  External_Agent_ID, External_Agent_OVID, External_Agent_Name, Diagram_ID, Diagram_OVID, Diagram_Name, External_Agent_Type, File_Location, File_Source, File_Name, File_Type, File_Owner, Data_Capture_Type, Field_Separator, Text_Delimiter, Skip_Records, Self_Describing, Design_OVID from DMRS_EXTERNAL_AGENTS
;
--------------------------------------------------------
--  DDL for View DMRV_EXTERNAL_DATAS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_EXTERNAL_DATAS" ("EXTERNAL_DATA_ID", "EXTERNAL_DATA_OVID", "EXTERNAL_DATA_NAME", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "LOGICAL_TYPE_ID", "LOGICAL_TYPE_OVID", "LOGICAL_TYPE_NAME", "RECORD_STRUCTURE_TYPE_ID", "RECORD_STRUCTURE_TYPE_OVID", "RECORD_STRUCTURE_TYPE_NAME", "STARTING_POS", "DESCRIPTION", "DESIGN_OVID") AS 
  select  External_Data_ID, External_Data_OVID, External_Data_Name, Model_ID, Model_OVID, Model_Name, Logical_Type_ID, Logical_Type_OVID, Logical_Type_Name, Record_Structure_Type_ID, Record_Structure_Type_OVID, Record_Structure_Type_Name, Starting_Pos, Description, Design_OVID from DMRS_EXTERNAL_DATAS
;
--------------------------------------------------------
--  DDL for View DMRV_EXT_AGENT_EXT_DATAS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_EXT_AGENT_EXT_DATAS" ("EXTERNAL_AGENT_ID", "EXTERNAL_AGENT_OVID", "EXTERNAL_AGENT_NAME", "EXTERNAL_DATA_ID", "EXTERNAL_DATA_OVID", "EXTERNAL_DATA_NAME", "DESIGN_OVID") AS 
  select  External_Agent_ID, External_Agent_OVID, External_Agent_Name, External_Data_ID, External_Data_OVID, External_Data_Name, Design_OVID from DMRS_EXT_AGENT_EXT_DATAS
;
--------------------------------------------------------
--  DDL for View DMRV_EXT_AGENT_FLOWS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_EXT_AGENT_FLOWS" ("EXTERNAL_AGENT_ID", "EXTERNAL_AGENT_OVID", "EXTERNAL_AGENT_NAME", "FLOW_ID", "FLOW_OVID", "FLOW_NAME", "INCOMING_OUTGOING_FLAG", "DESIGN_OVID") AS 
  select  External_Agent_ID, External_Agent_OVID, External_Agent_Name, Flow_ID, Flow_OVID, Flow_Name, Incoming_Outgoing_Flag, Design_OVID from DMRS_EXT_AGENT_FLOWS
;
--------------------------------------------------------
--  DDL for View DMRV_FACT_ENTITIES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_FACT_ENTITIES" ("CUBE_ID", "CUBE_NAME", "CUBE_OVID", "ENTITY_ID", "ENTITY_NAME", "ENTITY_OVID", "DESIGN_OVID") AS 
  select  Cube_ID, Cube_Name, Cube_OVID, Entity_ID, Entity_Name, Entity_OVID, Design_OVID from DMRS_FACT_ENTITIES
;
--------------------------------------------------------
--  DDL for View DMRV_FACT_ENTITIES_JOINS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_FACT_ENTITIES_JOINS" ("JOIN_ID", "JOIN_NAME", "JOIN_OVID", "CUBE_ID", "CUBE_NAME", "CUBE_OVID", "LEFT_ENTITY_ID", "LEFT_ENTITY_NAME", "LEFT_ENTITY_OVID", "RIGHT_ENTITY_ID", "RIGHT_ENTITY_NAME", "RIGHT_ENTITY_OVID", "DESIGN_OVID") AS 
  select  Join_ID, Join_Name, Join_OVID, Cube_ID, Cube_Name, Cube_OVID, Left_Entity_ID, Left_Entity_Name, Left_Entity_OVID, Right_Entity_ID, Right_Entity_Name, Right_Entity_OVID, Design_OVID from DMRS_FACT_ENTITIES_JOINS
;
--------------------------------------------------------
--  DDL for View DMRV_FLOWS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_FLOWS" ("FLOW_ID", "FLOW_OVID", "FLOW_NAME", "DIAGRAM_ID", "DIAGRAM_OVID", "DIAGRAM_NAME", "EVENT_ID", "EVENT_OVID", "EVENT_NAME", "SOURCE_ID", "SOURCE_OVID", "SOURCE_NAME", "DESTINATION_ID", "DESTINATION_OVID", "DESTINATION_NAME", "PARENT_ID", "PARENT_OVID", "PARENT_NAME", "SOURCE_TYPE", "DESTINATION_TYPE", "SYSTEM_OBJECTIVE", "LOGGING", "OP_CREATE", "OP_READ", "OP_UPDATE", "OP_DELETE", "CRUD_CODE", "DESIGN_OVID") AS 
  select  Flow_ID, Flow_OVID, Flow_Name, Diagram_ID, Diagram_OVID, Diagram_Name, Event_ID, Event_OVID, Event_Name, Source_ID, Source_OVID, Source_Name, Destination_ID, Destination_OVID, Destination_Name, Parent_ID, Parent_OVID, Parent_Name, Source_Type, Destination_Type, System_Objective, Logging, Op_Create, Op_Read, Op_Update, Op_Delete, CRUD_Code, Design_OVID from DMRS_FLOWS
;
--------------------------------------------------------
--  DDL for View DMRV_FLOW_INFO_STRUCTURES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_FLOW_INFO_STRUCTURES" ("FLOW_ID", "FLOW_OVID", "FLOW_NAME", "INFO_STRUCTURE_ID", "INFO_STRUCTURE_OVID", "INFO_STRUCTURE_NAME", "DESIGN_OVID") AS 
  select  Flow_ID, Flow_OVID, Flow_Name, Info_Structure_ID, Info_Structure_OVID, Info_Structure_Name, Design_OVID from DMRS_FLOW_INFO_STRUCTURES
;
--------------------------------------------------------
--  DDL for View DMRV_FOREIGNKEYS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_FOREIGNKEYS" ("FK_NAME", "MODEL_ID", "MODEL_OVID", "OBJECT_ID", "OVID", "IMPORT_ID", "CHILD_TABLE_NAME", "REFERRED_TABLE_NAME", "ENGINEER", "DELETE_RULE", "CHILD_TABLE_ID", "CHILD_TABLE_OVID", "REFERRED_TABLE_ID", "REFERRED_TABLE_OVID", "REFERRED_KEY_ID", "REFERRED_KEY_OVID", "NUMBER_OF_COLUMNS", "MANDATORY", "TRANSFERABLE", "IN_ARC", "ARC_ID", "MODEL_NAME", "REFERRED_KEY_NAME", "DESIGN_OVID") AS 
  select  FK_Name, Model_ID, Model_OVID, Object_ID, OVID, Import_ID, Child_Table_Name, Referred_Table_Name, Engineer, Delete_Rule, Child_Table_ID, Child_Table_OVID, Referred_Table_ID, Referred_Table_OVID, Referred_Key_ID, Referred_Key_OVID, Number_Of_Columns, Mandatory, Transferable, In_Arc, Arc_ID, Model_Name, Referred_Key_Name, Design_OVID from DMRS_FOREIGNKEYS
;
--------------------------------------------------------
--  DDL for View DMRV_GLOSSARIES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_GLOSSARIES" ("GLOSSARY_ID", "GLOSSARY_OVID", "GLOSSARY_NAME", "FILE_NAME", "DESCRIPTION", "INCOMPLETE_MODIFIERS", "CASE_SENSITIVE", "UNIQUE_ABBREVS", "SEPARATOR_TYPE", "SEPARATOR_CHAR", "DATE_PUBLISHED", "PUBLISHED_BY", "PERSISTENCE_VERSION", "VERSION_COMMENTS") AS 
  select  Glossary_ID, Glossary_OVID, Glossary_Name, File_Name, Description, Incomplete_Modifiers, Case_Sensitive, Unique_Abbrevs, Separator_Type, Separator_Char, Date_Published, Published_By, Persistence_Version, Version_Comments from DMRS_GLOSSARIES
;
--------------------------------------------------------
--  DDL for View DMRV_GLOSSARY_TERMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_GLOSSARY_TERMS" ("TERM_ID", "TERM_OVID", "TERM_NAME", "SHORT_DESCRIPTION", "ABBREV", "ALT_ABBREV", "PRIME_WORD", "CLASS_WORD", "MODIFIER", "QUALIFIER", "GLOSSARY_ID", "GLOSSARY_OVID", "GLOSSARY_NAME") AS 
  select  Term_ID, Term_OVID, Term_Name, Short_Description, Abbrev, Alt_Abbrev, Prime_Word, Class_Word, Modifier, Qualifier, Glossary_ID, Glossary_OVID, Glossary_Name from DMRS_GLOSSARY_TERMS
;
--------------------------------------------------------
--  DDL for View DMRV_HIERARCHIES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_HIERARCHIES" ("HIERARCHY_ID", "HIERARCHY_NAME", "HIERARCHY_OVID", "MODEL_ID", "MODEL_NAME", "MODEL_OVID", "DIMENSION_ID", "DIMENSION_NAME", "DIMENSION_OVID", "ORACLE_LONG_NAME", "ORACLE_PLURAL_NAME", "ORACLE_SHORT_NAME", "IS_DEFAULT_HIERARCHY", "IS_RAGGED_HIERARCHY", "IS_VALUE_BASED_HIERARCHY", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Hierarchy_ID, Hierarchy_Name, Hierarchy_OVID, Model_ID, Model_Name, Model_OVID, Dimension_ID, Dimension_Name, Dimension_OVID, Oracle_Long_Name, Oracle_Plural_Name, Oracle_Short_Name, Is_Default_Hierarchy, Is_Ragged_Hierarchy, Is_Value_Based_Hierarchy, Description, Design_OVID from DMRS_HIERARCHIES
;
--------------------------------------------------------
--  DDL for View DMRV_HIERARCHY_LEVELS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_HIERARCHY_LEVELS" ("HIERARCHY_ID", "HIERARCHY_NAME", "HIERARCHY_OVID", "LEVEL_ID", "LEVEL_NAME", "LEVEL_OVID", "DESIGN_OVID") AS 
  select  Hierarchy_ID, Hierarchy_Name, Hierarchy_OVID, Level_ID, Level_Name, Level_OVID, Design_OVID from DMRS_HIERARCHY_LEVELS
;
--------------------------------------------------------
--  DDL for View DMRV_HIERARCHY_ROLLUP_LINKS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_HIERARCHY_ROLLUP_LINKS" ("HIERARCHY_ID", "HIERARCHY_NAME", "HIERARCHY_OVID", "ROLLUP_LINK_ID", "ROLLUP_LINK_NAME", "ROLLUP_LINK_OVID", "DESIGN_OVID") AS 
  select  Hierarchy_ID, Hierarchy_Name, Hierarchy_OVID, Rollup_Link_ID, Rollup_Link_Name, Rollup_Link_OVID, Design_OVID from DMRS_HIERARCHY_ROLLUP_LINKS
;
--------------------------------------------------------
--  DDL for View DMRV_INDEXES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_INDEXES" ("INDEX_NAME", "OBJECT_ID", "OVID", "IMPORT_ID", "CONTAINER_ID", "CONTAINER_OVID", "STATE", "FUNCTIONAL", "EXPRESSION", "ENGINEER", "TABLE_NAME", "SPATIAL_INDEX", "SPATIAL_LAYER_TYPE", "GEODETIC_INDEX", "NUMBER_OF_DIMENSIONS", "DESIGN_OVID") AS 
  select  Index_Name, Object_ID, OVID, Import_ID, Container_ID, Container_OVID, State, Functional, Expression, Engineer, Table_Name, Spatial_Index, Spatial_Layer_Type, Geodetic_Index, Number_Of_Dimensions, Design_OVID from DMRS_INDEXES
;
--------------------------------------------------------
--  DDL for View DMRV_INFO_STORES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_INFO_STORES" ("INFO_STORE_ID", "INFO_STORE_OVID", "INFO_STORE_NAME", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "INFO_STORE_TYPE", "OBJECT_TYPE", "IMPLEMENTATION_NAME", "LOCATION", "SOURCE", "FILE_NAME", "FILE_TYPE", "OWNER", "RDBMS_SITE", "SCOPE", "TRANSFER_TYPE", "FIELD_SEPARATOR", "TEXT_DELIMITER", "SKIP_RECORDS", "SELF_DESCRIBING", "SYSTEM_OBJECTIVE", "DESIGN_OVID") AS 
  select  Info_Store_ID, Info_Store_OVID, Info_Store_Name, Model_ID, Model_OVID, Model_Name, Info_Store_Type, Object_Type, Implementation_Name, Location, Source, File_Name, File_Type, Owner, Rdbms_Site, Scope, Transfer_Type, Field_Separator, Text_Delimiter, Skip_Records, Self_Describing, System_Objective, Design_OVID from DMRS_INFO_STORES
;
--------------------------------------------------------
--  DDL for View DMRV_INFO_STRUCTURES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_INFO_STRUCTURES" ("INFO_STRUCTURE_ID", "INFO_STRUCTURE_OVID", "INFO_STRUCTURE_NAME", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "GROWTH_RATE_UNIT", "GROWTH_RATE_PERCENT", "VOLUME", "DESIGN_OVID") AS 
  select  Info_Structure_ID, Info_Structure_OVID, Info_Structure_Name, Model_ID, Model_OVID, Model_Name, Growth_Rate_Unit, Growth_Rate_Percent, Volume, Design_OVID from DMRS_INFO_STRUCTURES
;
--------------------------------------------------------
--  DDL for View DMRV_INFO_STRUCT_ATTRS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_INFO_STRUCT_ATTRS" ("INFO_STRUCTURE_ID", "INFO_STRUCTURE_OVID", "INFO_STRUCTURE_NAME", "ATTRIBUTE_ID", "ATTRIBUTE_OVID", "ATTRIBUTE_NAME", "ENTITY_ID", "ENTITY_OVID", "ENTITY_NAME", "DESIGN_OVID") AS 
  select  Info_Structure_ID, Info_Structure_OVID, Info_Structure_Name, Attribute_ID, Attribute_OVID, Attribute_Name, Entity_ID, Entity_OVID, Entity_Name, Design_OVID from DMRS_INFO_STRUCT_ATTRS
;
--------------------------------------------------------
--  DDL for View DMRV_KEYS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_KEYS" ("KEY_NAME", "OBJECT_ID", "OVID", "IMPORT_ID", "CONTAINER_ID", "CONTAINER_OVID", "STATE", "SYNONYMS", "ENTITY_NAME", "DESIGN_OVID") AS 
  select  Key_Name, Object_ID, OVID, Import_ID, Container_ID, Container_OVID, State, Synonyms, Entity_Name, Design_OVID from DMRS_KEYS
;
--------------------------------------------------------
--  DDL for View DMRV_KEY_ATTRIBUTES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_KEY_ATTRIBUTES" ("KEY_ID", "KEY_OVID", "ATTRIBUTE_ID", "ATTRIBUTE_OVID", "ENTITY_ID", "ENTITY_OVID", "KEY_NAME", "ENTITY_NAME", "ATTRIBUTE_NAME", "SEQUENCE", "RELATIONSHIP_ID", "RELATIONSHIP_OVID", "RELATIONSHIP_NAME", "DESIGN_OVID") AS 
  select  Key_ID, Key_OVID, Attribute_ID, Attribute_OVID, Entity_ID, Entity_OVID, Key_Name, Entity_Name, Attribute_Name, Sequence, Relationship_ID, Relationship_OVID, Relationship_Name, Design_OVID from DMRS_KEY_ATTRIBUTES
;
--------------------------------------------------------
--  DDL for View DMRV_KEY_ELEMENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_KEY_ELEMENTS" ("KEY_ID", "KEY_OVID", "TYPE", "ELEMENT_ID", "ELEMENT_OVID", "ELEMENT_NAME", "SEQUENCE", "SOURCE_LABEL", "TARGET_LABEL", "ENTITY_ID", "KEY_NAME", "ENTITY_OVID", "ENTITY_NAME", "DESIGN_OVID") AS 
  select  Key_ID, Key_OVID, Type, Element_ID, Element_OVID, Element_Name, Sequence, Source_Label, Target_Label, Entity_ID, Key_Name, Entity_OVID, Entity_Name, Design_OVID from DMRS_KEY_ELEMENTS
;
--------------------------------------------------------
--  DDL for View DMRV_LARGE_TEXT
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_LARGE_TEXT" ("OBJECT_ID", "OVID", "OBJECT_NAME", "TYPE", "TEXT", "DESIGN_OVID") AS 
  select  Object_ID, OVID, Object_Name, Type, Text, Design_OVID from DMRS_LARGE_TEXT
;
--------------------------------------------------------
--  DDL for View DMRV_LEVELS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_LEVELS" ("LEVEL_ID", "LEVEL_NAME", "LEVEL_OVID", "MODEL_ID", "MODEL_NAME", "MODEL_OVID", "ENTITY_ID", "ENTITY_NAME", "ENTITY_OVID", "NAME_COLUMN_ID", "NAME_COLUMN_NAME", "NAME_COLUMN_OVID", "VALUE_COLUMN_ID", "VALUE_COLUMN_NAME", "VALUE_COLUMN_OVID", "ORACLE_LONG_NAME", "ORACLE_PLURAL_NAME", "ORACLE_SHORT_NAME", "ROOT_IDENTIFICATION", "IDENTIFICATION_VALUE", "SELECTION_CRITERIA", "SELECTION_CRITERIA_DESCRIPTION", "IS_VALUE_BASED_HIERARCHY", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Level_ID, Level_Name, Level_OVID, Model_ID, Model_Name, Model_OVID, Entity_ID, Entity_Name, Entity_OVID, Name_Column_ID, Name_Column_Name, Name_Column_OVID, Value_Column_ID, Value_Column_Name, Value_Column_OVID, Oracle_Long_Name, Oracle_Plural_Name, Oracle_Short_Name, Root_Identification, Identification_Value, Selection_Criteria, Selection_Criteria_Description, Is_Value_Based_Hierarchy, Description, Design_OVID from DMRS_LEVELS
;
--------------------------------------------------------
--  DDL for View DMRV_LEVEL_ATTRS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_LEVEL_ATTRS" ("LEVEL_ID", "LEVEL_NAME", "LEVEL_OVID", "ATTRIBUTE_ID", "ATTRIBUTE_NAME", "ATTRIBUTE_OVID", "IS_DEFAULT_ATTR", "IS_LEVEL_KEY_ATTR", "IS_PARENT_KEY_ATTR", "IS_DESCRIPTIVE_KEY_ATTR", "IS_CALCULATED_ATTR", "DESCRIPTIVE_NAME", "DESCRIPTIVE_IS_INDEXED", "DESCRIPTIVE_SLOW_CHANGING", "CALCULATED_EXPR", "DESIGN_OVID") AS 
  select  Level_ID, Level_Name, Level_OVID, Attribute_ID, Attribute_Name, Attribute_OVID, Is_Default_Attr, Is_Level_Key_Attr, Is_Parent_Key_Attr, Is_Descriptive_Key_Attr, Is_Calculated_Attr, Descriptive_Name, Descriptive_Is_Indexed, Descriptive_Slow_Changing, Calculated_Expr, Design_OVID from DMRS_LEVEL_ATTRS
;
--------------------------------------------------------
--  DDL for View DMRV_LOCATIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_LOCATIONS" ("LOCATION_ID", "LOCATION_OVID", "LOCATION_NAME", "BUSINESS_INFO_ID", "BUSINESS_INFO_OVID", "BUSINESS_INFO_NAME", "LOC_ADDRESS", "LOC_CITY", "LOC_POST_CODE", "LOC_AREA", "LOC_COUNTRY", "LOC_TYPE", "DESIGN_OVID") AS 
  select  Location_ID, Location_OVID, Location_Name, Business_Info_ID, Business_Info_OVID, Business_Info_Name, Loc_Address, Loc_City, Loc_Post_Code, Loc_Area, Loc_Country, Loc_Type, Design_OVID from DMRS_LOCATIONS
;
--------------------------------------------------------
--  DDL for View DMRV_LOGICAL_TO_NATIVE
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_LOGICAL_TO_NATIVE" ("DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "LOGICAL_TYPE_ID", "LOGICAL_TYPE_OVID", "LT_NAME", "NATIVE_TYPE", "RDBMS_TYPE", "RDBMS_VERSION", "HAS_SIZE", "HAS_PRECISION", "HAS_SCALE") AS 
  select  Design_ID, Design_OVID, Design_Name, Logical_Type_ID, Logical_Type_OVID, LT_Name, Native_Type, RDBMS_Type, RDBMS_Version, Has_Size, Has_Precision, Has_Scale from DMRS_LOGICAL_TO_NATIVE
;
--------------------------------------------------------
--  DDL for View DMRV_LOGICAL_TYPES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_LOGICAL_TYPES" ("DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "LOGICAL_TYPE_ID", "OVID", "LT_NAME") AS 
  select  Design_ID, Design_OVID, Design_Name, Logical_Type_ID, OVID, LT_Name from DMRS_LOGICAL_TYPES
;
--------------------------------------------------------
--  DDL for View DMRV_MAPPINGS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MAPPINGS" ("LOGICAL_MODEL_ID", "LOGICAL_MODEL_OVID", "LOGICAL_MODEL_NAME", "LOGICAL_OBJECT_ID", "LOGICAL_OBJECT_OVID", "LOGICAL_OBJECT_NAME", "LOGICAL_OBJECT_TYPE", "RELATIONAL_MODEL_ID", "RELATIONAL_MODEL_OVID", "RELATIONAL_MODEL_NAME", "RELATIONAL_OBJECT_ID", "RELATIONAL_OBJECT_OVID", "RELATIONAL_OBJECT_NAME", "RELATIONAL_OBJECT_TYPE", "ENTITY_ID", "ENTITY_OVID", "ENTITY_NAME", "TABLE_ID", "TABLE_OVID", "TABLE_NAME", "DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME") AS 
  select  Logical_Model_ID, Logical_Model_OVID, Logical_Model_Name, Logical_Object_ID, Logical_Object_OVID, Logical_Object_Name, Logical_Object_Type, Relational_Model_ID, Relational_Model_OVID, Relational_Model_Name, Relational_Object_ID, Relational_Object_OVID, Relational_Object_Name, Relational_Object_Type, Entity_ID, Entity_OVID, Entity_Name, Table_ID, Table_OVID, Table_Name, Design_ID, Design_OVID, Design_Name from DMRS_MAPPINGS
;
--------------------------------------------------------
--  DDL for View DMRV_MAPPING_TARGETS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MAPPING_TARGETS" ("OBJECT_ID", "OBJECT_OVID", "OBJECT_NAME", "TARGET_ID", "TARGET_OVID", "TARGET_NAME", "OBJECT_TYPE", "TARGET_TYPE", "TRANSFORMATION_TYPE", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Object_ID, Object_OVID, Object_Name, Target_ID, Target_OVID, Target_Name, Object_Type, Target_Type, Transformation_Type, Description, Design_OVID from DMRS_MAPPING_TARGETS
;
--------------------------------------------------------
--  DDL for View DMRV_MAPPING_TARGET_SOURCES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MAPPING_TARGET_SOURCES" ("OBJECT_ID", "OBJECT_OVID", "OBJECT_NAME", "TARGET_ID", "TARGET_OVID", "TARGET_NAME", "SOURCE_ID", "SOURCE_OVID", "SOURCE_NAME", "OBJECT_TYPE", "TARGET_TYPE", "SOURCE_TYPE", "DESIGN_OVID") AS 
  select  Object_ID, Object_OVID, Object_Name, Target_ID, Target_OVID, Target_Name, Source_ID, Source_OVID, Source_Name, Object_Type, Target_Type, Source_Type, Design_OVID from DMRS_MAPPING_TARGET_SOURCES
;
--------------------------------------------------------
--  DDL for View DMRV_MEASURES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MEASURES" ("MEASURE_ID", "MEASURE_NAME", "MEASURE_OVID", "MODEL_ID", "MODEL_NAME", "MODEL_OVID", "CUBE_ID", "CUBE_NAME", "CUBE_OVID", "FACT_OBJECT_ID", "FACT_OBJECT_NAME", "FACT_OBJECT_OVID", "ORACLE_LONG_NAME", "ORACLE_PLURAL_NAME", "ORACLE_SHORT_NAME", "FACT_OBJECT_TYPE", "ADDITIVITY_TYPE", "IS_FACT_DIMENSION", "IS_FORMULA", "IS_CUSTOM_FORMULA", "FORMULA", "WHERE_CLAUSE", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Measure_ID, Measure_Name, Measure_OVID, Model_ID, Model_Name, Model_OVID, Cube_ID, Cube_Name, Cube_OVID, Fact_Object_ID, Fact_Object_Name, Fact_Object_OVID, Oracle_Long_Name, Oracle_Plural_Name, Oracle_Short_Name, Fact_Object_Type, Additivity_Type, Is_Fact_Dimension, Is_Formula, Is_Custom_Formula, Formula, Where_Clause, Description, Design_OVID from DMRS_MEASURES
;
--------------------------------------------------------
--  DDL for View DMRV_MEASURE_AGGR_FUNCS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MEASURE_AGGR_FUNCS" ("MEASURE_ID", "MEASURE_NAME", "MEASURE_OVID", "AGGREGATE_FUNCTION_ID", "AGGREGATE_FUNCTION_NAME", "AGGREGATE_FUNCTION_OVID", "MEASURE_ALIAS", "IS_DEFAULT", "DESIGN_OVID") AS 
  select  Measure_ID, Measure_Name, Measure_OVID, Aggregate_Function_ID, Aggregate_Function_Name, Aggregate_Function_OVID, Measure_Alias, Is_Default, Design_OVID from DMRS_MEASURE_AGGR_FUNCS
;
--------------------------------------------------------
--  DDL for View DMRV_MEASURE_FOLDERS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MEASURE_FOLDERS" ("MEASURE_FOLDER_ID", "MEASURE_FOLDER_NAME", "MEASURE_FOLDER_OVID", "MODEL_ID", "MODEL_NAME", "MODEL_OVID", "PARENT_FOLDER_ID", "PARENT_FOLDER_NAME", "PARENT_FOLDER_OVID", "ORACLE_LONG_NAME", "ORACLE_PLURAL_NAME", "ORACLE_SHORT_NAME", "IS_LEAF", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Measure_Folder_ID, Measure_Folder_Name, Measure_Folder_OVID, Model_ID, Model_Name, Model_OVID, Parent_Folder_ID, Parent_Folder_Name, Parent_Folder_OVID, Oracle_Long_Name, Oracle_Plural_Name, Oracle_Short_Name, Is_Leaf, Description, Design_OVID from DMRS_MEASURE_FOLDERS
;
--------------------------------------------------------
--  DDL for View DMRV_MEASURE_FOLDER_MEASURES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MEASURE_FOLDER_MEASURES" ("MEASURE_FOLDER_ID", "MEASURE_FOLDER_NAME", "MEASURE_FOLDER_OVID", "MEASURE_ID", "MEASURE_NAME", "MEASURE_OVID", "PARENT_OBJECT_ID", "PARENT_OBJECT_NAME", "PARENT_OBJECT_OVID", "PARENT_OBJECT_TYPE", "DESIGN_OVID") AS 
  select  Measure_Folder_ID, Measure_Folder_Name, Measure_Folder_OVID, Measure_ID, Measure_Name, Measure_OVID, Parent_Object_ID, Parent_Object_Name, Parent_Object_OVID, Parent_Object_Type, Design_OVID from DMRS_MEASURE_FOLDER_MEASURES
;
--------------------------------------------------------
--  DDL for View DMRV_MODELS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MODELS" ("DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "MODEL_TYPE", "RDBMS_TYPE") AS 
  select  Design_ID, Design_OVID, Design_Name, Model_ID, Model_OVID, Model_Name, Model_Type, RDBMS_Type from DMRS_MODELS
;
--------------------------------------------------------
--  DDL for View DMRV_MODEL_DISPLAYS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MODEL_DISPLAYS" ("DISPLAY_ID", "DISPLAY_OVID", "DISPLAY_NAME", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "DESIGN_OVID") AS 
  select  Display_ID, Display_OVID, Display_Name, Model_ID, Model_OVID, Model_Name, Design_OVID from DMRS_MODEL_DISPLAYS
;
--------------------------------------------------------
--  DDL for View DMRV_MODEL_NAMING_OPTIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MODEL_NAMING_OPTIONS" ("OBJECT_TYPE", "MAX_NAME_LENGTH", "CHARACTER_CASE", "VALID_CHARACTERS", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "MODEL_TYPE", "DESIGN_OVID") AS 
  select  Object_type, Max_Name_Length, Character_Case, Valid_Characters, Model_ID, Model_OVID, Model_Name, Model_Type, Design_OVID from DMRS_MODEL_NAMING_OPTIONS
;
--------------------------------------------------------
--  DDL for View DMRV_MODEL_SUBVIEWS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_MODEL_SUBVIEWS" ("SUBVIEW_ID", "SUBVIEW_OVID", "SUBVIEW_NAME", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "DESIGN_OVID") AS 
  select  Subview_ID, Subview_OVID, Subview_Name, Model_ID, Model_OVID, Model_Name, Design_OVID from DMRS_MODEL_SUBVIEWS
;
--------------------------------------------------------
--  DDL for View DMRV_NATIVE_TO_LOGICAL
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_NATIVE_TO_LOGICAL" ("RDBMS_TYPE", "RDBMS_VERSION", "NATIVE_TYPE", "LT_NAME", "LOGICAL_TYPE_ID", "LOGICAL_TYPE_OVID", "DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME") AS 
  select  RDBMS_Type, RDBMS_Version, Native_Type, LT_Name, Logical_Type_ID, Logical_Type_OVID, Design_ID, Design_OVID, Design_Name from DMRS_NATIVE_TO_LOGICAL
;
--------------------------------------------------------
--  DDL for View DMRV_NOTES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_NOTES" ("OBJECT_ID", "OVID", "OBJECT_NAME", "MODEL_OVID", "MODEL_ID", "MODEL_NAME", "DESIGN_OVID") AS 
  select  Object_ID, OVID, Object_Name, Model_OVID, Model_ID, Model_Name, Design_OVID from DMRS_NOTES
;
--------------------------------------------------------
--  DDL for View DMRV_PK_OID_COLUMNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_PK_OID_COLUMNS" ("COLUMN_ID", "COLUMN_OVID", "TABLE_ID", "TABLE_OVID", "TABLE_NAME", "COLUMN_NAME", "DESIGN_OVID") AS 
  select  Column_ID, Column_OVID, Table_ID, Table_OVID, Table_Name, Column_Name, Design_OVID from DMRS_PK_OID_COLUMNS
;
--------------------------------------------------------
--  DDL for View DMRV_PROCESSES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_PROCESSES" ("PROCESS_ID", "PROCESS_OVID", "PROCESS_NAME", "DIAGRAM_ID", "DIAGRAM_OVID", "DIAGRAM_NAME", "TRANSFORMATION_TASK_ID", "TRANSFORMATION_TASK_OVID", "TRANSFORMATION_TASK_NAME", "PARENT_PROCESS_ID", "PARENT_PROCESS_OVID", "PARENT_PROCESS_NAME", "PROCESS_NUMBER", "PROCESS_TYPE", "PROCESS_MODE", "PRIORITY", "FREQUENCY_TIMES", "FREQUENCY_TIME_UNIT", "PEAK_PERIODS_STRING", "PARAMETERS_WRAPPERS_STRING", "INTERACTIVE_MAX_RESPONSE_TIME", "INTERACTIVE_RESPONSE_TIME_UNIT", "BATCH_MIN_TRANSACTIONS", "BATCH_TIME_UNIT", "DESIGN_OVID") AS 
  select  Process_ID, Process_OVID, Process_Name, Diagram_ID, Diagram_OVID, Diagram_Name, Transformation_Task_ID, Transformation_Task_OVID, Transformation_Task_Name, Parent_Process_ID, Parent_Process_OVID, Parent_Process_Name, Process_Number, Process_Type, Process_Mode, Priority, Frequency_Times, Frequency_Time_Unit, Peak_Periods_String, Parameters_Wrappers_String, Interactive_Max_Response_Time, Interactive_Response_Time_Unit, Batch_Min_Transactions, Batch_Time_Unit, Design_OVID from DMRS_PROCESSES
;
--------------------------------------------------------
--  DDL for View DMRV_PROCESS_ATTRIBUTES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_PROCESS_ATTRIBUTES" ("PROCESS_ID", "PROCESS_OVID", "ENTITY_ID", "ENTITY_OVID", "FLOW_ID", "FLOW_OVID", "DFD_ID", "DFD_OVID", "PROCESS_NAME", "ENTITY_NAME", "FLOW_NAME", "DFD_NAME", "OP_READ", "OP_CREATE", "OP_UPDATE", "OP_DELETE", "CRUD_CODE", "FLOW_DIRECTION", "ATTRIBUTE_ID", "ATTRIBUTE_OVID", "ATTRIBUTE_NAME", "DESIGN_OVID") AS 
  select  Process_ID, Process_OVID, Entity_ID, Entity_OVID, Flow_ID, Flow_OVID, DFD_ID, DFD_OVID, Process_Name, Entity_Name, Flow_Name, DFD_Name, OP_Read, OP_Create, OP_Update, OP_Delete, CRUD_Code, Flow_Direction, Attribute_ID, Attribute_OVID, Attribute_Name, Design_OVID from DMRS_PROCESS_ATTRIBUTES
;
--------------------------------------------------------
--  DDL for View DMRV_PROCESS_ENTITIES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_PROCESS_ENTITIES" ("PROCESS_ID", "PROCESS_OVID", "ENTITY_ID", "ENTITY_OVID", "FLOW_ID", "FLOW_OVID", "DFD_ID", "DFD_OVID", "PROCESS_NAME", "ENTITY_NAME", "FLOW_NAME", "DFD_NAME", "OP_READ", "OP_CREATE", "OP_UPDATE", "OP_DELETE", "CRUD_CODE", "FLOW_DIRECTION", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "DESIGN_OVID") AS 
  select  Process_ID, Process_OVID, Entity_ID, Entity_OVID, Flow_ID, Flow_OVID, DFD_ID, DFD_OVID, Process_Name, Entity_Name, Flow_Name, DFD_Name, OP_Read, OP_Create, OP_Update, OP_Delete, CRUD_Code, Flow_Direction, Model_ID, Model_OVID, Model_Name, Design_OVID from DMRS_PROCESS_ENTITIES
;
--------------------------------------------------------
--  DDL for View DMRV_RAGGED_HIER_LINKS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RAGGED_HIER_LINKS" ("RAGGED_HIER_LINK_ID", "RAGGED_HIER_LINK_NAME", "RAGGED_HIER_LINK_OVID", "MODEL_ID", "MODEL_NAME", "MODEL_OVID", "PARENT_LEVEL_ID", "PARENT_LEVEL_NAME", "PARENT_LEVEL_OVID", "CHILD_LEVEL_ID", "CHILD_LEVEL_NAME", "CHILD_LEVEL_OVID", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Ragged_Hier_Link_ID, Ragged_Hier_Link_Name, Ragged_Hier_Link_OVID, Model_ID, Model_Name, Model_OVID, Parent_Level_ID, Parent_Level_Name, Parent_Level_OVID, Child_Level_ID, Child_Level_Name, Child_Level_OVID, Description, Design_OVID from DMRS_RAGGED_HIER_LINKS
;
--------------------------------------------------------
--  DDL for View DMRV_RAGGED_HIER_LINK_ATTRS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RAGGED_HIER_LINK_ATTRS" ("RAGGED_HIER_LINK_ID", "RAGGED_HIER_LINK_NAME", "RAGGED_HIER_LINK_OVID", "ATTRIBUTE_ID", "ATTRIBUTE_NAME", "ATTRIBUTE_OVID", "DESIGN_OVID") AS 
  select  Ragged_Hier_Link_ID, Ragged_Hier_Link_Name, Ragged_Hier_Link_OVID, Attribute_ID, Attribute_Name, Attribute_OVID, Design_OVID from DMRS_RAGGED_HIER_LINK_ATTRS
;
--------------------------------------------------------
--  DDL for View DMRV_RDBMS_SITES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RDBMS_SITES" ("SITE_NAME", "SITE_ID", "SITE_OVID", "RDBMS_TYPE", "DESIGN_OVID") AS 
  select  Site_Name, Site_ID, Site_OVID, RDBMS_Type, Design_OVID from DMRS_RDBMS_SITES
;
--------------------------------------------------------
--  DDL for View DMRV_RECORD_STRUCTURES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RECORD_STRUCTURES" ("RECORD_STRUCTURE_ID", "RECORD_STRUCTURE_OVID", "RECORD_STRUCTURE_NAME", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "DESIGN_OVID") AS 
  select  Record_Structure_ID, Record_Structure_OVID, Record_Structure_Name, Model_ID, Model_OVID, Model_Name, Design_OVID from DMRS_RECORD_STRUCTURES
;
--------------------------------------------------------
--  DDL for View DMRV_RECORD_STRUCT_EXT_DATAS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RECORD_STRUCT_EXT_DATAS" ("RECORD_STRUCTURE_ID", "RECORD_STRUCTURE_OVID", "RECORD_STRUCTURE_NAME", "EXTERNAL_DATA_ID", "EXTERNAL_DATA_OVID", "EXTERNAL_DATA_NAME", "DESIGN_OVID") AS 
  select  Record_Structure_ID, Record_Structure_OVID, Record_Structure_Name, External_Data_ID, External_Data_OVID, External_Data_Name, Design_OVID from DMRS_RECORD_STRUCT_EXT_DATAS
;
--------------------------------------------------------
--  DDL for View DMRV_RELATIONSHIPS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RELATIONSHIPS" ("RELATIONSHIP_NAME", "MODEL_ID", "MODEL_OVID", "OBJECT_ID", "OVID", "IMPORT_ID", "SOURCE_ENTITY_NAME", "TARGET_ENTITY_NAME", "SOURCE_LABEL", "TARGET_LABEL", "SOURCETO_TARGET_CARDINALITY", "TARGETTO_SOURCE_CARDINALITY", "SOURCE_OPTIONAL", "TARGET_OPTIONAL", "DOMINANT_ROLE", "IDENTIFYING", "SOURCE_ID", "SOURCE_OVID", "TARGET_ID", "TARGET_OVID", "NUMBER_OF_ATTRIBUTES", "TRANSFERABLE", "IN_ARC", "ARC_ID", "MODEL_NAME", "DESIGN_OVID") AS 
  select  Relationship_Name, Model_ID, Model_OVID, Object_ID, OVID, Import_ID, Source_Entity_Name, Target_Entity_Name, Source_Label, Target_Label, SourceTo_Target_Cardinality, TargetTo_Source_Cardinality, Source_Optional, Target_Optional, Dominant_Role, Identifying, Source_ID, Source_OVID, Target_ID, Target_OVID, Number_Of_Attributes, Transferable, In_Arc, Arc_ID, Model_Name, Design_OVID from DMRS_RELATIONSHIPS
;
--------------------------------------------------------
--  DDL for View DMRV_REPORTS_VERSION_1_0
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_REPORTS_VERSION_1_0" ("DMRS_PERSISTENCE_VERSION", "DMRS_REPORTS_VERSION", "CREATED_ON") AS 
  select 1.6 DMRS_Persistence_Version, 1.0 DMRS_Reports_Version, to_timestamp('2023/11/13 19:28:48','YYYY/MM/DD HH24:MI:SS') Created_On from dual with read only
;
--------------------------------------------------------
--  DDL for View DMRV_RESOURCE_LOCATORS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RESOURCE_LOCATORS" ("RESOURCE_LOCATOR_ID", "RESOURCE_LOCATOR_OVID", "RESOURCE_LOCATOR_NAME", "BUSINESS_INFO_ID", "BUSINESS_INFO_OVID", "BUSINESS_INFO_NAME", "URL", "DESIGN_OVID") AS 
  select  Resource_Locator_ID, Resource_Locator_OVID, Resource_Locator_Name, Business_Info_ID, Business_Info_OVID, Business_Info_Name, Url, Design_OVID from DMRS_RESOURCE_LOCATORS
;
--------------------------------------------------------
--  DDL for View DMRV_RESPONSIBLE_PARTIES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RESPONSIBLE_PARTIES" ("RESPONSIBLE_PARTY_ID", "RESPONSIBLE_PARTY_OVID", "RESPONSIBLE_PARTY_NAME", "BUSINESS_INFO_ID", "BUSINESS_INFO_OVID", "BUSINESS_INFO_NAME", "PARENT_ID", "PARENT_OVID", "PARENT_NAME", "RESPONSIBILITY", "DESIGN_OVID") AS 
  select  Responsible_Party_ID, Responsible_Party_OVID, Responsible_Party_Name, Business_Info_ID, Business_Info_OVID, Business_Info_Name, Parent_ID, Parent_OVID, Parent_Name, Responsibility, Design_OVID from DMRS_RESPONSIBLE_PARTIES
;
--------------------------------------------------------
--  DDL for View DMRV_RES_PARTY_CONTACTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RES_PARTY_CONTACTS" ("RESPONSIBLE_PARTY_ID", "RESPONSIBLE_PARTY_OVID", "RESPONSIBLE_PARTY_NAME", "CONTACT_ID", "CONTACT_OVID", "CONTACT_NAME", "DESIGN_OVID") AS 
  select  Responsible_Party_ID, Responsible_Party_OVID, Responsible_Party_Name, Contact_ID, Contact_OVID, Contact_Name, Design_OVID from DMRS_RES_PARTY_CONTACTS
;
--------------------------------------------------------
--  DDL for View DMRV_RES_PARTY_ELEMENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_RES_PARTY_ELEMENTS" ("RESPONSIBLE_PARTY_ID", "RESPONSIBLE_PARTY_OVID", "RESPONSIBLE_PARTY_NAME", "ELEMENT_ID", "ELEMENT_OVID", "ELEMENT_NAME", "ELEMENT_TYPE", "DESIGN_OVID") AS 
  select  Responsible_Party_ID, Responsible_Party_OVID, Responsible_Party_Name, Element_ID, Element_OVID, Element_Name, Element_Type, Design_OVID from DMRS_RES_PARTY_ELEMENTS
;
--------------------------------------------------------
--  DDL for View DMRV_ROLES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_ROLES" ("ROLE_ID", "ROLE_OVID", "ROLE", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Role_ID, Role_OVID, Role_Name, Model_ID, Model_OVID, Model_Name, Description, Design_OVID from DMRS_ROLES
;
--------------------------------------------------------
--  DDL for View DMRV_ROLE_PROCESSES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_ROLE_PROCESSES" ("ROLE_ID", "ROLE_OVID", "ROLE", "PROCESS_ID", "PROCESS_OVID", "PROCESS_NAME", "DESIGN_OVID") AS 
  select  Role_ID, Role_OVID, Role_Name, Process_ID, Process_OVID, Process_Name, Design_OVID from DMRS_ROLE_PROCESSES
;
--------------------------------------------------------
--  DDL for View DMRV_ROLLUP_LINKS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_ROLLUP_LINKS" ("ROLLUP_LINK_ID", "ROLLUP_LINK_NAME", "ROLLUP_LINK_OVID", "MODEL_ID", "MODEL_NAME", "MODEL_OVID", "PARENT_OBJECT_ID", "PARENT_OBJECT_NAME", "PARENT_OBJECT_OVID", "CHILD_OBJECT_ID", "CHILD_OBJECT_NAME", "CHILD_OBJECT_OVID", "FACT_ENTITY_ID", "FACT_ENTITY_NAME", "FACT_ENTITY_OVID", "PARENT_OBJECT_TYPE", "CHILD_OBJECT_TYPE", "ORACLE_LONG_NAME", "ORACLE_PLURAL_NAME", "ORACLE_SHORT_NAME", "DEFAULT_AGGR_OPERATOR", "IS_ROLE_PLAYING", "IS_SPARSE_DIMENSION", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Rollup_Link_ID, Rollup_Link_Name, Rollup_Link_OVID, Model_ID, Model_Name, Model_OVID, Parent_Object_ID, Parent_Object_Name, Parent_Object_OVID, Child_Object_ID, Child_Object_Name, Child_Object_OVID, Fact_Entity_ID, Fact_Entity_Name, Fact_Entity_OVID, Parent_Object_Type, Child_Object_Type, Oracle_Long_Name, Oracle_Plural_Name, Oracle_Short_Name, Default_Aggr_Operator, Is_Role_Playing, Is_Sparse_Dimension, Description, Design_OVID from DMRS_ROLLUP_LINKS
;
--------------------------------------------------------
--  DDL for View DMRV_ROLLUP_LINK_ATTRS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_ROLLUP_LINK_ATTRS" ("ROLLUP_LINK_ID", "ROLLUP_LINK_NAME", "ROLLUP_LINK_OVID", "ATTRIBUTE_ID", "ATTRIBUTE_NAME", "ATTRIBUTE_OVID", "DESIGN_OVID") AS 
  select  Rollup_Link_ID, Rollup_Link_Name, Rollup_Link_OVID, Attribute_ID, Attribute_Name, Attribute_OVID, Design_OVID from DMRS_ROLLUP_LINK_ATTRS
;
--------------------------------------------------------
--  DDL for View DMRV_SLICES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_SLICES" ("SLICE_ID", "SLICE_NAME", "SLICE_OVID", "MODEL_ID", "MODEL_NAME", "MODEL_OVID", "CUBE_ID", "CUBE_NAME", "CUBE_OVID", "ENTITY_ID", "ENTITY_NAME", "ENTITY_OVID", "ORACLE_LONG_NAME", "ORACLE_PLURAL_NAME", "ORACLE_SHORT_NAME", "IS_FULLY_REALIZED", "IS_READ_ONLY", "DESCRIPTION", "DESIGN_OVID") AS 
  select  Slice_ID, Slice_Name, Slice_OVID, Model_ID, Model_Name, Model_OVID, Cube_ID, Cube_Name, Cube_OVID, Entity_ID, Entity_Name, Entity_OVID, Oracle_Long_Name, Oracle_Plural_Name, Oracle_Short_Name, Is_Fully_Realized, Is_Read_Only, Description, Design_OVID from DMRS_SLICES
;
--------------------------------------------------------
--  DDL for View DMRV_SLICE_DIM_HIER_LEVEL
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_SLICE_DIM_HIER_LEVEL" ("SLICE_ID", "SLICE_NAME", "SLICE_OVID", "DIMENSION_ID", "DIMENSION_NAME", "DIMENSION_OVID", "HIERARCHY_ID", "HIERARCHY_NAME", "HIERARCHY_OVID", "LEVEL_ID", "LEVEL_NAME", "LEVEL_OVID", "DESIGN_OVID") AS 
  select  Slice_ID, Slice_Name, Slice_OVID, Dimension_ID, Dimension_Name, Dimension_OVID, Hierarchy_ID, Hierarchy_Name, Hierarchy_OVID, Level_ID, Level_Name, Level_OVID, Design_OVID from DMRS_SLICE_DIM_HIER_LEVEL
;
--------------------------------------------------------
--  DDL for View DMRV_SLICE_MEASURES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_SLICE_MEASURES" ("SLICE_ID", "SLICE_NAME", "SLICE_OVID", "MEASURE_ID", "MEASURE_NAME", "MEASURE_OVID", "AGGREGATE_FUNCTION_ID", "AGGREGATE_FUNCTION_NAME", "AGGREGATE_FUNCTION_OVID", "MEASURE_ALIAS", "DESIGN_OVID") AS 
  select  Slice_ID, Slice_Name, Slice_OVID, Measure_ID, Measure_Name, Measure_OVID, Aggregate_Function_ID, Aggregate_Function_Name, Aggregate_Function_OVID, Measure_Alias, Design_OVID from DMRS_SLICE_MEASURES
;
--------------------------------------------------------
--  DDL for View DMRV_SOURCE_INFO
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_SOURCE_INFO" ("SOURCE_INFO_OVID", "SOURCE_INFO_TYPE", "DDL_FILE_NAME", "DDL_PATH_NAME", "DDL_DB_TYPE", "DATADICT_CONNECTION_NAME", "DATADICT_CONNECTION_URL", "DATADICT_DB_TYPE", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "DESIGN_OVID") AS 
  select  Source_Info_OVID, Source_Info_Type, DDL_File_Name, DDL_Path_Name, DDL_DB_Type, DataDict_Connection_Name, DataDict_Connection_Url, DataDict_DB_Type, Model_ID, Model_OVID, Model_Name, Design_OVID from DMRS_SOURCE_INFO
;
--------------------------------------------------------
--  DDL for View DMRV_SPATIAL_COLUMN_DEFINITION
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_SPATIAL_COLUMN_DEFINITION" ("TABLE_ID", "TABLE_OVID", "DEFINITION_ID", "DEFINITION_OVID", "DEFINITION_NAME", "TABLE_NAME", "COLUMN_ID", "COLUMN_OVID", "COLUMN_NAME", "USE_FUNCTION", "FUNCTION_EXPRESSION", "COORDINATE_SYSTEM_ID", "HAS_SPATIAL_INDEX", "SPATIAL_INDEX_ID", "SPATIAL_INDEX_OVID", "SPATIAL_INDEX_NAME", "DESIGN_OVID") AS 
  select  Table_ID, Table_OVID, Definition_ID, Definition_OVID, Definition_Name, Table_Name, Column_ID, Column_OVID, Column_Name, Use_Function, Function_Expression, Coordinate_System_ID, Has_Spatial_Index, Spatial_Index_ID, Spatial_Index_OVID, Spatial_Index_Name, Design_OVID from DMRS_SPATIAL_COLUMN_DEFINITION
;
--------------------------------------------------------
--  DDL for View DMRV_SPATIAL_DIMENSIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_SPATIAL_DIMENSIONS" ("DEFINITION_ID", "DEFINITION_OVID", "DEFINITION_NAME", "DIMENSION_NAME", "LOW_BOUNDARY", "UPPER_BOUNDARY", "TOLERANCE", "DESIGN_OVID") AS 
  select  Definition_ID, Definition_OVID, Definition_Name, Dimension_Name, Low_Boundary, Upper_Boundary, Tolerance, Design_OVID from DMRS_SPATIAL_DIMENSIONS
;
--------------------------------------------------------
--  DDL for View DMRV_STRUCTURED_TYPES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_STRUCTURED_TYPES" ("DESIGN_ID", "DESIGN_OVID", "DESIGN_NAME", "MODEL_OVID", "MODEL_NAME", "STRUCTURED_TYPE_ID", "STRUCTURED_TYPE_OVID", "STRUCTURED_TYPE_NAME", "SUPER_TYPE_ID", "SUPER_TYPE_OVID", "SUPER_TYPE_NAME", "PREDEFINED", "ST_FINAL", "ST_INSTANTIABLE") AS 
  select  Design_ID, Design_OVID, Design_Name, Model_OVID, Model_Name, Structured_Type_ID, Structured_Type_OVID, Structured_Type_Name, Super_Type_ID, Super_Type_OVID, Super_Type_Name, Predefined, ST_Final, ST_Instantiable from DMRS_STRUCTURED_TYPES
;
--------------------------------------------------------
--  DDL for View DMRV_STRUCT_TYPE_ATTRS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_STRUCT_TYPE_ATTRS" ("ATTRIBUTE_ID", "ATTRIBUTE_OVID", "ATTRIBUTE_NAME", "STRUCTURED_TYPE_ID", "STRUCTURED_TYPE_OVID", "STRUCTURED_TYPE_NAME", "MANDATORY", "REFERENCE", "T_SIZE", "T_PRECISION", "T_SCALE", "TYPE_ID", "TYPE_OVID", "TYPE_NAME", "DESIGN_OVID") AS 
  SELECT Attribute_ID, Attribute_OVID, Attribute_Name, Structured_Type_ID, Structured_Type_OVID, Structured_Type_Name, Mandatory, Reference, T_Size, T_Precision, T_Scale, Type_ID, Type_OVID, Type_Name, Design_OVID FROM DMRS_STRUCT_TYPE_ATTRS
;
--------------------------------------------------------
--  DDL for View DMRV_STRUCT_TYPE_METHODS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_STRUCT_TYPE_METHODS" ("METHOD_ID", "METHOD_OVID", "METHOD_NAME", "STRUCTURED_TYPE_ID", "STRUCTURED_TYPE_OVID", "STRUCTURED_TYPE_NAME", "BODY", "CONSTRUCTOR", "OVERRIDDEN_METHOD_ID", "OVERRIDDEN_METHOD_OVID", "OVERRIDDEN_METHOD_NAME", "DESIGN_OVID") AS 
  SELECT stm.Method_ID, stm.Method_OVID, stm.Method_Name, stm.Structured_Type_ID, stm.Structured_Type_OVID, stm.Structured_Type_Name, lt.Text, stm.Constructor, stm.Overridden_Method_ID, stm.Overridden_Method_OVID, stm.Overridden_Method_Name, stm.Design_OVID FROM DMRS_STRUCT_TYPE_METHODS stm, DMRS_LARGE_TEXT lt WHERE stm.Method_id  = lt.Object_id
;
--------------------------------------------------------
--  DDL for View DMRV_STRUCT_TYPE_METHOD_PARS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_STRUCT_TYPE_METHOD_PARS" ("PARAMETER_ID", "PARAMETER_OVID", "PARAMETER_NAME", "METHOD_ID", "METHOD_OVID", "METHOD_NAME", "RETURN_VALUE", "REFERENCE", "SEQ", "T_SIZE", "T_PRECISION", "T_SCALE", "TYPE_ID", "TYPE_OVID", "TYPE_NAME", "DESIGN_OVID") AS 
  SELECT  Parameter_ID, Parameter_OVID, Parameter_Name, Method_ID, Method_OVID, Method_Name, Return_Value, Reference, Seq, T_Size, T_Precision, T_Scale, Type_ID, Type_OVID, Type_Name, Design_OVID FROM DMRS_STRUCT_TYPE_METHOD_PARS
;
--------------------------------------------------------
--  DDL for View DMRV_TABLES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TABLES" ("TABLE_NAME", "ABBREVIATION", "OBJECT_ID", "OVID", "IMPORT_ID", "MODEL_ID", "MODEL_OVID", "STRUCTURED_TYPE_ID", "STRUCTURED_TYPE_OVID", "STRUCTURED_TYPE_NAME", "NUMBER_DATA_ELEMENTS", "CLASSIFICATION_TYPE_ID", "CLASSIFICATION_TYPE_OVID", "CLASSIFICATION_TYPE_NAME", "ALLOW_TYPE_SUBSTITUTION", "MIN_VOLUME", "EXPECTED_VOLUME", "MAX_VOLUME", "GROWTH_RATE_PERCENTS", "GROWTH_RATE_INTERVAL", "NORMAL_FORM", "TEMPORARY_OBJECT_SCOPE", "ADEQUATELY_NORMALIZED", "SUBSTITUTION_PARENT", "SUBSTITUTION_PARENT_OVID", "ENGINEER", "SPATIAL_TABLE", "OID_IS_PK", "OID_IS_USER_DEFINED", "INCLUDE_SCRIPTS_INTO_DDL", "MODEL_NAME", "SUBSTITUTION_PARENT_NAME", "SOURCE_INFO_OVID", "SOURCE_DATADICT_SCHEMA_NAME", "SOURCE_DATADICT_OBJECT_NAME", "DESIGN_OVID") AS 
  select  Table_Name, Abbreviation, Object_ID, OVID, Import_ID, Model_ID, Model_OVID, Structured_Type_ID, Structured_Type_OVID, Structured_Type_Name, Number_Data_Elements, Classification_Type_ID, Classification_Type_OVID, Classification_Type_Name, Allow_Type_Substitution, Min_Volume, Expected_Volume, Max_Volume, Growth_Rate_Percents, Growth_Rate_Interval, Normal_Form, Temporary_Object_Scope, Adequately_Normalized, Substitution_Parent, Substitution_Parent_OVID, Engineer, Spatial_Table, OID_is_PK, OID_is_User_Defined, Include_Scripts_Into_DDL, Model_Name, Substitution_Parent_Name, Source_Info_OVID, Source_DataDict_Schema_Name, Source_DataDict_Object_Name, Design_OVID from DMRS_TABLES
;
--------------------------------------------------------
--  DDL for View DMRV_TABLEVIEWS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TABLEVIEWS" ("TABLEVIEW_NAME", "OBJECT_ID", "OVID", "IMPORT_ID", "MODEL_ID", "MODEL_OVID", "STRUCTURED_TYPE_ID", "STRUCTURED_TYPE_OVID", "STRUCTURED_TYPE_NAME", "WHERE_CLAUSE", "HAVING_CLAUSE", "USER_DEFINED", "ENGINEER", "ALLOW_TYPE_SUBSTITUTION", "OID_COLUMNS", "MODEL_NAME", "DESIGN_OVID") AS 
  select  TableView_Name, Object_ID, OVID, Import_ID, Model_ID, Model_OVID, Structured_Type_ID, Structured_Type_OVID, Structured_Type_Name, Where_Clause, Having_Clause, User_Defined, Engineer, Allow_Type_Substitution, OID_Columns, Model_Name, Design_OVID from DMRS_TABLEVIEWS
;
--------------------------------------------------------
--  DDL for View DMRV_TABLE_CONSTRAINTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TABLE_CONSTRAINTS" ("TABLE_ID", "TABLE_OVID", "SEQUENCE", "CONSTRAINT_ID", "CONSTRAINT_OVID", "CONSTRAINT_NAME", "TEXT", "TABLE_NAME", "DESIGN_OVID") AS 
  select  Table_ID, Table_OVID, Sequence, Constraint_ID, Constraint_OVID, Constraint_Name, Text, Table_Name, Design_OVID from DMRS_TABLE_CONSTRAINTS
;
--------------------------------------------------------
--  DDL for View DMRV_TABLE_INCLUDE_SCRIPTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TABLE_INCLUDE_SCRIPTS" ("TABLE_ID", "TABLE_OVID", "TABLE_NAME", "TYPE", "SEQUENCE", "TEXT", "DESIGN_OVID") AS 
  select  Table_ID, Table_OVID, Table_Name, Type, Sequence, Text, Design_OVID from DMRS_TABLE_INCLUDE_SCRIPTS
;
--------------------------------------------------------
--  DDL for View DMRV_TASK_PARAMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TASK_PARAMS" ("TASK_PARAMS_ID", "TASK_PARAMS_OVID", "TASK_PARAMS_NAME", "TRANSFORMATION_TASK_ID", "TRANSFORMATION_TASK_OVID", "TRANSFORMATION_TASK_NAME", "TASK_PARAMS_TYPE", "MULTIPLICITY", "SYSTEM_OBJECTIVE", "DESIGN_OVID") AS 
  select  Task_Params_ID, Task_Params_OVID, Task_Params_Name, Transformation_Task_ID, Transformation_Task_OVID, Transformation_Task_Name, Task_Params_Type, Multiplicity, System_Objective, Design_OVID from DMRS_TASK_PARAMS
;
--------------------------------------------------------
--  DDL for View DMRV_TASK_PARAMS_ITEMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TASK_PARAMS_ITEMS" ("TASK_PARAMS_ITEM_ID", "TASK_PARAMS_ITEM_OVID", "TASK_PARAMS_ITEM_NAME", "TASK_PARAMS_ID", "TASK_PARAMS_OVID", "TASK_PARAMS_NAME", "LOGICAL_TYPE_ID", "LOGICAL_TYPE_OVID", "LOGICAL_TYPE_NAME", "TASK_PARAMS_ITEM_TYPE", "DESIGN_OVID") AS 
  select  Task_Params_Item_ID, Task_Params_Item_OVID, Task_Params_Item_Name, Task_Params_ID, Task_Params_OVID, Task_Params_Name, Logical_Type_ID, Logical_Type_OVID, Logical_Type_Name, Task_Params_Item_Type, Design_OVID from DMRS_TASK_PARAMS_ITEMS
;
--------------------------------------------------------
--  DDL for View DMRV_TELEPHONES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TELEPHONES" ("TELEPHONE_ID", "TELEPHONE_OVID", "TELEPHONE_NAME", "BUSINESS_INFO_ID", "BUSINESS_INFO_OVID", "BUSINESS_INFO_NAME", "PHONE_NUMBER", "PHONE_TYPE", "DESIGN_OVID") AS 
  select  Telephone_ID, Telephone_OVID, Telephone_Name, Business_Info_ID, Business_Info_OVID, Business_Info_Name, Phone_Number, Phone_Type, Design_OVID from DMRS_TELEPHONES
;
--------------------------------------------------------
--  DDL for View DMRV_TRANSFORMATIONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TRANSFORMATIONS" ("TRANSFORMATION_ID", "TRANSFORMATION_OVID", "TRANSFORMATION_NAME", "TRANSFORMATION_TASK_ID", "TRANSFORMATION_TASK_OVID", "TRANSFORMATION_TASK_NAME", "FILTER_CONDITION", "JOIN_CONDITION", "PRIMARY", "DESIGN_OVID") AS 
  select  Transformation_ID, Transformation_OVID, Transformation_Name, Transformation_Task_ID, Transformation_Task_OVID, Transformation_Task_Name, Filter_Condition, Join_Condition, Primary, Design_OVID from DMRS_TRANSFORMATIONS
;
--------------------------------------------------------
--  DDL for View DMRV_TRANSFORMATION_FLOWS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TRANSFORMATION_FLOWS" ("TRANSFORMATION_FLOW_ID", "TRANSFORMATION_FLOW_OVID", "TRANSFORMATION_FLOW_NAME", "TRANSFORMATION_TASK_ID", "TRANSFORMATION_TASK_OVID", "TRANSFORMATION_TASK_NAME", "SOURCE_ID", "SOURCE_OVID", "SOURCE_NAME", "DESTINATION_ID", "DESTINATION_OVID", "DESTINATION_NAME", "SOURCE_TYPE", "DESTINATION_TYPE", "SYSTEM_OBJECTIVE", "LOGGING", "OP_CREATE", "OP_READ", "OP_UPDATE", "OP_DELETE", "CRUD_CODE", "DESIGN_OVID") AS 
  select  Transformation_Flow_ID, Transformation_Flow_OVID, Transformation_Flow_Name, Transformation_Task_ID, Transformation_Task_OVID, Transformation_Task_Name, Source_ID, Source_OVID, Source_Name, Destination_ID, Destination_OVID, Destination_Name, Source_Type, Destination_Type, System_Objective, Logging, Op_Create, Op_Read, Op_Update, Op_Delete, CRUD_Code, Design_OVID from DMRS_TRANSFORMATION_FLOWS
;
--------------------------------------------------------
--  DDL for View DMRV_TRANSFORMATION_PACKAGES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TRANSFORMATION_PACKAGES" ("TRANSFORMATION_PACKAGE_ID", "TRANSFORMATION_PACKAGE_OVID", "TRANSFORMATION_PACKAGE_NAME", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "SYSTEM_OBJECTIVE", "DESIGN_OVID") AS 
  select  Transformation_Package_ID, Transformation_Package_OVID, Transformation_Package_Name, Model_ID, Model_OVID, Model_Name, System_Objective, Design_OVID from DMRS_TRANSFORMATION_PACKAGES
;
--------------------------------------------------------
--  DDL for View DMRV_TRANSFORMATION_TASKS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TRANSFORMATION_TASKS" ("TRANSFORMATION_TASK_ID", "TRANSFORMATION_TASK_OVID", "TRANSFORMATION_TASK_NAME", "TRANSFORMATION_PACKAGE_ID", "TRANSFORMATION_PACKAGE_OVID", "TRANSFORMATION_PACKAGE_NAME", "PROCESS_ID", "PROCESS_OVID", "PROCESS_NAME", "TOP_LEVEL", "DESIGN_OVID") AS 
  select  Transformation_Task_ID, Transformation_Task_OVID, Transformation_Task_Name, Transformation_Package_ID, Transformation_Package_OVID, Transformation_Package_Name, Process_ID, Process_OVID, Process_Name, Top_Level, Design_OVID from DMRS_TRANSFORMATION_TASKS
;
--------------------------------------------------------
--  DDL for View DMRV_TRANSFORMATION_TASK_INFOS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_TRANSFORMATION_TASK_INFOS" ("TRANSFORMATION_TASK_ID", "TRANSFORMATION_TASK_OVID", "TRANSFORMATION_TASK_NAME", "INFO_STORE_ID", "INFO_STORE_OVID", "INFO_STORE_NAME", "SOURCE_TARGET_FLAG", "DESIGN_OVID") AS 
  select  Transformation_Task_ID, Transformation_Task_OVID, Transformation_Task_Name, Info_Store_ID, Info_Store_OVID, Info_Store_Name, Source_Target_Flag, Design_OVID from DMRS_TRANSFORMATION_TASK_INFOS
;
--------------------------------------------------------
--  DDL for View DMRV_VALUE_RANGES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_VALUE_RANGES" ("DATAELEMENT_ID", "DATAELEMENT_OVID", "TYPE", "SEQUENCE", "BEGIN_VALUE", "END_VALUE", "SHORT_DESCRIPTION", "CONTAINER_ID", "CONTAINER_OVID", "CONTAINER_NAME", "DATAELEMENT_NAME", "DESIGN_OVID") AS 
  select  DataElement_ID, DataElement_OVID, Type, Sequence, Begin_Value, End_Value, Short_Description, Container_ID, Container_OVID, Container_Name, DataElement_Name, Design_OVID from DMRS_VALUE_RANGES
;
--------------------------------------------------------
--  DDL for View DMRV_VIEW_COLUMNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_VIEW_COLUMNS" ("VIEW_OVID", "VIEW_ID", "VIEW_NAME", "CONTAINER_ID", "CONTAINER_OVID", "CONTAINER_NAME", "CONTAINER_ALIAS", "IS_EXPRESSION", "COLUMN_ID", "COLUMN_OVID", "COLUMN_NAME", "COLUMN_ALIAS", "NATIVE_TYPE", "TYPE", "EXPRESSION", "SEQUENCE", "PERSONALLY_ID_INFORMATION", "SENSITIVE_INFORMATION", "MASK_FOR_NONE_PRODUCTION", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "DESIGN_OVID") AS 
  select  View_OVID, View_ID, View_Name, Container_ID, Container_OVID, Container_Name, Container_Alias, Is_Expression, Column_ID, Column_OVID, Column_Name, Column_Alias, Native_Type, Type, Expression, Sequence, Personally_ID_Information, Sensitive_Information, Mask_For_None_Production, Model_ID, Model_OVID, Model_Name, Design_OVID from DMRS_VIEW_COLUMNS
;
--------------------------------------------------------
--  DDL for View DMRV_VIEW_CONTAINERS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_VIEW_CONTAINERS" ("VIEW_OVID", "VIEW_ID", "VIEW_NAME", "CONTAINER_ID", "CONTAINER_OVID", "CONTAINER_NAME", "TYPE", "ALIAS", "SEQUENCE", "MODEL_ID", "MODEL_OVID", "MODEL_NAME", "DESIGN_OVID") AS 
  select  View_OVID, View_ID, View_Name, Container_ID, Container_OVID, Container_Name, Type, Alias, Sequence, Model_ID, Model_OVID, Model_Name, Design_OVID from DMRS_VIEW_CONTAINERS
;
--------------------------------------------------------
--  DDL for View DMRV_VIEW_ORDER_GROUPBY
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "C##LMS"."DMRV_VIEW_ORDER_GROUPBY" ("VIEW_OVID", "VIEW_ID", "VIEW_NAME", "CONTAINER_ID", "CONTAINER_OVID", "CONTAINER_NAME", "CONTAINER_ALIAS", "IS_EXPRESSION", "USAGE", "SEQUENCE", "COLUMN_ID", "COLUMN_OVID", "COLUMN_NAME", "COLUMN_ALIAS", "SORT_ORDER", "EXPRESSION", "DESIGN_OVID") AS 
  select  View_OVID, View_ID, View_Name, Container_ID, Container_OVID, Container_Name, Container_Alias, Is_Expression, Usage, Sequence, Column_ID, Column_OVID, Column_Name, Column_Alias, Sort_Order, Expression, Design_OVID from DMRS_VIEW_ORDER_GROUPBY
;
REM INSERTING into C##LMS.ABILITY
SET DEFINE OFF;
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031408_19v2','2002031408_19v2 3','사업전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031408_19v2','2002031408_19v2 4','상품마케팅 촉진하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031410_19v2','2002031410_19v2 1','청구 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031410_19v2','2002031410_19v2 2','수납 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031410_19v2','2002031410_19v2 3','미납과오 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031410_19v2','2002031410_19v2 4','정산 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 1','개통계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 2','개통 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 3','개통 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 4','개통결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 5','개통품질 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031501_19v2','2002031501_19v2 1','환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031501_19v2','2002031501_19v2 2','상품 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031501_19v2','2002031501_19v2 3','마케팅 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 1','서비스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 2','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 3','시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 4','콘텐츠 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 5','애플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 1','네트워크 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 2','시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 3','콘텐츠 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 4','애플리케이션 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 5','단말기 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031504_19v2','2002031504_19v2 1','수주 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031504_19v2','2002031504_19v2 2','계약 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031504_19v2','2002031504_19v2 3','고객유지 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031504_19v2','2002031504_19v2 4','수납 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031505_19v2','2002031505_19v2 1','고객회선 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031505_19v2','2002031505_19v2 2','단말기 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031505_19v2','2002031505_19v2 3','개통 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031505_19v2','2002031505_19v2 4','단말기 재고관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031506_19v2','2002031506_19v2 1','서버 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031506_19v2','2002031506_19v2 2','통신회선 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031506_19v2','2002031506_19v2 3','서비스 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031506_19v2','2002031506_19v2 4','단말기 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 1','서버 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 2','통신회선 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 3','서비스 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 4','단말기 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 5','고장이력 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031508_19v2','2002031508_19v2 1','서버인프라 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031508_19v2','2002031508_19v2 2','백업·복구 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031508_19v2','2002031508_19v2 3','보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031508_19v2','2002031508_19v2 4','네트워크 사용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031509_19v2','2002031509_19v2 1','콜센터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031509_19v2','2002031509_19v2 2','장애 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031509_19v2','2002031509_19v2 3','서비스 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031510_19v2','2002031510_19v2 1','서버운용자 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031510_19v2','2002031510_19v2 2','개통기사 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 1','서비스 기획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 2','서비스 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 3','서비스 네트워크 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 4','서비스 운영관리 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 5','서비스 데이터베이스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031602_19v2','2002031602_19v2 1','서비스 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031602_19v2','2002031602_19v2 2','서비스 요건 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031602_19v2','2002031602_19v2 3','서비스 마케팅 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031602_19v2','2002031602_19v2 4','서비스 마케팅 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 1','서비스기획 적정성 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 2','사전 대응 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 3','프로세스 체계수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 4','수행평가 계획 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 5','프로젝트 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 1','서비스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 2','하드웨어 시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 3','시스템 소프트웨어 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 4','전원 시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 5','완료보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031605_19v2','2002031605_19v2 1','하드웨어 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031605_19v2','2002031605_19v2 2','소프트웨어 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031605_19v2','2002031605_19v2 3','망 연결하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031605_19v2','2002031605_19v2 4','설치 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031606_19v2','2002031606_19v2 1','물리적 기능시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031606_19v2','2002031606_19v2 2','부분적 성능시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031606_19v2','2002031606_19v2 3','종합 성능시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031606_19v2','2002031606_19v2 4','문서화 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031607_19v2','2002031607_19v2 1','서비스 개통 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031607_19v2','2002031607_19v2 2','서비스 개통 환경구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031607_19v2','2002031607_19v2 3','서비스 개통시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031607_19v2','2002031607_19v2 4','서비스 개통 확인인증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 1','서비스 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 2','고객 요청처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 3','장애 대응조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 4','서비스 변경적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 5','서비스 운용 보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031609_19v2','2002031609_19v2 1','시스템 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031609_19v2','2002031609_19v2 2','시스템 구성 및 복구 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031609_19v2','2002031609_19v2 3','시스템 장애관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031609_19v2','2002031609_19v2 4','시스템 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031701_13v1','2002031701_13v1 1','자료조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031701_13v1','2002031701_13v1 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031701_13v1','2002031701_13v1 3','기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031701_13v1','2002031701_13v1 4','추진전략 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031702_13v1','2002031702_13v1 1','시장현황 자료 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031702_13v1','2002031702_13v1 2','시장현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031702_13v1','2002031702_13v1 3','상품화 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031702_13v1','2002031702_13v1 4','마케팅 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 1','개발방법 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 2','개발 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 3','개발 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 4','시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 5','시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031704_13v1','2002031704_13v1 1','시스템 구매 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031704_13v1','2002031704_13v1 2','시스템 계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031704_13v1','2002031704_13v1 3','시스템 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031705_13v1','2002031705_13v1 1','현장조사 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031705_13v1','2002031705_13v1 2','시공 설계 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031705_13v1','2002031705_13v1 3','시공 공정관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 1','정보기술·구성원·프로세스 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 2','사용자·외부공급자 시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 3','관리원칙·활동전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 4','고객 관계관리 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 5','파트너 관계관리 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 1','투자 예산 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 2','투자 포트폴리오 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 3','투자 평가 기법 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 4','투자관리 프로세스 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 5','투자 성과지표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 1','원칙 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 2','성과관리 체계 도입하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 3','보상전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 4','성과관리 확산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 5','성과지표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 1','통합 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 2','부서 별 전략 취합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 3','통합 조정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 4','갱신 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 5','정보기술 전략 갱신하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 1','전략 실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 2','경영층 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 3','대내외 전파하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 4','정보기술 전략 실행 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 5','실행결과 피드백 수렴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 1','비즈니스영역 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 2','컨설팅 범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 3','컨설팅 일정 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 4','컨설팅 조직 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 5','컨설팅 방법론 고객화(Tailoring) 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010202_19v4','2001010202_19v4 1','경영전략 분석 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010202_19v4','2001010202_19v4 2','이해관계자 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010202_19v4','2001010202_19v4 3','경영전략 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010202_19v4','2001010202_19v4 4','경영전략 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010203_19v4','2001010203_19v4 1','고객 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010203_19v4','2001010203_19v4 2','상품·산업 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010203_19v4','2001010203_19v4 3','경쟁 기업 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010203_19v4','2001010203_19v4 4','내부 역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010204_19v4','2001010204_19v4 1','운영조직 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010204_19v4','2001010204_19v4 2','업무프로세스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010204_19v4','2001010204_19v4 3','법제도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010204_19v4','2001010204_19v4 4','선진 사례 비교분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010206_19v4','2001010206_19v4 1','개선 항목 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010206_19v4','2001010206_19v4 2','정보기술 운영목표 수정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010206_19v4','2001010206_19v4 3','주요성과지표 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010206_19v4','2001010206_19v4 4','핵심성공요소 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010207_19v4','2001010207_19v4 1','운영조직 진단 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010207_19v4','2001010207_19v4 2','업무프로세스 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010207_19v4','2001010207_19v4 3','법제도 대응방안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 1','소프트웨어 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 2','하드웨어 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 3','데이터 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 4','네트워크 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 5','정보보호구조 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 6','업무시스템 기능 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010209_19v4','2001010209_19v4 1','정보기술 자문하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010209_19v4','2001010209_19v4 2','자문내용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010209_19v4','2001010209_19v4 3','컨설팅 자문내용 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010210_19v4','2001010210_19v4 1','컨설팅 성과지표 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010210_19v4','2001010210_19v4 2','컨설팅 성과지표 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010210_19v4','2001010210_19v4 3','컨설팅 성과지표 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010211_19v4','2001010211_19v4 1','하드웨어 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010211_19v4','2001010211_19v4 2','데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010211_19v4','2001010211_19v4 3','네트워크 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010211_19v4','2001010211_19v4 4','정보보호구조 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010212_19v4','2001010212_19v4 1','소프트웨어 구성현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010212_19v4','2001010212_19v4 2','업무시스템 기능분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010301_19v4','2001010301_19v4 1','일반환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010301_19v4','2001010301_19v4 2','고객환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010301_19v4','2001010301_19v4 3','경쟁사환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010301_19v4','2001010301_19v4 4','자사환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 1','정보화 데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 2','정보기술 아키텍처 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 3','정보기술 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 4','정보기술 관리체계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 5','정보기술 개선점 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 1','정보기술 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 2','정보기술 운영현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 3','정보기술 투자전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 4','정보기술 구매전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 5','정보기술 운영전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 1','정보기술 예산 운영지침 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 2','정보기술 예산항목 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 3','정보기술 예산계획 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 4','정보기술 예산집행 일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 5','정보기술 예산관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010305_19v4','2001010305_19v4 1','정보기술 개념도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010305_19v4','2001010305_19v4 2','정보기술 모형 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010305_19v4','2001010305_19v4 3','정보기술 구축기술 확보방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010305_19v4','2001010305_19v4 4','정보기술 운영모형 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010306_19v4','2001010306_19v4 1','하드웨어 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010306_19v4','2001010306_19v4 2','소프트웨어 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010306_19v4','2001010306_19v4 3','운영 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010306_19v4','2001010306_19v4 4','정보기술 아키텍처 통합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 1','정보기술 기존 운영체계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 2','정보기술 운영체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 3','정보기술 운영기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 4','정보기술 운영조직 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031705_13v1','2002031705_13v1 4','전파환경 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 1','서비스 운용규정 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 2','서비스 운용교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 3','서비스 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 4','서비스 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 5','서비스 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031707_13v1','2002031707_13v1 1','유지보수 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031707_13v1','2002031707_13v1 2','유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031707_13v1','2002031707_13v1 3','이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031708_16v2','2002031708_16v2 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031708_16v2','2002031708_16v2 2','데이터 신뢰도 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031708_16v2','2002031708_16v2 3','고객만족도 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031708_16v2','2002031708_16v2 4','시스템 환경개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031709_13v1','2002031709_13v1 1','서비스 방침 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031709_13v1','2002031709_13v1 2','제품기술  교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031709_13v1','2002031709_13v1 3','상담예절 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 1','시스템 보안취약점 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 2','정보보호 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 3','서비스 보안대책 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 4','서비스 콘텐츠 보안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 5','개인정보 보호하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 1','서비스 플랫폼 동향분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 2','서비스 플랫폼 요구분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 3','서비스 플랫폼 전략수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 4','서비스 플랫폼 영업관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 5','서비스 플랫폼 고객관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 1','서비스시스템 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 2','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 3','서비스 네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 4','서비스시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 5','애플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031803_16v1','2002031803_16v1 1','전산장비 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031803_16v1','2002031803_16v1 2','업무 프로그램 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031803_16v1','2002031803_16v1 3','특정프로그램 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031803_16v1','2002031803_16v1 4','플랫폼 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031804_16v1','2002031804_16v1 1','품질성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031804_16v1','2002031804_16v1 2','운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031804_16v1','2002031804_16v1 3','유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031804_16v1','2002031804_16v1 4','품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031805_16v1','2002031805_16v1 1','보안관리 행정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031805_16v1','2002031805_16v1 2','시스템 보안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031805_16v1','2002031805_16v1 3','플랫폼 보안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031805_16v1','2002031805_16v1 4','보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031806_16v1','2002031806_16v1 1','마케팅 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031806_16v1','2002031806_16v1 2','소비자 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031806_16v1','2002031806_16v1 3','미디어 플랫폼 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031806_16v1','2002031806_16v1 4','콘텐츠 크리에이티브 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 1','고객 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 2','제안서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 3','프레젠테이션하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 4','고객사 협상하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 5','고객사 계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031808_16v1','2002031808_16v1 1','디지털미디어 특성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031808_16v1','2002031808_16v1 2','디지털미디어 수용자 행태 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031808_16v1','2002031808_16v1 3','디지털미디어 상품 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031808_16v1','2002031808_16v1 4','신규 미디어와 미디어 상품 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031809_16v1','2002031809_16v1 1','예산목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031809_16v1','2002031809_16v1 2','실제 소요예산 책정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031809_16v1','2002031809_16v1 3','사업예산 배분하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031809_16v1','2002031809_16v1 4','예산견적서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 1','트리플(triple) 미디어 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 2','트리플(triple) 미디어 믹스 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 3','트리플(triple) 미디어 스케쥴 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 4','트리플(triple) 미디어 비히클 효율 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 5','트리플(triple) 미디어 구매 집행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031811_16v1','2002031811_16v1 1','콘텐츠 제작 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031811_16v1','2002031811_16v1 2','콘텐츠 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031811_16v1','2002031811_16v1 3','콘텐츠 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031811_16v1','2002031811_16v1 4','콘텐츠 편집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031812_16v1','2002031812_16v1 1','미디어 운영 프로세스 시스템 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031812_16v1','2002031812_16v1 2','미디어 운영 시스템 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031812_16v1','2002031812_16v1 3','미디어 운영 관계사와 소통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031812_16v1','2002031812_16v1 4','미디어 운영 보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031813_16v1','2002031813_16v1 1','콘텐츠의 확산 핵심타깃 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031813_16v1','2002031813_16v1 2','확산전략 구조화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031813_16v1','2002031813_16v1 3','확산프로모션 기획 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031813_16v1','2002031813_16v1 4','디지털확산미디어 마케팅 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031814_16v1','2002031814_16v1 1','성과분석 기준 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031814_16v1','2002031814_16v1 2','미디어 산출 보고서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031814_16v1','2002031814_16v1 3','성과데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031815_16v1','2002031815_16v1 1','성과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031815_16v1','2002031815_16v1 2','수정기획안 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031815_16v1','2002031815_16v1 3','추가 이행과제 제안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031815_16v1','2002031815_16v1 4','고객 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031901_17v1','2002031901_17v1 1','환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031901_17v1','2002031901_17v1 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031901_17v1','2002031901_17v1 3','전략기획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031902_17v1','2002031902_17v1 1','실감형콘텐츠 라이선스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031902_17v1','2002031902_17v1 2','실감형콘텐츠 구매 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031902_17v1','2002031902_17v1 3','실감형통신서비스 마케팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031903_17v1','2002031903_17v1 1','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031903_17v1','2002031903_17v1 2','서비스 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031903_17v1','2002031903_17v1 3','서비스 네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031903_17v1','2002031903_17v1 4','서비스 서브 시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031904_17v1','2002031904_17v1 1','구축 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031904_17v1','2002031904_17v1 2','공정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031904_17v1','2002031904_17v1 3','서비스 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031905_17v1','2002031905_17v1 1','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031905_17v1','2002031905_17v1 2','시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031905_17v1','2002031905_17v1 3','운용보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031906_17v1','2002031906_17v1 1','정보보안계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031906_17v1','2002031906_17v1 2','정보보안 문제 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031906_17v1','2002031906_17v1 3','정보보안 예방활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031907_17v1','2002031907_17v1 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031907_17v1','2002031907_17v1 2','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031907_17v1','2002031907_17v1 3','품질 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031907_17v1','2002031907_17v1 4','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031908_17v1','2002031908_17v1 1','유지보수업무 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031908_17v1','2002031908_17v1 2','서비스 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031908_17v1','2002031908_17v1 3','처리보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031909_17v1','2002031909_17v1 1','고객요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031909_17v1','2002031909_17v1 2','고객불만 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031909_17v1','2002031909_17v1 3','고객불만 예방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031910_17v1','2002031910_17v1 1','단말기 개통관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031910_17v1','2002031910_17v1 2','단말기 개통작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031910_17v1','2002031910_17v1 3','단말기 개통확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031910_17v1','2002031910_17v1 4','단말기 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040102_22v2','2002040102_22v2 1','가상현실 기반 시스템 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040102_22v2','2002040102_22v2 2','가상현실 기반 시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040102_22v2','2002040102_22v2 3','가상현실 기반 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040104_22v2','2002040104_22v2 1','영상 스티칭하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040104_22v2','2002040104_22v2 2','컬러그레이딩 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040104_22v2','2002040104_22v2 3','영상객체요소 병합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040107_22v2','2002040107_22v2 1','음악 소스 후반 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040107_22v2','2002040107_22v2 2','음향 소스 후반 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040107_22v2','2002040107_22v2 3','오디오 소스 상호작용 프로그래밍하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 1','알고리즘 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 2','콘텐츠 리소스 적용 프로그래밍하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 3','인공지능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 4','가상현실 기능요소 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 5','가상현실 플랫폼 응용프로그래밍하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040109_22v2','2002040109_22v2 1','백엔드 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040109_22v2','2002040109_22v2 2','프런트엔드 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040109_22v2','2002040109_22v2 3','"클라이언트 서버(C2S');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040109_22v2','2002040109_22v2 4','"피어 투 피어(P2P');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040110_22v2','2002040110_22v2 1','아카이빙 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040110_22v2','2002040110_22v2 2','저작권 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040110_22v2','2002040110_22v2 3','가상현실 콘텐츠 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040110_22v2','2002040110_22v2 4','가상현실 콘텐츠 유지보수하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040111_22v1','2002040111_22v1 1','UI/UX 시스템 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040111_22v1','2002040111_22v1 2','UI/UX 시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040111_22v1','2002040111_22v1 3','UI/UX 시스템 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040112_22v2','2002040112_22v2 1','가상현실 콘텐츠 콘셉트 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040112_22v2','2002040112_22v2 2','프로젝트 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040112_22v2','2002040112_22v2 3','가상현실 서비스 기획하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040113_22v2','2002040113_22v2 1','가상현실 요소 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040113_22v2','2002040113_22v2 2','가상현실 영상 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040113_22v2','2002040113_22v2 3','가상현실 CG 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040113_22v2','2002040113_22v2 4','가상현실 음향 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 1','3D 모델링 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 2','텍스쳐 맵 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 3','3D 애니메이션 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 4','3D 이펙트 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 5','모션캡처와 볼륨메트릭 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040201_22v2','2002040201_22v2 1','실감콘텐츠 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040201_22v2','2002040201_22v2 2','실감콘텐츠 촬영콘셉트 제안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040201_22v2','2002040201_22v2 3','실감콘텐츠 촬용내용 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040201_22v2','2002040201_22v2 4','실감콘텐츠 촬영기획안 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040203_22v2','2002040203_22v2 1','포토그래매트리 촬영 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040203_22v2','2002040203_22v2 2','레이저스캔 촬영 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040203_22v2','2002040203_22v2 3','360도 VR 촬영 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040204_22v2','2002040204_22v2 1','포토그래매트리 촬영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040204_22v2','2002040204_22v2 2','레이저스캔 촬영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040204_22v2','2002040204_22v2 3','360도 VR 촬영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040205_22v2','2002040205_22v2 1','포토그래매트리 촬영장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040205_22v2','2002040205_22v2 2','레이저스캔 촬영장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040205_22v2','2002040205_22v2 3','360도 VR 촬영장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040206_22v2','2002040206_22v2 1','포토그래매트리 촬영장비 세팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040206_22v2','2002040206_22v2 2','포토그래매트리 촬영장비 사전점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040206_22v2','2002040206_22v2 3','포토그래매트리 촬영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040206_22v2','2002040206_22v2 4','포토그래매트리 디지털이미지 전환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040207_22v2','2002040207_22v2 1','레이저스캔 장비 세팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040207_22v2','2002040207_22v2 2','레이저스캔 사전점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040207_22v2','2002040207_22v2 3','레이저스캔하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040207_22v2','2002040207_22v2 4','레이저스캔 디지털이미지 전환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040208_22v2','2002040208_22v2 1','360도 VR 촬영장비 세팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040208_22v2','2002040208_22v2 2','360도 VR 촬영 사전점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040208_22v2','2002040208_22v2 3','360도 VR 촬영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040208_22v2','2002040208_22v2 4','360도 VR 촬영데이터 전환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040210_22v2','2002040210_22v2 1','실감콘텐츠 최적화작업 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040210_22v2','2002040210_22v2 2','실감콘텐츠 최적화작업 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040301_22v2','2002040301_22v2 1','콘텐츠 기획 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040301_22v2','2002040301_22v2 2','콘텐츠 개발 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040301_22v2','2002040301_22v2 3','콘텐츠 서비스 운영 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040302_22v2','2002040302_22v2 1','증강현실 UI/UX 콘셉트 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040302_22v2','2002040302_22v2 2','증강현실 UI/UX 시나리오 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040302_22v2','2002040302_22v2 3','증강현실 UI/UX 사용성 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040306_22v2','2002040306_22v2 1','엔진환경 기반 리소스 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040306_22v2','2002040306_22v2 2','디바이스 기반 리소스 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040306_22v2','2002040306_22v2 3','플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040307_22v2','2002040307_22v2 1','증강현실 콘텐츠 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040307_22v2','2002040307_22v2 2','증강현실 콘텐츠 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040307_22v2','2002040307_22v2 3','증강현실 콘텐츠 품질검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040307_22v2','2002040307_22v2 4','증강현실 콘텐츠 인도하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040308_22v2','2002040308_22v2 1','네트워크 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040308_22v2','2002040308_22v2 2','콘텐츠 서버 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040309_22v2','2002040309_22v2 1','증강현실 콘텐츠 데이터베이스 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040309_22v2','2002040309_22v2 2','객체 데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040310_22v1','2002040310_22v1 1','증강현실 제작 리소스 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040310_22v1','2002040310_22v1 2','증강현실 제작 리소스 개발 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040310_22v1','2002040310_22v1 3','증강현실 제작 리소스 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040311_22v1','2002040311_22v1 1','증강현실 실시간 서비스 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040311_22v1','2002040311_22v1 2','증강현실 실시간 서비스 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040311_22v1','2002040311_22v1 3','증강현실 실시간 서비스 송출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010101_14v1','2003010101_14v1 1','중계방송 기술정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010101_14v1','2003010101_14v1 2','중계방송 자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010101_14v1','2003010101_14v1 3','중계방송 제작지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010101_14v1','2003010101_14v1 4','중계방송 대내외 협력하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010102_14v1','2003010102_14v1 1','중계방송시스템 구축 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010102_14v1','2003010102_14v1 2','중계방송시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010102_14v1','2003010102_14v1 3','중계방송시스템 품질유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010103_14v1','2003010103_14v1 1','중계전송망 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010103_14v1','2003010103_14v1 2','중계전송망 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010103_14v1','2003010103_14v1 3','중계전송망 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010104_14v1','2003010104_14v1 1','영상제작시스템 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010104_14v1','2003010104_14v1 2','영상제작시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010104_14v1','2003010104_14v1 3','영상 편집 작업 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010104_14v1','2003010104_14v1 4','버츄얼 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010105_14v1','2003010105_14v1 1','음향제작시스템 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010105_14v1','2003010105_14v1 2','음향제작시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010105_14v1','2003010105_14v1 3','음향 편집 작업 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010106_14v1','2003010106_14v1 1','조명시스템 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010106_14v1','2003010106_14v1 2','조명시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010106_14v1','2003010106_14v1 3','조명시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010107_14v1','2003010107_14v1 1','카메라 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010107_14v1','2003010107_14v1 2','카메라 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010107_14v1','2003010107_14v1 3','카메라 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010108_14v1','2003010108_14v1 1','녹화 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010108_14v1','2003010108_14v1 2','녹화장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010108_14v1','2003010108_14v1 3','녹화장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010109_14v1','2003010109_14v1 1','중계방송시스템 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010109_14v1','2003010109_14v1 2','중계방송시스템 운용 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010109_14v1','2003010109_14v1 3','중계방송시스템 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010109_14v1','2003010109_14v1 4','중계방송시스템 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010110_14v1','2003010110_14v1 1','차량 유지관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010110_14v1','2003010110_14v1 2','내외부 특장 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010110_14v1','2003010110_14v1 3','발전차 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010111_14v1','2003010111_14v1 1','헬기 중계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010111_14v1','2003010111_14v1 2','위성(SNG) 중계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010111_14v1','2003010111_14v1 3','차세대 중계망 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010201_14v1','2003010201_14v1 1','제작·송출 워크플로우 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010201_14v1','2003010201_14v1 2','품질관리 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010201_14v1','2003010201_14v1 3','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010201_14v1','2003010201_14v1 4','품질관리 예산 편성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010202_14v1','2003010202_14v1 1','영상신호규격 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010202_14v1','2003010202_14v1 2','영상품질기준 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010202_14v1','2003010202_14v1 3','영상신호 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010202_14v1','2003010202_14v1 4','영상 색보정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010203_14v1','2003010203_14v1 1','음향신호규격 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010203_14v1','2003010203_14v1 2','음향품질기준 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010203_14v1','2003010203_14v1 3','음향신호 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010203_14v1','2003010203_14v1 4','음향 마스터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010204_14v1','2003010204_14v1 1','데이터신호규격 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010204_14v1','2003010204_14v1 2','데이터신호 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010204_14v1','2003010204_14v1 3','데이터신호 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010204_14v1','2003010204_14v1 4','트래픽 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010205_14v1','2003010205_14v1 1','저장매체별 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010205_14v1','2003010205_14v1 2','네트워크 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010205_14v1','2003010205_14v1 3','정보보안정책 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010205_14v1','2003010205_14v1 4','콘텐츠저장물 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010206_14v1','2003010206_14v1 1','코덱별 특성 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010206_14v1','2003010206_14v1 2','코덱 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010206_14v1','2003010206_14v1 3','코덱 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010207_14v1','2003010207_14v1 1','영상제작시스템 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010207_14v1','2003010207_14v1 2','음향제작시스템 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010207_14v1','2003010207_14v1 3','네트워크장비 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010207_14v1','2003010207_14v1 4','측정장비 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010208_14v1','2003010208_14v1 1','영상신호 분배·송출품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010208_14v1','2003010208_14v1 2','음향신호 분배·송출품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010208_14v1','2003010208_14v1 3','다중화신호 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010209_14v1','2003010209_14v1 1','종합품질관리 항목 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010209_14v1','2003010209_14v1 2','종합품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010209_14v1','2003010209_14v1 3','방송품질관리인력 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010210_14v1','2003010210_14v1 1','품질관리관련 법령 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010210_14v1','2003010210_14v1 2','국내외 기술표준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010210_14v1','2003010210_14v1 3','자체품질기준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020101_17v2','2003020101_17v2 1','라디오 방송 미래 미디어 기술적용 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020101_17v2','2003020101_17v2 2','라디오 방송 기술 부문 운용 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020101_17v2','2003020101_17v2 3','"라디오 방송망 기획(송중계소 구축');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020102_17v2','2003020102_17v2 1','라디오 방송 기술 표준 및 정책 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020102_17v2','2003020102_17v2 2','"라디오 기술 인력 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020102_17v2','2003020102_17v2 3','무선국 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020102_17v2','2003020102_17v2 4','라디오 방송회선 신규청약 및 해지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020103_17v2','2003020103_17v2 1','음악 프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020103_17v2','2003020103_17v2 2','생방송 프로그램 제작(뉴스포함)하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020103_17v2','2003020103_17v2 3','드라마 프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020103_17v2','2003020103_17v2 4','"시사');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020104_17v2','2003020104_17v2 1','중계차 관리/운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020104_17v2','2003020104_17v2 2','공개 방송 제작(실내외 포함)하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020104_17v2','2003020104_17v2 3','스포츠 중계방송 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020104_17v2','2003020104_17v2 4','"라디오 중계생방송 제작(프로그램 내 꼭지연결');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020105_17v2','2003020105_17v2 1','보이는 라디오 제작(동영상 제작 및 생방송 포함) 및 전송하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020105_17v2','2003020105_17v2 2','"IT 방송 서비스 기술 지원 (인터넷 플레이어');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020105_17v2','2003020105_17v2 3','"멀티미디어 장비 운용/관리(시스템');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020105_17v2','2003020105_17v2 4','양방향 데이터 시스템 운용/관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 1','라디오 방송 송출 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 2','"라디오 방송 운행 스케쥴 운용(PC기반 확인');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 3','라디오 방송 송출 품질관리 및 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 4','"송출 리스크 관리(주조');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 5','재해·재난방송 송출 시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020107_17v2','2003020107_17v2 1','송신 설비 관리 및 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020107_17v2','2003020107_17v2 2','방송 전송망 관리 및 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020107_17v2','2003020107_17v2 3','원격제어시설 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020107_17v2','2003020107_17v2 4','전력 설비 및 기계 설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020108_17v2','2003020108_17v2 1','"지역 상하행망');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020108_17v2','2003020108_17v2 2','IT 방송 서비스망 관리 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020108_17v2','2003020108_17v2 3','유무선 통합서비스 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020108_17v2','2003020108_17v2 4','R 커버리지 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020109_17v2','2003020109_17v2 1','"방송 시설 및 장비 유지 보수');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020109_17v2','2003020109_17v2 2','"방송 시스템 설계');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020109_17v2','2003020109_17v2 3','파일기반 시스템 설계 및 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020110_17v2','2003020110_17v2 1','미래 기술 연구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020110_17v2','2003020110_17v2 2','방송 장비 연구/개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020110_17v2','2003020110_17v2 3','개발 기술/장비 현장 적용 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 1','차세대 방송기술 환경 대응전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 2','방송기술 운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 3','"방송망 기획하기 (방송망');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 4','방송기술인력 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 5','방송장비 구매 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 6','방송시설 및 장비 운영 표준안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020202_13v1','2003020202_13v1 1','프로그램 제작기술 총괄하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020202_13v1','2003020202_13v1 2','프로그램 특성에 적합한 제작기술 요소 결합 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020202_13v1','2003020202_13v1 3','프로그램 특성에 적합한 영상 스위칭 업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020202_13v1','2003020202_13v1 4','방송 제작 품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 1','안정적인 생방송 진행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 2','방송시스템을 최적의 상태로 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 3','영상장비의 세팅과 조정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 4','프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 5','가상현실 프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 1','프로그램 제작 협의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 2','"음향시스템 설계');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 3','생방송 음향제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 4','"녹음');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 5','"음향품질 관리');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 1','프로그램 제작 협의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 2','"조명 디자인 플랜 작성');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 3','조명 시뮬레이션 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 4','프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 5','조명 품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 6','조명 시스템 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 1','프로그램 제작 협의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 2','"프로그램 믹싱 (영상');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 3','"프로그램 마스터링 (영상');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 4','"칼라 코렉션');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 5','NPS 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020207_17v2','2003020207_17v2 1','중계방송 기획 및 계획수립 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020207_17v2','2003020207_17v2 2','회선망 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020207_17v2','2003020207_17v2 3','"프로그램 녹화');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020207_17v2','2003020207_17v2 4','"중계차');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020208_17v2','2003020208_17v2 1','TV방송 운행 스케줄 운용하기 (APC 운용)');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020208_17v2','2003020208_17v2 2','"TV 송출장비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020208_17v2','2003020208_17v2 3','"송출사고 예방');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020208_17v2','2003020208_17v2 4','"TV방송 송출품질관리');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020209_17v2','2003020209_17v2 1','방송 송출망·중계망 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020209_17v2','2003020209_17v2 2','지역방송국 상하행망 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020209_17v2','2003020209_17v2 3','사내 분배망 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 1','송신장비 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 2','안테나 및 급전계통 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 3','전력 및 기계설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 4','방송 회선 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 5','원격제어 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 6','방송송신 영역관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 1','국내외 기술 동향 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 2','기술 기준 및 신호 규격 이해하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 3','프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 4','송출 및 송신 시설 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 5','부가서비스 기획 및 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020301_17v2','2003020301_17v2 1','DMB 방송국 재허가 자료 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020301_17v2','2003020301_17v2 2','DMB 방송채널 구성 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020302_13v1','2003020302_13v1 1','DMB 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020302_13v1','2003020302_13v1 2','DMB 표준화 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020302_13v1','2003020302_13v1 3','DMB 서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020302_13v1','2003020302_13v1 4','DMB 서비스 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 1','수신단말 인증신청하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 2','인증시스템 및 표준스트림 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 3','인증 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 4','인증서 취득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 5','호환성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 1','데이터 수신하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 2','데이터 가공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 3','테이터 전송하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 4','데이터 ON-Air 수신 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 5','양방향 서비스 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020305_17v2','2003020305_17v2 1','APC운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020305_17v2','2003020305_17v2 2','편성운행 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020305_17v2','2003020305_17v2 3','광고운행 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020306_17v2','2003020306_17v2 1','Encoder 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020306_17v2','2003020306_17v2 2','MUX 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020306_17v2','2003020306_17v2 3','TPEG 시스템 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020307_17v2','2003020307_17v2 1','방송소재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020307_17v2','2003020307_17v2 2','방송본 보존 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020307_17v2','2003020307_17v2 3','방송신호  검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020308_17v2','2003020308_17v2 1','송중계기 원격 감시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020308_17v2','2003020308_17v2 2','송중계기 원격 제어하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020308_17v2','2003020308_17v2 3','송중계기 원격 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020309_17v2','2003020309_17v2 1','무선국 허가 받기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020309_17v2','2003020309_17v2 2','무선국 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020309_17v2','2003020309_17v2 3','무선국  검사 받기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020309_17v2','2003020309_17v2 4','무선국 유지업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020310_17v2','2003020310_17v2 1','송중계소 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020310_17v2','2003020310_17v2 2','DMBR 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020310_17v2','2003020310_17v2 3','난시청 해소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020310_17v2','2003020310_17v2 4','STL 구성 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020311_17v2','2003020311_17v2 1','송신기 운용상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020311_17v2','2003020311_17v2 2','송신기 장애 대처하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020311_17v2','2003020311_17v2 3','SFN 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020401_17v2','2003020401_17v2 1','기술 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020401_17v2','2003020401_17v2 2','기술정책수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020401_17v2','2003020401_17v2 3','신규장비도입 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020401_17v2','2003020401_17v2 4','평가보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020402_17v2','2003020402_17v2 1','제작관련 기술부분 총괄하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020402_17v2','2003020402_17v2 2','제작프로그램 특성 이해하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020402_17v2','2003020402_17v2 3','비디오 스위쳐 조작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020403_17v2','2003020403_17v2 1','"영상 관련 장비 점검');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020403_17v2','2003020403_17v2 2','화질 관찰하며 영상레벨 조정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020403_17v2','2003020403_17v2 3','영상 관련 장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020404_17v2','2003020404_17v2 1','"음향관련 장비 점검');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020404_17v2','2003020404_17v2 2','음향 관찰 측정하며 최적으로 유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020404_17v2','2003020404_17v2 3','음향관련 장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020405_17v2','2003020405_17v2 1','"조명관련 장비 점검');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020405_17v2','2003020405_17v2 2','"조도');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020405_17v2','2003020405_17v2 3','조명장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020406_17v2','2003020406_17v2 1','중계방송위한 현장답사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020406_17v2','2003020406_17v2 2','"중계방송에 적합한 방송회선선택');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020406_17v2','2003020406_17v2 3','중계시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020407_17v2','2003020407_17v2 1','"편집장비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020407_17v2','2003020407_17v2 2','프로그램 종합편집(마스터링)하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020407_17v2','2003020407_17v2 3','칼라 콜렉션 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020408_17v2','2003020408_17v2 1','문자 자막기 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020408_17v2','2003020408_17v2 2','그래픽영상프로그램 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020408_17v2','2003020408_17v2 3','가상 스튜디오 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020409_17v2','2003020409_17v2 1','"방송 네트워크  운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020409_17v2','2003020409_17v2 2','"아카이브 시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020409_17v2','2003020409_17v2 3','"네트워크 기반 제작 시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020410_17v2','2003020410_17v2 1','"송출 장비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020410_17v2','2003020410_17v2 2','자동 송출제어 프로그램 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020410_17v2','2003020410_17v2 3','송수신 망 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020410_17v2','2003020410_17v2 4','신호품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020411_17v2','2003020411_17v2 1','방송장비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020411_17v2','2003020411_17v2 2','방송장비 수리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020411_17v2','2003020411_17v2 3','"장비 Test');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020412_17v2','2003020412_17v2 1','국내외 방송시장 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020412_17v2','2003020412_17v2 2','기술전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020412_17v2','2003020412_17v2 3','방송관련 기술규제 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020412_17v2','2003020412_17v2 4','기술운용 타당성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020413_17v2','2003020413_17v2 1','일정관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020413_17v2','2003020413_17v2 2','품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020414_17v2','2003020414_17v2 1','24시간 시스템 관제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020414_17v2','2003020414_17v2 2','장비별 장애 처리절차 기술 습득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020414_17v2','2003020414_17v2 3','방송 설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020414_17v2','2003020414_17v2 4','재난방송 설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 1','단말기 운영현황 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 2','기술요소 분석서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 3','서비스 요구사항 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 4','소프트웨어 운영체제 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 5','최종품질 정의서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020416_17v2','2003020416_17v2 1','단말기 시험환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020416_17v2','2003020416_17v2 2','TEST BED H/E 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020416_17v2','2003020416_17v2 3','소프트웨어 품질 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020416_17v2','2003020416_17v2 4','하드웨어 품질 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 1','기술동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 2','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 3','보안시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 4','투자계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 5','신규도입장비 기술 특성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 6','IP주소 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 7','네트워크 관제 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020418_17v2','2003020418_17v2 1','공정관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020418_17v2','2003020418_17v2 2','테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020418_17v2','2003020418_17v2 3','단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020418_17v2','2003020418_17v2 4','통합테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020419_17v2','2003020419_17v2 1','트래픽 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020419_17v2','2003020419_17v2 2','장비 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020419_17v2','2003020419_17v2 3','점검일지 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020419_17v2','2003020419_17v2 4','장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 1','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 2','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 3','행정업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 4','공정 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 5','표준 시공법으로 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 6','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 7','안전관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 8','준공검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 1','전송선로 설비 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 2','전송선로설비 설계변경 시 수정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 3','설계 입력/출력하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 4','망 관리 시스템(NMS) 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 5','품질지표관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020422_17v2','2003020422_17v2 1','자재 구매하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020422_17v2','2003020422_17v2 2','자재 입출고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020422_17v2','2003020422_17v2 3','자재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020422_17v2','2003020422_17v2 4','자재 현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020423_17v2','2003020423_17v2 1','신규(이전) 인입선 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020423_17v2','2003020423_17v2 2','해지 인입선 철거하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020423_17v2','2003020423_17v2 3','신호 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020423_17v2','2003020423_17v2 4','단말기 작동상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020424_17v2','2003020424_17v2 1','가입자 단말기 입력 신호 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020424_17v2','2003020424_17v2 2','단말기 작동상태 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020424_17v2','2003020424_17v2 3','불량 단말기 교체하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 1','미디어환경대응전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 2','운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 3','투자계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 4','신규서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 5','기술기준표준안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 1','실시간 송출시스템 설계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 2','VOD/CDN 설계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 3','제어시스템 설계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 4','네트워크 설계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 5','단말기 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020503_16v2','2003020503_16v2 1','방송회선 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020503_16v2','2003020503_16v2 2','방송신호 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020503_16v2','2003020503_16v2 3','압축다중화 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020504_16v2','2003020504_16v2 1','콘텐츠 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020504_16v2','2003020504_16v2 2','인제스트 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020504_16v2','2003020504_16v2 3','콘텐츠 압축 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020505_14v1','2003020505_14v1 1','콘텐츠 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020505_14v1','2003020505_14v1 2','QoS 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020505_14v1','2003020505_14v1 3','세션트래픽 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020506_16v2','2003020506_16v2 1','양방향 데이터방송플랫폼 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020506_16v2','2003020506_16v2 2','연동형 데이터서비스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020506_16v2','2003020506_16v2 3','독립형 데이터서비스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020507_16v2','2003020507_16v2 1','실시간 서비스네트워크 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020507_16v2','2003020507_16v2 2','스트리밍서비스네트워크 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020507_16v2','2003020507_16v2 3','네트워크 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 1','프로그램정보 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 2','채널제어시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 3','EPG 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 4','인증시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 5','서비스통계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020509_16v2','2003020509_16v2 1','서비스품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020509_16v2','2003020509_16v2 2','플랫폼 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020509_16v2','2003020509_16v2 3','시스템 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020509_16v2','2003020509_16v2 4','시스템 보안운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020510_14v1','2003020510_14v1 1','실시간채널암호화 인증관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020510_14v1','2003020510_14v1 2','스트리밍서비스암호화 인증관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020510_14v1','2003020510_14v1 3','콘텐츠암호화 인증관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020510_14v1','2003020510_14v1 4','가입자권한 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020511_14v1','2003020511_14v1 1','실시간광고 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020511_14v1','2003020511_14v1 2','VOD광고 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020511_14v1','2003020511_14v1 3','OAP 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020512_14v1','2003020512_14v1 1','단말H/W 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020512_14v1','2003020512_14v1 2','단말S/W 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020512_14v1','2003020512_14v1 3','통합단말 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020513_14v1','2003020513_14v1 1','인입네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020513_14v1','2003020513_14v1 2','인입네트워크 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020513_14v1','2003020513_14v1 3','단말기 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020513_14v1','2003020513_14v1 4','단말기 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020514_14v1','2003020514_14v1 1','응용서비스S/W 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020514_14v1','2003020514_14v1 2','응용서비스S/W 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020514_14v1','2003020514_14v1 3','응용서비스S/W 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030101_17v2','2003030101_17v2 1','서비스 기술 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030101_17v2','2003030101_17v2 2','서비스 기술 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030101_17v2','2003030101_17v2 3','서비스 기술 실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030102_17v2','2003030102_17v2 1','시스템 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030102_17v2','2003030102_17v2 2','시스템 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030102_17v2','2003030102_17v2 3','시스템 상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030103_17v2','2003030103_17v2 1','시스템 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030103_17v2','2003030103_17v2 2','시스템 구축 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030103_17v2','2003030103_17v2 3','시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030104_17v2','2003030104_17v2 1','콘텐츠 시장 수요조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030104_17v2','2003030104_17v2 2','콘텐츠 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030104_17v2','2003030104_17v2 3','"콘텐츠 제작');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030104_17v2','2003030104_17v2 4','"콘텐츠 관리하기 (저작권');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030105_17v2','2003030105_17v2 1','송출 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030105_17v2','2003030105_17v2 2','통합망 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030105_17v2','2003030105_17v2 3','유무선 전송 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030105_17v2','2003030105_17v2 4','시스템 기능지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030106_17v2','2003030106_17v2 1','장비관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030106_17v2','2003030106_17v2 2','서비스 품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030106_17v2','2003030106_17v2 3','망구성 최적화 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030107_17v2','2003030107_17v2 1','기술 기준 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030107_17v2','2003030107_17v2 2','신호품질 보존하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030107_17v2','2003030107_17v2 3','중계분배기 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030108_17v2','2003030108_17v2 1','단말기기 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030108_17v2','2003030108_17v2 2','단말기기 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030108_17v2','2003030108_17v2 3','단말기기 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030108_17v2','2003030108_17v2 4','단말기기 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030109_17v2','2003030109_17v2 1','응용서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030109_17v2','2003030109_17v2 2','응용서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030109_17v2','2003030109_17v2 3','응용서비스 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030109_17v2','2003030109_17v2 4','응용서비스 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030110_17v2','2003030110_17v2 1','예방점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030110_17v2','2003030110_17v2 2','장애진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030110_17v2','2003030110_17v2 3','장애복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030111_17v2','2003030111_17v2 1','정보보안계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030111_17v2','2003030111_17v2 2','정보보안 문제 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030111_17v2','2003030111_17v2 3','정보보안 예방활동 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030201_22v2','2003030201_22v2 1','신규 서비스  정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030201_22v2','2003030201_22v2 2','기술 환경 분석 및 대응책 마련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030201_22v2','2003030201_22v2 3','신규 도입장비 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030201_22v2','2003030201_22v2 4','표준화 활동 및 대외 협력활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030203_22v3','2003030203_22v3 1','조명 관련 기기 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030203_22v3','2003030203_22v3 2','음향 관련기기 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030203_22v3','2003030203_22v3 3','영상 관련기기 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030203_22v3','2003030203_22v3 4','중계(차)시스템 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030204_22v2','2003030204_22v2 1','영상편집 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030204_22v2','2003030204_22v2 2','NPS 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030204_22v2','2003030204_22v2 3','음향편집 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030205_22v2','2003030205_22v2 1','문자발생기 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030205_22v2','2003030205_22v2 2','영상그래픽 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030205_22v2','2003030205_22v2 3','가상 스튜디오 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030206_22v3','2003030206_22v3 1','스토리지 시스템 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030206_22v3','2003030206_22v3 2','콘텐츠 관리시스템 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030206_22v3','2003030206_22v3 3','아카이빙 시스템 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 1','지상파 방송송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 2','케이블 방송송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 3','IPTV 방송송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 4','위성 방송송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 5','부가서비스 솔루션 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 6','OTT 송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 1','위성 송/수신설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 2','광 송/수신설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 3','무선 송/수신설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 4','IP 송/수신 설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 5','송신소 설비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 6','HFC 송/수신 설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030209_22v3','2003030209_22v3 1','신호품질 유지관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030209_22v3','2003030209_22v3 2','콘텐츠 품질 유지 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030209_22v3','2003030209_22v3 3','신호품질 기술기준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030210_22v2','2003030210_22v2 1','유지보수 항목 정의 (Check List 정의 확정 및 운용)');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030210_22v2','2003030210_22v2 2','연간 유지보수 검토 및 계약');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030210_22v2','2003030210_22v2 3','정기적 점검/보수/수정 시행 및 관리');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030212_22v3','2003030212_22v3 1','시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030212_22v3','2003030212_22v3 2','방송시스템 및 기반설비 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030212_22v3','2003030212_22v3 3','방송시스템 세팅 및 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030212_22v3','2003030212_22v3 4','방송시스템 운영 교육 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030301_22v2','2003030301_22v2 1','방송서비스 요구 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030301_22v2','2003030301_22v2 2','방송기술 정보화전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030301_22v2','2003030301_22v2 3','정보시스템 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030301_22v2','2003030301_22v2 4','정보시스템 구축 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030303_13v1','2003030303_13v1 1','제작지원 정보시스템 운영 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030303_13v1','2003030303_13v1 2','제작지원 정보시스템 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030303_13v1','2003030303_13v1 3','제작지원 정보시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 1','사전 편집소재 획득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 2','영상 순서편집 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 3','효과편집 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 4','"종합편집');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 5','영상소재 라이프사이클 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 6','영상편집장비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 1','"녹음');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 2','음향순서 편집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 3','"음향효과합성');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 4','"음향더빙');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 5','음향소재 라이프사이클 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 6','음향편집장비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030306_13v1','2003030306_13v1 1','송출 정보시스템 운영기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030306_13v1','2003030306_13v1 2','송출 정보시스템 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030306_13v1','2003030306_13v1 3','송출 정보시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030307_13v1','2003030307_13v1 1','송신 시스템 운영기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030307_13v1','2003030307_13v1 2','송신 정보시스템 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030307_13v1','2003030307_13v1 3','송신 정보시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030308_22v2','2003030308_22v2 1','아카이브 콘텐츠 인제스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030308_22v2','2003030308_22v2 2','아카이브 다큐멘트 메타데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030308_22v2','2003030308_22v2 3','"아카이브 자산관리');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030308_22v2','2003030308_22v2 4','아카이브 라이브러리 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 1','미디어 인제스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 2','미디어 자산 검색하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 3','메타데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 4','미디어 자산 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 5','MAM 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030310_22v2','2003030310_22v2 1','네트워크 성능관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030310_22v2','2003030310_22v2 2','네트워크 장애관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030310_22v2','2003030310_22v2 3','네트워크 구성관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030311_22v2','2003030311_22v2 1','서버/스토리지 시스템 운영기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030311_22v2','2003030311_22v2 2','서버/스토리지 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030311_22v2','2003030311_22v2 3','서버/스토리지 시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030312_22v2','2003030312_22v2 1','데이터베이스 시스템 운영기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030312_22v2','2003030312_22v2 2','데이터베이스 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030312_22v2','2003030312_22v2 3','데이터베이스 백업 및 복구 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030312_22v2','2003030312_22v2 4','데이터베이스 튜닝하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 1','전략 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 2','전략 범위 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 3','전략 자원 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 4','전략 일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 5','전략 기획결과 공유하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 1','미션·비전·전략  분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 2','현재 거버넌스 체계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 3','목표 거버넌스 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 4','관리활동 수명주기 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 5','수행조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 1','정보기술 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 2','정보기술 활용 핵심 기회 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 3','핵심 기술 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 4','R&;D 프로젝트 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 5','대내외 전파 확산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 1','경영비전·경영전략 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 2','기술 대응전략 영역 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 3','개발이전단계 프로세스 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 4','개발단계 프로세스 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 5','개발이후단계 프로세스 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010105_19v4','2001010105_19v4 1','아키텍처 지침 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010105_19v4','2001010105_19v4 2','아키텍처 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010105_19v4','2001010105_19v4 3','아키텍처 운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010105_19v4','2001010105_19v4 4','아키텍처 성과관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030302_22v2','2002030302_22v2 3','투입요원 산출ㆍ배치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030302_22v2','2002030302_22v2 4','교육훈련 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030303_22v2','2002030303_22v2 1','시스템 운용상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030303_22v2','2002030303_22v2 2','시스템 수요 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030303_22v2','2002030303_22v2 3','시스템 재배치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030303_22v2','2002030303_22v2 4','시스템 신·증설 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030304_22v2','2002030304_22v2 1','경로 상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030304_22v2','2002030304_22v2 2','경로 트래픽 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030304_22v2','2002030304_22v2 3','IP 주소자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030304_22v2','2002030304_22v2 4','우회경로 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030305_22v2','2002030305_22v2 1','소프트웨어 형상 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030305_22v2','2002030305_22v2 2','소프트웨어 기능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030305_22v2','2002030305_22v2 3','소프트웨어 기능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030305_22v2','2002030305_22v2 4','소프트웨어 운용상태 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030306_22v3','2002030306_22v3 1','점검 리스트 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030306_22v3','2002030306_22v3 2','시스템 모니터링 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030306_22v3','2002030306_22v3 3','결과 분석 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030306_22v3','2002030306_22v3 4','점검결과보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030307_22v3','2002030307_22v3 1','시스템 메시지 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030307_22v3','2002030307_22v3 2','장애 구간 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030307_22v3','2002030307_22v3 3','장애 원인 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030307_22v3','2002030307_22v3 4','장애 결과보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 1','현장 방문하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 2','선로 현장 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 3','고장 수리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 4','고장 원인 설명하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 5','고객 컨설팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030309_22v3','2002030309_22v3 1','고장 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030309_22v3','2002030309_22v3 2','고장 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030309_22v3','2002030309_22v3 3','작업자 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030309_22v3','2002030309_22v3 4','고장 수리결과 설명하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 1','고객의 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 2','케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 3','통신 장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 4','컴퓨터통신환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 5','서비스품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030311_22v2','2002030311_22v2 1','보관환경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030311_22v2','2002030311_22v2 2','예비품 리스트 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030311_22v2','2002030311_22v2 3','수리의뢰요구서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030401_14v2','2002030401_14v2 1','서비스 제공능력 구비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030401_14v2','2002030401_14v2 2','인프라자원 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030401_14v2','2002030401_14v2 3','장비재배치 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030401_14v2','2002030401_14v2 4','IP 주소자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030402_14v2','2002030402_14v2 1','서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030402_14v2','2002030402_14v2 2','소요자원 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030402_14v2','2002030402_14v2 3','상품마케팅 촉진하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 1','영업전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 2','영업 활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 3','고객관계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 4','계약서 작성·계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 5','대금 청구·정산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 1','고객의 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 2','케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 3','통신장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 4','통신환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 5','서비스 개통 행정 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 1','서비스현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 2','서비스품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 3','망 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 4','설비 시험·점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 5','망관리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030406_14v2','2002030406_14v2 1','보안 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030406_14v2','2002030406_14v2 2','보안 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030406_14v2','2002030406_14v2 3','보안 장비 원격 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030406_14v2','2002030406_14v2 4','보안현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 1','예방 정비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 2','결함 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 3','기능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 4','장비 예비품 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 5','유지보수 현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 1','장애 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 2','장애 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 3','장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 4','작업자 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 5','고객 응대하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 1','교육 자료 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 2','업무기술 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 3','훈련과정 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 4','훈련과정 실습하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 5','신기술 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030410_14v2','2002030410_14v2 1','시장현황 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030410_14v2','2002030410_14v2 2','타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030410_14v2','2002030410_14v2 3','사업전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030410_14v2','2002030410_14v2 4','실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030501_19v2','2002030501_19v2 1','전보사업 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030501_19v2','2002030501_19v2 2','전보상품 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030501_19v2','2002030501_19v2 3','부가서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030501_19v2','2002030501_19v2 4','전보서비스 대외협력하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030502_19v2','2002030502_19v2 1','시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030502_19v2','2002030502_19v2 2','전보 판매전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030502_19v2','2002030502_19v2 3','서비스 고객 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030502_19v2','2002030502_19v2 4','요금정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030503_19v2','2002030503_19v2 1','전보요금 정산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030503_19v2','2002030503_19v2 2','영업매출 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030503_19v2','2002030503_19v2 3','영업고객 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030503_19v2','2002030503_19v2 4','정보보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 1','전보 콜센터 설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 2','텔레마케팅 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 3','고객 데이터베이스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 4','홈페이지 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 5','전보서비스 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030505_19v2','2002030505_19v2 1','전화로 전보 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030505_19v2','2002030505_19v2 2','팩스로 전보 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030505_19v2','2002030505_19v2 3','인터넷으로 전보 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030505_19v2','2002030505_19v2 4','직접 전보 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030506_19v2','2002030506_19v2 1','전보 송수신 구분하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030506_19v2','2002030506_19v2 2','전보 통신기기 사용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030506_19v2','2002030506_19v2 3','전보 송수신원부 기록하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030507_19v2','2002030507_19v2 1','전보 전송기기 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030507_19v2','2002030507_19v2 2','전보 전송기기 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030507_19v2','2002030507_19v2 3','전보 전송기기 이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030508_19v2','2002030508_19v2 1','전보유형 구분하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030508_19v2','2002030508_19v2 2','지역 구분하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030508_19v2','2002030508_19v2 3','배달방법 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030508_19v2','2002030508_19v2 4','전보 배달하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030511_19v2','2002030511_19v2 1','전보서비스 인력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030511_19v2','2002030511_19v2 2','전보서비스 재무관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030511_19v2','2002030511_19v2 3','전보서비스 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030511_19v2','2002030511_19v2 4','전보서비스 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030601_17v2','2002030601_17v2 1','서비스 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030601_17v2','2002030601_17v2 2','서비스 방향 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030601_17v2','2002030601_17v2 3','서비스 기획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030605_17v2','2002030605_17v2 1','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030605_17v2','2002030605_17v2 2','예방 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030605_17v2','2002030605_17v2 3','서비스 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030611_17v1','2002030611_17v1 1','서비스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030611_17v1','2002030611_17v1 2','서비스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030611_17v1','2002030611_17v1 3','플랫폼 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030612_17v1','2002030612_17v1 1','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030612_17v1','2002030612_17v1 2','서비스 품질 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030612_17v1','2002030612_17v1 3','서비스 품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030613_17v1','2002030613_17v1 1','보안관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030613_17v1','2002030613_17v1 2','접근통제 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030613_17v1','2002030613_17v1 3','취약점 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030613_17v1','2002030613_17v1 4','보안사고 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030614_17v1','2002030614_17v1 1','교육훈련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030614_17v1','2002030614_17v1 2','현장 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030614_17v1','2002030614_17v1 3','문제점 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030615_17v1','2002030615_17v1 1','고객불만 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030615_17v1','2002030615_17v1 2','고객 상담하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030615_17v1','2002030615_17v1 3','사후 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030616_17v2','2002030616_17v2 1','기능 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030616_17v2','2002030616_17v2 2','성능 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030616_17v2','2002030616_17v2 3','연동 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 1','사용자 실태조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 2','사용자 실태분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 3','서비스 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 4','서비스 타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 5','서비스 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030702_14v2','2002030702_14v2 1','서비스 사용환경 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030702_14v2','2002030702_14v2 2','서비스 사용환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030702_14v2','2002030702_14v2 3','서비스 사용환경 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030703_14v2','2002030703_14v2 1','마케팅 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030703_14v2','2002030703_14v2 2','마케팅 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030703_14v2','2002030703_14v2 3','마케팅 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030703_14v2','2002030703_14v2 4','마케팅 결과분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030704_14v2','2002030704_14v2 1','과금정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030704_14v2','2002030704_14v2 2','실행전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030704_14v2','2002030704_14v2 3','운영방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030704_14v2','2002030704_14v2 4','실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030705_14v2','2002030705_14v2 1','개통계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030705_14v2','2002030705_14v2 2','개통 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030705_14v2','2002030705_14v2 3','개통결과 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030706_14v2','2002030706_14v2 1','운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030706_14v2','2002030706_14v2 2','서비스 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030706_14v2','2002030706_14v2 3','운영결과 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030707_14v2','2002030707_14v2 1','품질점검기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030707_14v2','2002030707_14v2 2','품질점검계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030707_14v2','2002030707_14v2 3','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030707_14v2','2002030707_14v2 4','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030708_14v2','2002030708_14v2 1','청구관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030708_14v2','2002030708_14v2 2','수납관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030708_14v2','2002030708_14v2 3','미납과오 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030708_14v2','2002030708_14v2 4','정산관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 1','장애대응 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 2','장애예방 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 3','장애 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 4','장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 5','장애 리포팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030710_14v2','2002030710_14v2 1','고객지원 관리방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030710_14v2','2002030710_14v2 2','고객요구사항 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030710_14v2','2002030710_14v2 3','고객요구사항 해결하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030710_14v2','2002030710_14v2 4','고객요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030801_20v3','2002030801_20v3 1','콘텐츠네트워크동향 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030801_20v3','2002030801_20v3 2','네트워크요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030801_20v3','2002030801_20v3 3','서비스네트워크별 전략수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030802_20v3','2002030802_20v3 1','영업 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030802_20v3','2002030802_20v3 2','수주 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030802_20v3','2002030802_20v3 3','계약 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030803_20v3','2002030803_20v3 1','고객요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030803_20v3','2002030803_20v3 2','고객불만 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030803_20v3','2002030803_20v3 3','고객불만 예방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030804_20v3','2002030804_20v3 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030804_20v3','2002030804_20v3 2','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030804_20v3','2002030804_20v3 3','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030805_20v3','2002030805_20v3 1','시스템환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030805_20v3','2002030805_20v3 2','서비스요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030805_20v3','2002030805_20v3 3','시스템요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030806_20v3','2002030806_20v3 1','서비스네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030806_20v3','2002030806_20v3 2','서비스시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030806_20v3','2002030806_20v3 3','애플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030807_20v3','2002030807_20v3 1','서비스네트워크 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030807_20v3','2002030807_20v3 2','서비스시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030807_20v3','2002030807_20v3 3','애플리케이션 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030808_20v3','2002030808_20v3 1','서비스운영현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030808_20v3','2002030808_20v3 2','서비스인프라 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030808_20v3','2002030808_20v3 3','망관리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030809_20v3','2002030809_20v3 1','사전예방 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030809_20v3','2002030809_20v3 2','작업관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030809_20v3','2002030809_20v3 3','장애관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030810_20v3','2002030810_20v3 1','보안정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030810_20v3','2002030810_20v3 2','보안환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030810_20v3','2002030810_20v3 3','보안현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 1','시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 2','타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 3','비즈니스 모델 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 4','서비스 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 5','원가분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 6','가격정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 7','고객만족도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 8','망발전 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 9','개선전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 1','현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 3','서비스 모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 4','평가모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 5','서비스 운영 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 6','보안모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 1','서비스 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 2','서비스 인프라 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 3','서비스 개발 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 4','서비스 수준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 5','고객관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 6','위험관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 1','마케팅 시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 2','실행전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 3','서비스 촉진 정책수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 4','제품 공급정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 5','가격 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 6','서비스 유통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 1','전파 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 2','음영지역 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 3','서비스 규정 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 4','서비스 교육 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 5','서비스 데스크 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 6','서비스 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 7','서비스 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 1','무선망 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 2','서비스 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 3','무선망 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 4','유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 5','디지털 콘텐츠 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 6','서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 1','표준 동향 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 2','표준 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 3','표준 제안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 4','표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 5','표준 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 6','표준 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 1','서비스 취약점 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 2','정보보호 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 3','인프라 보안관리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 4','무선 보안관리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 5','운용 콘텐츠 보안관리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 6','개인정보 보호하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 7','서비스 보안 인증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 1','컴플라이언스 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 2','컴플라이언스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 3','컴플라이언스 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 4','컴플라이언스 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 5','지식재산권 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 6','분쟁 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 1','개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 2','장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 3','긴급 장애복구 이행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 4','고객지원 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 5','서비스 유지보수 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 6','품질 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 7','이동기지국 실시간 지원업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031008_19v2','2002031008_19v2 1','정기점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031008_19v2','2002031008_19v2 2','상시점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031008_19v2','2002031008_19v2 3','장비상태 판단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031009_19v2','2002031009_19v2 1','보안관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031009_19v2','2002031009_19v2 2','보안관리체계 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031009_19v2','2002031009_19v2 3','보안업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031009_19v2','2002031009_19v2 4','보안감사 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031011_19v2','2002031011_19v2 1','서비스 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031011_19v2','2002031011_19v2 2','서비스 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031011_19v2','2002031011_19v2 3','시스템 구조 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031011_19v2','2002031011_19v2 4','시스템 성능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031012_19v2','2002031012_19v2 1','교환설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031012_19v2','2002031012_19v2 2','전송설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031012_19v2','2002031012_19v2 3','기지국설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031012_19v2','2002031012_19v2 4','부대설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031013_19v2','2002031013_19v2 1','교환설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031013_19v2','2002031013_19v2 2','전송설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031013_19v2','2002031013_19v2 3','기지국설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031013_19v2','2002031013_19v2 4','부대설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031014_19v2','2002031014_19v2 1','상황관제 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031014_19v2','2002031014_19v2 2','모니터링 직무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031014_19v2','2002031014_19v2 3','상황관제 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031101_19v2','2002031101_19v2 1','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031101_19v2','2002031101_19v2 2','서비스 기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031101_19v2','2002031101_19v2 3','서비스 추진계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031102_19v2','2002031102_19v2 1','서비스 체계 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031102_19v2','2002031102_19v2 2','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031102_19v2','2002031102_19v2 3','서비스 시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031102_19v2','2002031102_19v2 4','어플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 1','전파 모델 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 2','통화량 예측하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 3','셀 영역 설계기준 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 4','기지국 최대출력 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 5','기지국 용량 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031104_19v2','2002031104_19v2 1','네트워크 운용지침서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031104_19v2','2002031104_19v2 2','네트워크 서비스 라이프사이클 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031104_19v2','2002031104_19v2 3','네트워크 운용 인프라 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031104_19v2','2002031104_19v2 4','네트워크 운용 문제 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031105_19v2','2002031105_19v2 1','네트워크 유지보수 지침서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031105_19v2','2002031105_19v2 2','네트워크 통신 회선 유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031105_19v2','2002031105_19v2 3','네트워크 서버 시스템 유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031105_19v2','2002031105_19v2 4','네트워크 유지보수 문제 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031106_19v2','2002031106_19v2 1','네트워크 최적화 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031106_19v2','2002031106_19v2 2','네트워크 최적화 방안 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031106_19v2','2002031106_19v2 3','네트워크 최적화 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031107_19v2','2002031107_19v2 1','서비스 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031107_19v2','2002031107_19v2 2','서비스품질(QoS) 매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031107_19v2','2002031107_19v2 3','사용자 서비스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031108_19v2','2002031108_19v2 1','서비스 장애발생 요인 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031108_19v2','2002031108_19v2 2','서비스 장애 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031108_19v2','2002031108_19v2 3','서비스 장애복구 지침서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031109_19v2','2002031109_19v2 1','서비스 개선방안 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031109_19v2','2002031109_19v2 2','서비스 개선정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031110_19v2','2002031110_19v2 1','시장조사분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031110_19v2','2002031110_19v2 2','마케팅 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031110_19v2','2002031110_19v2 3','고객관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031201_19v2','2002031201_19v2 1','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031201_19v2','2002031201_19v2 2','서비스 제공 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031201_19v2','2002031201_19v2 3','서비스 망구성 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031201_19v2','2002031201_19v2 4','관련규정 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031202_19v2','2002031202_19v2 1','위성통신서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031202_19v2','2002031202_19v2 2','위성통신망 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031202_19v2','2002031202_19v2 3','위성통신시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031208_19v2','2002031208_19v2 1','접근통제 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031208_19v2','2002031208_19v2 2','네트워크 접속 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031208_19v2','2002031208_19v2 3','보안사고 대응 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031211_19v1','2002031211_19v1 1','성능시험계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031211_19v1','2002031211_19v1 2','시험항목 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031211_19v1','2002031211_19v1 3','성능시험 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031211_19v1','2002031211_19v1 4','성능시험 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031212_19v2','2002031212_19v2 1','위성통신설비 기능검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031212_19v2','2002031212_19v2 2','전파품질 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031212_19v2','2002031212_19v2 3','부대설비 적합성 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031212_19v2','2002031212_19v2 4','연동성 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031213_19v1','2002031213_19v1 1','유지보수 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031213_19v1','2002031213_19v1 2','위성통신시스템 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031213_19v1','2002031213_19v1 3','위성통신시스템 장애 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031214_19v2','2002031214_19v2 1','과금 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031214_19v2','2002031214_19v2 2','가입자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031214_19v2','2002031214_19v2 3','교육 훈련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031214_19v2','2002031214_19v2 4','현장 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031215_19v2','2002031215_19v2 1','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031215_19v2','2002031215_19v2 2','서비스 품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031215_19v2','2002031215_19v2 3','품질문서 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031303_19v2','2002031303_19v2 1','디바이스개발 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031303_19v2','2002031303_19v2 2','디바이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031303_19v2','2002031303_19v2 3','디바이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031303_19v2','2002031303_19v2 4','디바이스 기능·성능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031304_19v2','2002031304_19v2 1','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031304_19v2','2002031304_19v2 2','서비스 플랫폼 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031304_19v2','2002031304_19v2 3','서비스 플랫폼 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031304_19v2','2002031304_19v2 4','플랫폼 기능·성능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031308_19v2','2002031308_19v2 1','서비스품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031308_19v2','2002031308_19v2 2','서비스 품질 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031308_19v2','2002031308_19v2 3','서비스 품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031309_19v2','2002031309_19v2 1','서비스시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031309_19v2','2002031309_19v2 2','서비스수요 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031309_19v2','2002031309_19v2 3','서비스성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031309_19v2','2002031309_19v2 4','서비스데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031311_19v2','2002031311_19v2 1','요구 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031311_19v2','2002031311_19v2 2','서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031311_19v2','2002031311_19v2 3','프로세스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031311_19v2','2002031311_19v2 4','데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031312_19v1','2002031312_19v1 1','네트워크 개발요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031312_19v1','2002031312_19v1 2','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031312_19v1','2002031312_19v1 3','네트워크 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031312_19v1','2002031312_19v1 4','네트워크 최적화 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 1','소프트웨어 요구 사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 2','소프트웨어 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 3','소프트웨어 통합 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 4','소프트웨어 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 5','소프트웨어 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 6','소프트웨어 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031314_19v2','2002031314_19v2 1','정보시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031314_19v2','2002031314_19v2 2','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031314_19v2','2002031314_19v2 3','운용요원 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031314_19v2','2002031314_19v2 4','정보시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031315_19v2','2002031315_19v2 1','서비스 운영상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031315_19v2','2002031315_19v2 2','서비스 예방점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031315_19v2','2002031315_19v2 3','서비스 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031315_19v2','2002031315_19v2 4','서비스 이용자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031316_19v1','2002031316_19v1 1','보안 관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031316_19v1','2002031316_19v1 2','보안 취약점 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031316_19v1','2002031316_19v1 3','보안 사고 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 1','이용자접촉 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 2','이용자요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 3','이용자요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 4','이용자요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 5','신청요구개통 지시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031403_19v2','2002031403_19v2 1','품질점검계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031403_19v2','2002031403_19v2 2','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031403_19v2','2002031403_19v2 3','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031404_19v2','2002031404_19v2 1','장애현황 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031404_19v2','2002031404_19v2 2','장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031404_19v2','2002031404_19v2 3','장애보고 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031404_19v2','2002031404_19v2 4','사전점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031405_19v2','2002031405_19v2 1','이용자요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031405_19v2','2002031405_19v2 2','이용자불만 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031405_19v2','2002031405_19v2 3','이용자불만 예방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031407_19v2','2002031407_19v2 1','기반설비 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031407_19v2','2002031407_19v2 2','기반설비 자원 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031407_19v2','2002031407_19v2 3','장비재배치 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031407_19v2','2002031407_19v2 4','IP 주소자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031408_19v2','2002031408_19v2 1','시장현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031408_19v2','2002031408_19v2 2','서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060203_19v2','2001060203_19v2 3','보안감사 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060204_19v2','2001060204_19v2 1','정보보호관리체계 인증심사 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060204_19v2','2001060204_19v2 2','정보보호관리체계 인증심사 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060204_19v2','2001060204_19v2 3','정보보호관리체계 인증심사 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060205_19v2','2001060205_19v2 1','정보보호제품 평가체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060205_19v2','2001060205_19v2 2','정보보호제품 평가기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060205_19v2','2001060205_19v2 3','정보보호제품 평가 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060206_19v2','2001060206_19v2 1','보안현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060206_19v2','2001060206_19v2 2','보안위험 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060206_19v2','2001060206_19v2 3','보안통제 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060207_19v2','2001060207_19v2 1','정보시스템 진단 기준 마련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060207_19v2','2001060207_19v2 2','정보시스템 진단 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060207_19v2','2001060207_19v2 3','정보시스템 대응책 마련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060208_19v2','2001060208_19v2 1','정보보호관리체계 심사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060208_19v2','2001060208_19v2 2','정보보호관리체계 인증 취득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060208_19v2','2001060208_19v2 3','정보보호관리체계 인증 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060209_19v2','2001060209_19v2 1','정보보호제품평가 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060209_19v2','2001060209_19v2 2','정보보호제품인증 취득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060209_19v2','2001060209_19v2 3','정보보호제품인증 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060210_19v2','2001060210_19v2 1','모의해킹 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060210_19v2','2001060210_19v2 2','모의해킹 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060301_19v2','2001060301_19v2 1','보안관제센터 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060301_19v2','2001060301_19v2 2','보안관제센터 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060301_19v2','2001060301_19v2 3','보안관제센터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060302_19v2','2001060302_19v2 1','침해대응 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060302_19v2','2001060302_19v2 2','침해대응 활동계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060302_19v2','2001060302_19v2 3','침해대응 국제공조 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060303_19v2','2001060303_19v2 1','증거자료 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060303_19v2','2001060303_19v2 2','디지털포렌식 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060304_19v2','2001060304_19v2 1','디지털포렌식 관련법규 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060304_19v2','2001060304_19v2 2','증거수집기술 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060304_19v2','2001060304_19v2 3','사이버사건 해결하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060305_19v2','2001060305_19v2 1','분석기반 조성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060305_19v2','2001060305_19v2 2','침해사고 원인 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060305_19v2','2001060305_19v2 3','침해사고 사후처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060306_19v2','2001060306_19v2 1','악성코드 분석환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060306_19v2','2001060306_19v2 2','악성코드 분석도구 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060306_19v2','2001060306_19v2 3','악성코드 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060307_19v2','2001060307_19v2 1','보안사고 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060307_19v2','2001060307_19v2 2','보안시스템 로그 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060307_19v2','2001060307_19v2 3','보안로그 상관분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060308_19v2','2001060308_19v2 1','탐지패턴 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060308_19v2','2001060308_19v2 2','정보시스템 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060401_19v2','2001060401_19v2 1','분석 방법론 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060401_19v2','2001060401_19v2 2','분석 결과 심의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060401_19v2','2001060401_19v2 3','최신 기술 동향 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060402_19v2','2001060402_19v2 1','암호알고리즘 특징 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060402_19v2','2001060402_19v2 2','분석도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060402_19v2','2001060402_19v2 3','최신 분석기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060403_19v2','2001060403_19v2 1','테스트베드 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060403_19v2','2001060403_19v2 2','가용성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060403_19v2','2001060403_19v2 3','정책요청 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060404_19v2','2001060404_19v2 1','검증 방법론 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060404_19v2','2001060404_19v2 2','검증결과 심의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060404_19v2','2001060404_19v2 3','최신 검증기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060405_19v2','2001060405_19v2 1','유형별 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060405_19v2','2001060405_19v2 2','검증 도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060405_19v2','2001060405_19v2 3','검증 결과 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060406_19v2','2001060406_19v2 1','최신 기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060406_19v2','2001060406_19v2 2','연구 방법론 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060406_19v2','2001060406_19v2 3','개발 방법론 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060407_19v2','2001060407_19v2 1','보안요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060407_19v2','2001060407_19v2 2','알고리즘 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060407_19v2','2001060407_19v2 3','알고리즘 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060408_19v2','2001060408_19v2 1','암호·인증 모듈 요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060408_19v2','2001060408_19v2 2','암호·인증 모듈 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060408_19v2','2001060408_19v2 3','암호·인증 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060409_19v2','2001060409_19v2 1','개발환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060409_19v2','2001060409_19v2 2','암호·인증 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060409_19v2','2001060409_19v2 3','단위 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060410_19v2','2001060410_19v2 1','운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060410_19v2','2001060410_19v2 2','운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060410_19v2','2001060410_19v2 3','보안신규위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060410_19v2','2001060410_19v2 4','보안솔루션 업데이트 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060501_22v2','2001060501_22v2 1','요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060501_22v2','2001060501_22v2 2','필요기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060501_22v2','2001060501_22v2 3','요구사항 사양 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060501_22v2','2001060501_22v2 4','설계 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060502_22v2','2001060502_22v2 1','기본 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060502_22v2','2001060502_22v2 2','구성요소 성능 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060502_22v2','2001060502_22v2 3','구성요소 호환성 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060502_22v2','2001060502_22v2 4','상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060505_22v2','2001060505_22v2 1','알고리즘 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060505_22v2','2001060505_22v2 2','연동 인터페이스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060505_22v2','2001060505_22v2 3','알고리즘 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060506_22v2','2001060506_22v2 1','영상정보시스템 개발 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060506_22v2','2001060506_22v2 2','영상처리 알고리즘 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060506_22v2','2001060506_22v2 3','영상정보처리시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060507_22v2','2001060507_22v2 1','설계서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060507_22v2','2001060507_22v2 2','설치 공정 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060507_22v2','2001060507_22v2 3','영상정보처리시스템 성능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060507_22v2','2001060507_22v2 4','영상정보처리시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060508_22v2','2001060508_22v2 1','영상정보처리시스템 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060508_22v2','2001060508_22v2 2','영상정보처리시스템 안정화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060508_22v2','2001060508_22v2 3','영상정보처리시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060513_22v2','2001060513_22v2 1','알고리즘 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060513_22v2','2001060513_22v2 2','알고리즘 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060513_22v2','2001060513_22v2 3','알고리즘 기능 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060514_22v2','2001060514_22v2 1','영상관제 업무 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 3','정보기술 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 4','정보기술 관리체계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 5','정보기술 개선점 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 1','전략 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 2','전략 범위 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 3','전략 자원 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 4','전략 일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010101_19v4','2001010101_19v4 5','전략 기획결과 공유하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 1','미션·비전·전략  분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 2','현재 거버넌스 체계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 3','목표 거버넌스 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 4','관리활동 수명주기 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010102_19v4','2001010102_19v4 5','수행조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 1','정보기술 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 2','정보기술 활용 핵심 기회 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 3','핵심 기술 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 4','R&;D 프로젝트 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010103_19v4','2001010103_19v4 5','대내외 전파 확산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 1','경영비전·경영전략 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 2','기술 대응전략 영역 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 3','개발이전단계 프로세스 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 4','개발단계 프로세스 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010104_19v4','2001010104_19v4 5','개발이후단계 프로세스 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010105_19v4','2001010105_19v4 1','아키텍처 지침 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010105_19v4','2001010105_19v4 2','아키텍처 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010105_19v4','2001010105_19v4 3','아키텍처 운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010105_19v4','2001010105_19v4 4','아키텍처 성과관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 1','정보기술·구성원·프로세스 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 2','사용자·외부공급자 시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 3','관리원칙·활동전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 4','고객 관계관리 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010106_19v4','2001010106_19v4 5','파트너 관계관리 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 1','투자 예산 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 2','투자 포트폴리오 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 3','투자 평가 기법 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 4','투자관리 프로세스 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010107_19v4','2001010107_19v4 5','투자 성과지표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 1','원칙 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 2','성과관리 체계 도입하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 3','보상전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 4','성과관리 확산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010108_19v4','2001010108_19v4 5','성과지표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 1','통합 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 2','부서 별 전략 취합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 3','통합 조정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 4','갱신 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010109_19v4','2001010109_19v4 5','정보기술 전략 갱신하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 1','전략 실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 2','경영층 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 3','대내외 전파하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 4','정보기술 전략 실행 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010110_19v4','2001010110_19v4 5','실행결과 피드백 수렴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 1','비즈니스영역 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 2','컨설팅 범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 3','컨설팅 일정 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 4','컨설팅 조직 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010201_19v4','2001010201_19v4 5','컨설팅 방법론 고객화(Tailoring) 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010202_19v4','2001010202_19v4 1','경영전략 분석 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010202_19v4','2001010202_19v4 2','이해관계자 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010202_19v4','2001010202_19v4 3','경영전략 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010202_19v4','2001010202_19v4 4','경영전략 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010203_19v4','2001010203_19v4 1','고객 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010203_19v4','2001010203_19v4 2','상품·산업 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010203_19v4','2001010203_19v4 3','경쟁 기업 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010203_19v4','2001010203_19v4 4','내부 역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010204_19v4','2001010204_19v4 1','운영조직 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010204_19v4','2001010204_19v4 2','업무프로세스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010204_19v4','2001010204_19v4 3','법제도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010204_19v4','2001010204_19v4 4','선진 사례 비교분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010206_19v4','2001010206_19v4 1','개선 항목 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010206_19v4','2001010206_19v4 2','정보기술 운영목표 수정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010206_19v4','2001010206_19v4 3','주요성과지표 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010206_19v4','2001010206_19v4 4','핵심성공요소 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010207_19v4','2001010207_19v4 1','운영조직 진단 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010207_19v4','2001010207_19v4 2','업무프로세스 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010207_19v4','2001010207_19v4 3','법제도 대응방안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 1','소프트웨어 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 2','하드웨어 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 3','데이터 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 4','네트워크 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 5','정보보호구조 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010208_19v4','2001010208_19v4 6','업무시스템 기능 개선안 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010209_19v4','2001010209_19v4 1','정보기술 자문하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010209_19v4','2001010209_19v4 2','자문내용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010209_19v4','2001010209_19v4 3','컨설팅 자문내용 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010210_19v4','2001010210_19v4 1','컨설팅 성과지표 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010210_19v4','2001010210_19v4 2','컨설팅 성과지표 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010210_19v4','2001010210_19v4 3','컨설팅 성과지표 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010211_19v4','2001010211_19v4 1','하드웨어 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010211_19v4','2001010211_19v4 2','데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010211_19v4','2001010211_19v4 3','네트워크 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010211_19v4','2001010211_19v4 4','정보보호구조 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010212_19v4','2001010212_19v4 1','소프트웨어 구성현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010212_19v4','2001010212_19v4 2','업무시스템 기능분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010301_19v4','2001010301_19v4 1','일반환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010301_19v4','2001010301_19v4 2','고객환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010301_19v4','2001010301_19v4 3','경쟁사환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010301_19v4','2001010301_19v4 4','자사환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 1','정보화 데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010302_19v4','2001010302_19v4 2','정보기술 아키텍처 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 1','정보기술 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 2','정보기술 운영현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 3','정보기술 투자전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 4','정보기술 구매전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010303_19v4','2001010303_19v4 5','정보기술 운영전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 1','정보기술 예산 운영지침 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 2','정보기술 예산항목 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 3','정보기술 예산계획 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 4','정보기술 예산집행 일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010304_19v4','2001010304_19v4 5','정보기술 예산관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010305_19v4','2001010305_19v4 1','정보기술 개념도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010305_19v4','2001010305_19v4 2','정보기술 모형 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010305_19v4','2001010305_19v4 3','정보기술 구축기술 확보방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010305_19v4','2001010305_19v4 4','정보기술 운영모형 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010306_19v4','2001010306_19v4 1','하드웨어 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010306_19v4','2001010306_19v4 2','소프트웨어 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010306_19v4','2001010306_19v4 3','운영 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010306_19v4','2001010306_19v4 4','정보기술 아키텍처 통합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 1','정보기술 기존 운영체계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 2','정보기술 운영체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 3','정보기술 운영기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 4','정보기술 운영조직 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 5','정보기술 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 1','인력계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 2','장비·도구계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 3','경비계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 4','구매계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 5','설치계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 1','일정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 2','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 3','산출물 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 4','변화관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 5','운영 유지보수 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 1','성과평가 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 2','성과평가 방법 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 3','성과평가 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 4','평가결과 피드백 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 5','성과 확대방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 1','비즈니스 전략 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 2','조직 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 3','핵심역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 4','관리 절차 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 5','재무 구조 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 1','시장동향 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 2','소비자 요구 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 3','정보기술 정책 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 4','기술동향 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 5','경쟁사 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 6','대체재 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010403_19v4','2001010403_19v4 1','표준 및 특허 기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010403_19v4','2001010403_19v4 2','OSS현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010403_19v4','2001010403_19v4 3','개발 플랫폼 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010403_19v4','2001010403_19v4 4','기술 도입 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 1','SW 제품 가격정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 2','예상 매출 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 3','비용 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 4','비용 효과 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 5','제품 모형(Mockup) 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 1','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 2','명세 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 3','개념 수준 SW 아키텍처 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 4','운영 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 5','제품 운영 환경 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010406_19v4','2001010406_19v4 1','SW제품 선정 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010406_19v4','2001010406_19v4 2','SW제품 라인업 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010406_19v4','2001010406_19v4 3','SW제품 라이프 싸이클 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010406_19v4','2001010406_19v4 4','SW제품 중장기 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 1','개발 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 2','개발 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 3','개발 예산 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 4','개발 일정 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 5','투입 자원 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 6','개발 수행 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010408_19v4','2001010408_19v4 1','유지보수 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010408_19v4','2001010408_19v4 2','사용자 맞춤화 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010408_19v4','2001010408_19v4 3','사후 지원계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010408_19v4','2001010408_19v4 4','SW제품 개선계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010409_19v4','2001010409_19v4 1','SW제품인증 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010409_19v4','2001010409_19v4 2','판매 라이선스정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010409_19v4','2001010409_19v4 3','제품패키징 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010409_19v4','2001010409_19v4 4','판매방안 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010410_19v4','2001010410_19v4 1','고객 분류하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010410_19v4','2001010410_19v4 2','대상 고객 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010410_19v4','2001010410_19v4 3','고객 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010410_19v4','2001010410_19v4 4','고객 관계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010509_21v4','2001010509_21v4 1','분석 결과 시각화 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010509_21v4','2001010509_21v4 2','분석 결과 시각화 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010509_21v4','2001010509_21v4 3','분석 결과 시각화 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010510_21v4','2001010510_21v4 1','데이터 정제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010510_21v4','2001010510_21v4 2','데이터 통합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010510_21v4','2001010510_21v4 3','데이터 변환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010511_21v4','2001010511_21v4 1','기술통계 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010511_21v4','2001010511_21v4 2','데이터 분포 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010511_21v4','2001010511_21v4 3','변수간 관계 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010512_21v1','2001010512_21v1 1','빅데이터 분석 피처 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010512_21v1','2001010512_21v1 2','빅데이터 분석 피처 추출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010512_21v1','2001010512_21v1 3','빅데이터 분석 피처 선택하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010512_21v1','2001010512_21v1 4','빅데이터 분석 피처 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 1','데이터 분석 가설 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 2','데이터셋 분할하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 3','통계적 모델 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 4','머신러닝 모델 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 5','모델 성능 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010514_21v1','2001010514_21v1 1','빅데이터 분석 모델 평가 기준 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010514_21v1','2001010514_21v1 2','빅데이터 분석 모델 평가 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010514_21v1','2001010514_21v1 3','빅데이터 분석 모델 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010515_21v1','2001010515_21v1 1','빅데이터 분석 플로우 구성요소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010515_21v1','2001010515_21v1 2','빅데이터 분석 플로우 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010515_21v1','2001010515_21v1 3','빅데이터 분석 플로우 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010516_21v1','2001010516_21v1 1','데이터 분석 언어 기본문법 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010516_21v1','2001010516_21v1 2','데이터 분석 언어특성 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010516_21v1','2001010516_21v1 3','데이터 분석 라이브러리 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010516_21v1','2001010516_21v1 4','데이터 분석 자동화 도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010601_19v2','2001010601_19v2 1','IoT 대상 시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010601_19v2','2001010601_19v2 2','IoT 고객환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010601_19v2','2001010601_19v2 3','IoT 경쟁사환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010601_19v2','2001010601_19v2 4','IoT 내부역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010602_19v2','2001010602_19v2 1','IoT 비즈니스 모델 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010602_19v2','2001010602_19v2 2','IoT 요소기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010602_19v2','2001010602_19v2 3','IoT 비즈니스 모델 구성요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010602_19v2','2001010602_19v2 4','IoT 비즈니스 모델 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010603_19v2','2001010603_19v2 1','IoT 서비스 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010603_19v2','2001010603_19v2 2','IoT 서비스 모형 기능 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010603_19v2','2001010603_19v2 3','IoT 디바이스 모형 기능 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010603_19v2','2001010603_19v2 4','IoT 표준 활용 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010604_19v2','2001010604_19v2 1','IoT 디바이스 요소기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010604_19v2','2001010604_19v2 2','IoT 디바이스 사양 명세화 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010604_19v2','2001010604_19v2 3','IoT 디바이스 디자인 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010604_19v2','2001010604_19v2 4','IoT 디바이스 UI기능 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010605_19v2','2001010605_19v2 1','IoT 네트워크 구성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010605_19v2','2001010605_19v2 2','IoT 서비스망 구성 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010605_19v2','2001010605_19v2 3','IoT 네트워크 운영/관리 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010606_19v2','2001010606_19v2 1','IoT 플랫폼 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010606_19v2','2001010606_19v2 2','IoT 플랫폼 현황 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010606_19v2','2001010606_19v2 3','IoT 플랫폼 적용방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010607_19v2','2001010607_19v2 1','IoT 응용소프트웨어 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010607_19v2','2001010607_19v2 2','IoT 응용소프트웨어 자원계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010607_19v2','2001010607_19v2 3','IoT 응용소프트웨어 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010607_19v2','2001010607_19v2 4','IoT 응용소프트웨어 운영 시나리오 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010608_19v2','2001010608_19v2 1','IoT 데이터 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010608_19v2','2001010608_19v2 2','IoT 데이터 수집 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010608_19v2','2001010608_19v2 3','IoT 데이터 저장 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010608_19v2','2001010608_19v2 4','IoT 데이터 활용 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010609_19v2','2001010609_19v2 1','IoT 보안 위협 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010609_19v2','2001010609_19v2 2','IoT 보안 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010609_19v2','2001010609_19v2 3','IoT 보안 관리방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010610_19v2','2001010610_19v2 1','IoT 서비스 마케팅 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010610_19v2','2001010610_19v2 2','IoT 서비스 마케팅 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010610_19v2','2001010610_19v2 3','IoT 서비스 마케팅 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010610_19v2','2001010610_19v2 4','IoT 서비스 마케팅 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010611_19v2','2001010611_19v2 1','IoT 서비스 유지보수 운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010611_19v2','2001010611_19v2 2','IoT 서비스 고객 요구사항 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010611_19v2','2001010611_19v2 3','IoT 서비스 고객 지원계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010611_19v2','2001010611_19v2 4','IoT 서비스 협력업체 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010701_19v2','2001010701_19v2 1','빅데이터 서비스 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010701_19v2','2001010701_19v2 2','빅데이터 서비스 모델 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010701_19v2','2001010701_19v2 3','빅데이터 서비스 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010701_19v2','2001010701_19v2 4','빅데이터 서비스 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010702_19v2','2001010702_19v2 1','빅데이터 서비스 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010702_19v2','2001010702_19v2 2','빅데이터 데이터 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010702_19v2','2001010702_19v2 3','빅데이터 기술 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010702_19v2','2001010702_19v2 4','빅데이터 인력 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 1','빅데이터 분석 요건 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 2','빅데이터 분석 데이터 확보 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 3','빅데이터 분석 데이터 탐색 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 4','빅데이터 분석 모델링 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 5','빅데이터 분석 결과 적용 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010704_19v2','2001010704_19v2 1','빅데이터 아키텍처 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010704_19v2','2001010704_19v2 2','빅데이터 수집 기술 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010704_19v2','2001010704_19v2 3','빅데이터 저장 기술 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010704_19v2','2001010704_19v2 4','빅데이터 처리 기술 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010705_19v2','2001010705_19v2 1','빅데이터 성과기준 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010705_19v2','2001010705_19v2 2','빅데이터 성과측정 방법 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010705_19v2','2001010705_19v2 3','빅데이터 성과평가 실행 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010705_19v2','2001010705_19v2 4','빅데이터 성과평가 피드백 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010706_19v2','2001010706_19v2 1','빅데이터 분석 결과 활용 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010706_19v2','2001010706_19v2 2','빅데이터 비즈니스 모델 활용 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010706_19v2','2001010706_19v2 3','빅데이터 시장 활용 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010706_19v2','2001010706_19v2 4','빅데이터 상품화 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010707_19v2','2001010707_19v2 1','빅데이터 품질관리 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010707_19v2','2001010707_19v2 2','빅데이터 보안관리 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010707_19v2','2001010707_19v2 3','빅데이터 조직 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010707_19v2','2001010707_19v2 4','빅데이터 운영관리 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010801_19v2','2001010801_19v2 1','핀테크 생태계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010801_19v2','2001010801_19v2 2','핀테크 제도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010801_19v2','2001010801_19v2 3','핀테크 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010802_19v2','2001010802_19v2 1','핀테크 데이터 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010802_19v2','2001010802_19v2 2','핀테크 데이터 분류하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010802_19v2','2001010802_19v2 3','핀테크 데이터 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010802_19v2','2001010802_19v2 4','핀테크 데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010803_19v2','2001010803_19v2 1','핀테크 기술 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010803_19v2','2001010803_19v2 2','핀테크 기술 분류하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010803_19v2','2001010803_19v2 3','핀테크 기술 체계도 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010803_19v2','2001010803_19v2 4','핀테크 핵심 기술 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 1','핀테크 서비스 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 2','핀테크 서비스 시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 3','핀테크 서비스 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 4','핀테크 서비스 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 5','핀테크 서비스 UX 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 6','핀테크 서비스 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010805_19v2','2001010805_19v2 1','핀테크 플랫폼 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010805_19v2','2001010805_19v2 2','핀테크 플랫폼 시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010805_19v2','2001010805_19v2 3','핀테크 플랫폼 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010805_19v2','2001010805_19v2 4','핀테크 플랫폼 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010806_19v2','2001010806_19v2 1','핀테크 보안 환경 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010806_19v2','2001010806_19v2 2','핀테크 보안 위험 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010806_19v2','2001010806_19v2 3','핀테크 보안 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010806_19v2','2001010806_19v2 4','핀테크 보안 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010807_19v2','2001010807_19v2 1','핀테크 시스템 개발 요구사항 반영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010807_19v2','2001010807_19v2 2','핀테크 시스템 개발 아키텍처 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010807_19v2','2001010807_19v2 3','핀테크 시스템 개발 타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010807_19v2','2001010807_19v2 4','핀테크 시스템 개발 추진 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010808_19v2','2001010808_19v2 1','핀테크 마케팅 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010808_19v2','2001010808_19v2 2','핀테크 마케팅 채널 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010808_19v2','2001010808_19v2 3','핀테크 마케팅 운영 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010808_19v2','2001010808_19v2 4','핀테크 마케팅 성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010809_19v2','2001010809_19v2 1','핀테크 추진 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010809_19v2','2001010809_19v2 2','핀테크 위험 관리 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010809_19v2','2001010809_19v2 3','핀테크 경제성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010809_19v2','2001010809_19v2 4','핀테크 실행 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020101_19v4','2001020101_19v4 1','SW아키텍처 일정관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020101_19v4','2001020101_19v4 2','SW아키텍처 범위관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020101_19v4','2001020101_19v4 3','SW아키텍처 이해관계자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020101_19v4','2001020101_19v4 4','SW아키텍처 위험관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020102_19v5','2001020102_19v5 1','SW아키텍처 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020102_19v5','2001020102_19v5 2','SW아키텍처 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020102_19v5','2001020102_19v5 3','SW아키텍처 제약사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020104_19v5','2001020104_19v5 1','SW아키텍처 요소기술 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020104_19v5','2001020104_19v5 2','SW아키텍처 요소기술 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020104_19v5','2001020104_19v5 3','SW아키텍처 요소기술 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020104_19v5','2001020104_19v5 4','SW아키텍처 요소기술 커스터마이징하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020106_19v4','2001020106_19v4 1','SW아키텍처 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020106_19v4','2001020106_19v4 2','SW구현환경 제공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020106_19v4','2001020106_19v4 3','SW아키텍처 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020107_19v4','2001020107_19v4 1','SW아키텍처 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020107_19v4','2001020107_19v4 2','시스템 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020107_19v4','2001020107_19v4 3','보안성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020108_19v4','2001020108_19v4 1','SW아키텍처 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020108_19v4','2001020108_19v4 2','SW아키텍처 활용 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020108_19v4','2001020108_19v4 3','SW아키텍처 준수 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020109_19v4','2001020109_19v4 1','SW아키텍처 변경사항 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020109_19v4','2001020109_19v4 2','SW아키텍처 변경방법 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020109_19v4','2001020109_19v4 3','SW아키텍처 변경 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020109_19v4','2001020109_19v4 4','SW아키텍처 자산화 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020110_19v5','2001020110_19v5 1','현행 SW아키텍처 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020110_19v5','2001020110_19v5 2','SW아키텍처 결정요인 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020110_19v5','2001020110_19v5 3','SW아키텍처 기능 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020111_19v5','2001020111_19v5 1','SW아키텍처 품질속성 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020111_19v5','2001020111_19v5 2','상위수준 후보 SW아키텍처 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020112_19v5','2001020112_19v5 1','SW아키텍처 설계 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020112_19v5','2001020112_19v5 2','적용 아키텍처 접근법 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020112_19v5','2001020112_19v5 3','SW아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020112_19v5','2001020112_19v5 4','SW아키텍처 설계 적정성 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020113_19v5','2001020113_19v5 1','SW아키텍처 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020113_19v5','2001020113_19v5 2','SW아키텍처 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020201_19v4','2001020201_19v4 1','현행 시스템 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020201_19v4','2001020201_19v4 2','요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020201_19v4','2001020201_19v4 3','분석모델 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020205_19v5','2001020205_19v5 1','논리 데이터저장소 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020205_19v5','2001020205_19v5 2','물리 데이터저장소 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020205_19v5','2001020205_19v5 3','데이터 조작 프로시저 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020205_19v5','2001020205_19v5 4','데이터 조작 프로시저 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020206_19v5','2001020206_19v5 1','연계 데이터 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020206_19v5','2001020206_19v5 2','연계 메커니즘 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020206_19v5','2001020206_19v5 3','내외부 연계 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020208_19v4','2001020208_19v4 1','정보시스템 사용자 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020208_19v4','2001020208_19v4 2','정보시스템 이행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020208_19v4','2001020208_19v4 3','정보시스템 안정화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020209_19v5','2001020209_19v5 1','제품소프트웨어 패키징하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020209_19v5','2001020209_19v5 2','제품소프트웨어 매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020209_19v5','2001020209_19v5 3','제품소프트웨어 버전관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020211_19v5','2001020211_19v5 1','개발환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020211_19v5','2001020211_19v5 2','공통 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020211_19v5','2001020211_19v5 3','서버 프로그램 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020211_19v5','2001020211_19v5 4','배치 프로그램 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020212_19v5','2001020212_19v5 1','인터페이스 설계서 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020212_19v5','2001020212_19v5 2','인터페이스 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020212_19v5','2001020212_19v5 3','인터페이스 구현 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020214_19v5','2001020214_19v5 1','애플리케이션 배포 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020214_19v5','2001020214_19v5 2','애플리케이션 소스 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020214_19v5','2001020214_19v5 3','애플리케이션 빌드하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020214_19v5','2001020214_19v5 4','애플리케이션 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020217_19v5','2001020217_19v5 1','리팩토링 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020217_19v5','2001020217_19v5 2','소스 코드 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020217_19v5','2001020217_19v5 3','리팩토링 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020218_19v5','2001020218_19v5 1','인터페이스 요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020218_19v5','2001020218_19v5 2','인터페이스 대상 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020218_19v5','2001020218_19v5 3','인터페이스 상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020219_19v5','2001020219_19v5 1','요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020219_19v5','2001020219_19v5 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020219_19v5','2001020219_19v5 3','요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020219_19v5','2001020219_19v5 4','요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020220_19v2','2001020220_19v2 1','기능 모델 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020220_19v2','2001020220_19v2 2','기능 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020221_19v5','2001020221_19v5 1','공통 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020221_19v5','2001020221_19v5 2','타 시스템 연동설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020222_19v5','2001020222_19v5 1','정적 분석모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020222_19v5','2001020222_19v5 2','정적모델 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020223_19v5','2001020223_19v5 1','동적 분석모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020223_19v5','2001020223_19v5 2','동적모델 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020224_19v5','2001020224_19v5 1','UI 요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020224_19v5','2001020224_19v5 2','UI 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020225_19v5','2001020225_19v5 1','UI 설계 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020225_19v5','2001020225_19v5 2','UI 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020226_19v5','2001020226_19v5 1','애플리케이션  테스트케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020226_19v5','2001020226_19v5 2','애플리케이션  통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020226_19v5','2001020226_19v5 3','애플리케이션 성능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020227_19v5','2001020227_19v5 1','애플리케이션 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020227_19v5','2001020227_19v5 2','애플리케이션 결함 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020228_19v5','2001020228_19v5 1','CASE 도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020228_19v5','2001020228_19v5 2','품질요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020229_19v5','2001020229_19v5 1','소프트웨어개발 방법론 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020229_19v5','2001020229_19v5 2','소프트웨어개발 방법론 테일러링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020230_19v4','2001020230_19v4 1','언어특성 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020230_19v4','2001020230_19v4 2','라이브러리 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020231_19v4','2001020231_19v4 1','구조적 프로그래밍 언어 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020231_19v4','2001020231_19v4 2','객체지향 프로그래밍 언어 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020231_19v4','2001020231_19v4 3','스크립트 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020232_19v4','2001020232_19v4 1','네트워크 기초 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020232_19v4','2001020232_19v4 2','미들웨어 기초 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020232_19v4','2001020232_19v4 3','데이터베이스 기초 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020233_19v4','2001020233_19v4 1','운영체제 기초 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020233_19v4','2001020233_19v4 2','기본 개발환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020234_19v1','2001020234_19v1 1','소스코드 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020234_19v1','2001020234_19v1 2','개발 환경 백업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020234_19v1','2001020234_19v1 3','개발 환경 복원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020301_19v3','2001020301_19v3 1','하드웨어 자료 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020301_19v3','2001020301_19v3 2','하드웨어 기능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020301_19v3','2001020301_19v3 3','시험요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020301_19v3','2001020301_19v3 4','하드웨어 분석 결과 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 1','임베디드 시스템 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 2','임베디드 시스템 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 3','시스템 테스트 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 4','임베디드 시스템 버그 수정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 5','임베디드 시스템 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020310_19v3','2001020310_19v3 1','요구 문서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020310_19v3','2001020310_19v3 2','기술문서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020310_19v3','2001020310_19v3 3','사용자 매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020310_19v3','2001020310_19v3 4','사용자 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020311_19v4','2001020311_19v4 1','운영체제 부트 과정 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020311_19v4','2001020311_19v4 2','펌웨어 요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020311_19v4','2001020311_19v4 3','펌웨어 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020312_19v5','2001020312_19v5 1','하드웨어 테스트 SW 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020312_19v5','2001020312_19v5 2','펌웨어 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020312_19v5','2001020312_19v5 3','단위 SW 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020313_19v5','2001020313_19v5 1','펌웨어 설계 문서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020313_19v5','2001020313_19v5 2','하드웨어 데이터시트 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020314_19v6','2001020314_19v6 1','하드웨어 테스트 SW 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020314_19v6','2001020314_19v6 2','부트로더 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020314_19v6','2001020314_19v6 3','소스 코드 인스펙션하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020315_19v6','2001020315_19v6 1','커널 소스 분석 환경 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020315_19v6','2001020315_19v6 2','커널 소스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020316_19v5','2001020316_19v5 1','커널 이미지 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020316_19v5','2001020316_19v5 2','부팅 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020317_19v4','2001020317_19v4 1','디바이스 드라이버 설계 전 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020317_19v4','2001020317_19v4 2','디바이스 드라이버 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020318_19v5','2001020318_19v5 1','API 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020318_19v5','2001020318_19v5 2','디바이스 드라이버 설계 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020319_19v5','2001020319_19v5 1','디바이스 드라이버 개발 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020319_19v5','2001020319_19v5 2','디바이스 드라이버 개발 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020320_19v6','2001020320_19v6 1','디바이스 드라이버 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020320_19v6','2001020320_19v6 2','디바이스 드라이버 소스 코드 인스펙션하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020321_19v5','2001020321_19v5 1','애플리케이션 요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020321_19v5','2001020321_19v5 2','애플리케이션 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020322_19v6','2001020322_19v6 1','애플리케이션 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020322_19v6','2001020322_19v6 2','모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020322_19v6','2001020322_19v6 3','UML 다이어그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020323_19v5','2001020323_19v5 1','기술명세 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020323_19v5','2001020323_19v5 2','애플리케이션 개발 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020324_19v6','2001020324_19v6 1','애플리케이션 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020324_19v6','2001020324_19v6 2','애플리케이션 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020325_19v2','2001020325_19v2 1','오픈 플랫폼 개발 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020325_19v2','2001020325_19v2 2','오픈 플랫폼 디바이스 제어하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020325_19v2','2001020325_19v2 3','오픈 플랫폼 애플리케이션 제어하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020326_19v2','2001020326_19v2 1','임베디드 SW 요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020326_19v2','2001020326_19v2 2','임베디드 SW 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020326_19v2','2001020326_19v2 3','임베디드 SW 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020327_19v1','2001020327_19v1 1','임베디드 SW 운영환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020327_19v1','2001020327_19v1 2','임베디드 SW 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020327_19v1','2001020327_19v1 3','임베디드 SW 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020328_19v1','2001020328_19v1 1','임베디드 SW 모듈화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020328_19v1','2001020328_19v1 2','데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020328_19v1','2001020328_19v1 3','인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020401_19v4','2001020401_19v4 1','데이터베이스 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020401_19v4','2001020401_19v4 2','데이터베이스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020401_19v4','2001020401_19v4 3','데이터베이스 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020401_19v4','2001020401_19v4 4','데이터베이스 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020402_19v4','2001020402_19v4 1','주제영역 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020402_19v4','2001020402_19v4 2','핵심개체 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020402_19v4','2001020402_19v4 3','핵심관계 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020402_19v4','2001020402_19v4 4','개념 E-R 다이어그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020403_19v4','2001020403_19v4 1','개체 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020403_19v4','2001020403_19v4 2','관계 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020403_19v4','2001020403_19v4 3','논리 E-R 다이어그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020403_19v4','2001020403_19v4 4','데이터베이스 정규화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020404_19v4','2001020404_19v4 1','물리요소 조사 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020404_19v4','2001020404_19v4 2','데이터베이스 물리속성 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020404_19v4','2001020404_19v4 3','물리 E-R 다이어그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020404_19v4','2001020404_19v4 4','데이터베이스 반정규화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020405_19v4','2001020405_19v4 1','DBMS 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020405_19v4','2001020405_19v4 2','데이터베이스 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020405_19v4','2001020405_19v4 3','데이터베이스 오브젝트 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020408_19v4','2001020408_19v4 1','성능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020408_19v4','2001020408_19v4 2','성능개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020408_19v4','2001020408_19v4 3','성능개선결과 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020411_19v4','2001020411_19v4 1','데이터 전환계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020411_19v4','2001020411_19v4 2','데이터 전환 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020412_19v4','2001020412_19v4 1','데이터 전환 프로그램 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020412_19v4','2001020412_19v4 2','데이터 전환 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020412_19v4','2001020412_19v4 3','데이터 정합성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020412_19v4','2001020412_19v4 4','데이터 정제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020413_19v4','2001020413_19v4 1','기본 SQL 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020413_19v4','2001020413_19v4 2','고급 SQL 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020414_19v4','2001020414_19v4 1','절차형 SQL 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020414_19v4','2001020414_19v4 2','응용 SQL 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020415_19v1','2001020415_19v1 1','데이터 조회하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020415_19v1','2001020415_19v1 2','데이터 수정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020501_19v4','2001020501_19v4 1','기술트렌드 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020501_19v4','2001020501_19v4 2','거시시장환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020501_19v4','2001020501_19v4 3','경쟁환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020503_19v4','2001020503_19v4 1','네트워크 토폴로지 연결성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020503_19v4','2001020503_19v4 2','네트워크 토폴로지 장단점 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020503_19v4','2001020503_19v4 3','네트워크 토폴로지 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020503_19v4','2001020503_19v4 4','네트워크 토폴로지 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020504_19v4','2001020504_19v4 1','네트워크 자원관리 방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020504_19v4','2001020504_19v4 2','표준화 네트워크 자원관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020505_19v4','2001020505_19v4 1','네트워크 QoS 제공전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020505_19v4','2001020505_19v4 2','네트워크 QoS 제공방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020506_19v4','2001020506_19v4 1','소프트웨어 계층별 모델링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020506_19v4','2001020506_19v4 2','시스템 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020506_19v4','2001020506_19v4 3','플랫폼 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020507_19v4','2001020507_19v4 1','소프트웨어 개발방법론 커스터마이징하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020507_19v4','2001020507_19v4 2','세부작업절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020507_19v4','2001020507_19v4 3','절차별 기법 활용 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020507_19v4','2001020507_19v4 4','품질목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020508_19v3','2001020508_19v3 1','개발환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020508_19v3','2001020508_19v3 2','기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020510_19v4','2001020510_19v4 1','프로젝트 단계별 일정 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020510_19v4','2001020510_19v4 2','프로젝트 단계별 게이트 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020510_19v4','2001020510_19v4 3','프로젝트 형상 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020511_19v4','2001020511_19v4 1','프로토콜 명세 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020511_19v4','2001020511_19v4 2','프로토콜 동작 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020512_19v4','2001020512_19v4 1','프로토콜 명세서 기반 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020512_19v4','2001020512_19v4 2','신규 프로토콜 표준화 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020513_19v4','2001020513_19v4 1','네트워크 자원 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020513_19v4','2001020513_19v4 2','네트워크 자원 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020514_19v4','2001020514_19v4 1','서비스별 네트워크 QoS 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020514_19v4','2001020514_19v4 2','네트워크 QoS 제공 수준 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020515_19v3','2001020515_19v3 1','프로그램 디버깅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020515_19v3','2001020515_19v3 2','프로그램 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020516_19v4','2001020516_19v4 1','품질평가 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020516_19v4','2001020516_19v4 2','품질평가 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020517_19v4','2001020517_19v4 1','평가 수행 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020517_19v4','2001020517_19v4 2','평가 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020518_19v4','2001020518_19v4 1','네트워크 패킷 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020518_19v4','2001020518_19v4 2','네트워크 패킷 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020601_19v5','2001020601_19v5 1','보안 범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020601_19v5','2001020601_19v5 2','보안 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020601_19v5','2001020601_19v5 3','보안 구축 계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020603_19v5','2001020603_19v5 1','보안요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020603_19v5','2001020603_19v5 2','보안요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020603_19v5','2001020603_19v5 3','보안요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020604_19v5','2001020604_19v5 1','정보보호정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020604_19v5','2001020604_19v5 2','정보보호조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020604_19v5','2001020604_19v5 3','인적보안대책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020605_19v4','2001020605_19v4 1','물리적 보호구역 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020605_19v4','2001020605_19v4 2','시스템 보호하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020605_19v4','2001020605_19v4 3','사무실 보안 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 1','보안인증 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 2','보안인증 신청하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 3','보안인증 심사받기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 4','보안인증 부적합사항 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 5','보안인증 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020611_19v5','2001020611_19v5 1','SW개발 보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020611_19v5','2001020611_19v5 2','SW개발 보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020612_19v5','2001020612_19v5 1','DB보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020612_19v5','2001020612_19v5 2','DB보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020613_19v5','2001020613_19v5 1','시스템 보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020613_19v5','2001020613_19v5 2','시스템 보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020614_19v5','2001020614_19v5 1','NW보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020614_19v5','2001020614_19v5 2','NW보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020701_19v3','2001020701_19v3 1','트렌드 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020701_19v3','2001020701_19v3 2','경쟁 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020702_19v3','2001020702_19v3 1','UI/UX 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020702_19v3','2001020702_19v3 2','UI/UX 작업분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020702_19v3','2001020702_19v3 3','리소스 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020703_19v3','2001020703_19v3 1','사용자 리서치 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020703_19v3','2001020703_19v3 2','리서치 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020703_19v3','2001020703_19v3 3','리서치 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020704_19v3','2001020704_19v3 1','UI/UX 콘셉트 아이디어 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020704_19v3','2001020704_19v3 2','패스트 프로토타입 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020704_19v3','2001020704_19v3 3','패스트 프로토타이핑 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020705_19v2','2001020705_19v2 1','UI/UX 콘셉트 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020705_19v2','2001020705_19v2 2','기능(FEATURE) 리스트 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020705_19v2','2001020705_19v2 3','콘텐츠 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020706_19v2','2001020706_19v2 1','정보 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020706_19v2','2001020706_19v2 2','와이어프레임 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020706_19v2','2001020706_19v2 3','태스크 플로우 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020707_19v3','2001020707_19v3 1','GUI 디자인 콘셉트 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020707_19v3','2001020707_19v3 2','GUI 디자인 요소 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020708_19v3','2001020708_19v3 1','UI 설계 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020708_19v3','2001020708_19v3 2','UI 구현 표준 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020709_19v3','2001020709_19v3 1','사용성 테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020709_19v3','2001020709_19v3 2','사용성 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020709_19v3','2001020709_19v3 3','테스트 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020710_19v2','2001020710_19v2 1','UI/UX 가이드 기준 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020710_19v2','2001020710_19v2 2','UI/UX 가이드 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020710_19v2','2001020710_19v2 3','UI/UX 가이드 공유하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020711_19v3','2001020711_19v3 1','GUI 템플릿 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020711_19v3','2001020711_19v3 2','인터랙션 요소 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020712_19v3','2001020712_19v3 1','저작도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020712_19v3','2001020712_19v3 2','UI 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 1','시스템SW 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 2','시스템SW 선도모델 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 3','자료 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 4','요구 기능 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 5','요구 비기능 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020802_19v3','2001020802_19v3 1','SW 모듈화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020802_19v3','2001020802_19v3 2','데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020802_19v3','2001020802_19v3 3','외부 인터페이스 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020802_19v3','2001020802_19v3 4','시스템 인터페이스 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020803_19v3','2001020803_19v3 1','단위 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020803_19v3','2001020803_19v3 2','환경 변수 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020803_19v3','2001020803_19v3 3','내부 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020803_19v3','2001020803_19v3 4','외부 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020805_19v3','2001020805_19v3 1','모듈 통합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020805_19v3','2001020805_19v3 2','통합 실행 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020805_19v3','2001020805_19v3 3','설치 패키지 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020806_19v3','2001020806_19v3 1','시스템SW 테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020806_19v3','2001020806_19v3 2','시스템SW 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020806_19v3','2001020806_19v3 3','시스템SW 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020806_19v3','2001020806_19v3 4','시스템SW 품질 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020807_19v3','2001020807_19v3 1','시스템SW 매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020807_19v3','2001020807_19v3 2','FAQ 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020807_19v3','2001020807_19v3 3','백서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020807_19v3','2001020807_19v3 4','교육교재 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020808_19v2','2001020808_19v2 1','시스템SW 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020808_19v2','2001020808_19v2 2','시범 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020809_19v3','2001020809_19v3 1','단위 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020809_19v3','2001020809_19v3 2','환경 변수 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020810_19v3','2001020810_19v3 1','내부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020810_19v3','2001020810_19v3 2','외부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020811_19v2','2001020811_19v2 1','환경 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020811_19v2','2001020811_19v2 2','사용자 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020901_19v2','2001020901_19v2 1','빅데이터 플랫폼 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020901_19v2','2001020901_19v2 2','빅데이터 플랫폼 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020901_19v2','2001020901_19v2 3','빅데이터 플랫폼 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020902_19v2','2001020902_19v2 1','빅데이터 플랫폼 인프라구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020902_19v2','2001020902_19v2 2','빅데이터 입출력구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020903_19v2','2001020903_19v2 1','빅데이터 수집시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020903_19v2','2001020903_19v2 2','빅데이터 수집시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020903_19v2','2001020903_19v2 3','빅데이터 수집·변환 모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020903_19v2','2001020903_19v2 4','수집 데이터 검증모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020904_19v2','2001020904_19v2 1','빅데이터 저장모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020904_19v2','2001020904_19v2 2','빅데이터 저장관리시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020904_19v2','2001020904_19v2 3','빅데이터 적재모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 1','빅데이터 처리시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 2','빅데이터 처리시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 3','분산처리 수행모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 4','실시간 수행모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 5','이벤트처리 수행모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020906_19v2','2001020906_19v2 1','빅데이터 분석시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020906_19v2','2001020906_19v2 2','빅데이터 분석시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020906_19v2','2001020906_19v2 3','빅데이터 분석모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020907_19v2','2001020907_19v2 1','빅데이터 품질관리시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020907_19v2','2001020907_19v2 2','빅데이터 품질관리시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020907_19v2','2001020907_19v2 3','빅데이터 품질관리모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020908_19v2','2001020908_19v2 1','빅데이터 플랫폼 테스트 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020908_19v2','2001020908_19v2 2','빅데이터 플랫폼 기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020908_19v2','2001020908_19v2 3','빅데이터 플랫폼 비기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021001_19v2','2001021001_19v2 1','핀테크 비즈니스 모델 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021001_19v2','2001021001_19v2 2','핀테크 선도기술 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021001_19v2','2001021001_19v2 3','핀테크 기능 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021001_19v2','2001021001_19v2 4','핀테크 비기능 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020701_19v3','2001020701_19v3 3','내부역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021002_19v2','2001021002_19v2 1','핀테크 인프라 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021002_19v2','2001021002_19v2 2','핀테크 인프라 영향평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021003_19v2','2001021003_19v2 1','핀테크 인터페이스 대상 추출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021003_19v2','2001021003_19v2 2','핀테크 내부 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021003_19v2','2001021003_19v2 3','핀테크 외부 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021004_19v2','2001021004_19v2 1','핀테크 핵심기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021004_19v2','2001021004_19v2 2','핀테크 응용기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021004_19v2','2001021004_19v2 3','핀테크 부가기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021004_19v2','2001021004_19v2 4','핀테크 이용자 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021005_19v2','2001021005_19v2 1','핀테크 보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021005_19v2','2001021005_19v2 2','핀테크 인증 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021006_19v2','2001021006_19v2 1','핀테크 내부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021006_19v2','2001021006_19v2 2','핀테크 외부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021007_19v2','2001021007_19v2 1','핀테크 핵심기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021007_19v2','2001021007_19v2 2','핀테크 응용기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021007_19v2','2001021007_19v2 3','핀테크 부가기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021007_19v2','2001021007_19v2 4','핀테크 이용자 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021008_19v2','2001021008_19v2 1','핀테크 보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021008_19v2','2001021008_19v2 2','핀테크 인증 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021009_19v2','2001021009_19v2 1','핀테크 기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021009_19v2','2001021009_19v2 2','핀테크 비기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021101_19v2','2001021101_19v2 1','전사 아키텍처 프레임워크 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021101_19v2','2001021101_19v2 2','전사 아키텍처 참조 모델 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021101_19v2','2001021101_19v2 3','데이터 아키텍처 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021101_19v2','2001021101_19v2 4','데이터 아키텍처 구축 실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021102_19v2','2001021102_19v2 1','데이터 거버넌스 프로세스 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021102_19v2','2001021102_19v2 2','데이터 거버넌스 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021102_19v2','2001021102_19v2 3','데이터 보안 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021102_19v2','2001021102_19v2 4','데이터 라이프사이클 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021103_19v2','2001021103_19v2 1','데이터 아키텍처 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021103_19v2','2001021103_19v2 2','데이터 아키텍처 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021103_19v2','2001021103_19v2 3','데이터 아키텍처 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021103_19v2','2001021103_19v2 4','데이터 아키텍처 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021104_19v2','2001021104_19v2 1','데이터 아키텍처 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021104_19v2','2001021104_19v2 2','데이터 아키텍처 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021104_19v2','2001021104_19v2 3','데이터 아키텍처 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021105_19v2','2001021105_19v2 1','데이터 표준 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021105_19v2','2001021105_19v2 2','데이터 표준 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021105_19v2','2001021105_19v2 3','데이터 표준 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021106_19v2','2001021106_19v2 1','개념데이터 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021106_19v2','2001021106_19v2 2','논리데이터 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021106_19v2','2001021106_19v2 3','물리데이터 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021106_19v2','2001021106_19v2 4','데이터 모델 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021107_19v2','2001021107_19v2 1','데이터베이스 구축 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021107_19v2','2001021107_19v2 2','데이터베이스 최적화 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021108_19v2','2001021108_19v2 1','데이터 품질관리 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021108_19v2','2001021108_19v2 2','데이터 품질관리 프로세스 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021109_19v2','2001021109_19v2 1','데이터 품질 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021109_19v2','2001021109_19v2 2','데이터 품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021110_19v2','2001021110_19v2 1','데이터 아키텍처 일정 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021110_19v2','2001021110_19v2 2','데이터 아키텍처 범위 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021110_19v2','2001021110_19v2 3','데이터 아키텍처 수행 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021201_19v1','2001021201_19v1 1','연동 대상 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021201_19v1','2001021201_19v1 2','연동 방식 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021201_19v1','2001021201_19v1 3','연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021201_19v1','2001021201_19v1 4','연동 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021202_19v1','2001021202_19v1 1','시스템 연동 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021202_19v1','2001021202_19v1 2','시스템 연동 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021202_19v1','2001021202_19v1 3','시스템 연동 규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021203_19v1','2001021203_19v1 1','연동 모듈 개발 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021203_19v1','2001021203_19v1 2','연동 모듈 개발 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021203_19v1','2001021203_19v1 3','연동 모듈 개발 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021203_19v1','2001021203_19v1 4','연동 모듈 SW 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021204_19v1','2001021204_19v1 1','외부 서비스 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021204_19v1','2001021204_19v1 2','외부 서비스 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021204_19v1','2001021204_19v1 3','외부 서비스 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021205_19v1','2001021205_19v1 1','서버 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021205_19v1','2001021205_19v1 2','서버 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021205_19v1','2001021205_19v1 3','서버 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021206_19v1','2001021206_19v1 1','게이트웨이 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021206_19v1','2001021206_19v1 2','게이트웨이 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021206_19v1','2001021206_19v1 3','게이트웨이 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021207_19v1','2001021207_19v1 1','스마트 디바이스 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021207_19v1','2001021207_19v1 2','스마트 디바이스 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021207_19v1','2001021207_19v1 3','스마트 디바이스 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021208_19v1','2001021208_19v1 1','엣지 디바이스 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021208_19v1','2001021208_19v1 2','엣지 디바이스 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021208_19v1','2001021208_19v1 3','엣지 디바이스 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021209_19v1','2001021209_19v1 1','IoT시스템 연동 시험 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021209_19v1','2001021209_19v1 2','IoT시스템 연동 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021209_19v1','2001021209_19v1 3','IoT시스템 연동 시험 결과 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021301_19v1','2001021301_19v1 1','자산 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021301_19v1','2001021301_19v1 2','기술 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021301_19v1','2001021301_19v1 3','문제점 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021302_19v1','2001021302_19v1 1','인프라스트럭쳐 아키텍처 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021302_19v1','2001021302_19v1 2','인프라스트럭쳐 아키텍처 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021302_19v1','2001021302_19v1 3','인프라스트럭쳐 아키텍처 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021302_19v1','2001021302_19v1 4','인프라스트럭쳐 아키텍처 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 1','인프라스트럭쳐 아키텍처 설계 원칙 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 2','서버 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 3','스토리지 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 4','네트워크 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 5','보안 적용 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021304_19v1','2001021304_19v1 1','서버 하드웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021304_19v1','2001021304_19v1 2','서버 소프트웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021304_19v1','2001021304_19v1 3','서버 보안 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021305_19v1','2001021305_19v1 1','스토리지 하드웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021305_19v1','2001021305_19v1 2','스토리지 소프트웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021305_19v1','2001021305_19v1 3','스토리지 보안 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021306_19v1','2001021306_19v1 1','네트워크 하드웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021306_19v1','2001021306_19v1 2','네트워크 소프트웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021306_19v1','2001021306_19v1 3','네트워크 보안 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021307_19v1','2001021307_19v1 1','가상서버 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021307_19v1','2001021307_19v1 2','스토리지 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021307_19v1','2001021307_19v1 3','네트워크 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021307_19v1','2001021307_19v1 4','보안 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021308_19v1','2001021308_19v1 1','서버 구성 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021308_19v1','2001021308_19v1 2','스토리지 구성 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021308_19v1','2001021308_19v1 3','네트워크 구성 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021309_19v1','2001021309_19v1 1','인프라스트럭쳐 관리 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021309_19v1','2001021309_19v1 2','인프라스트럭쳐 모니터링 체계 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021309_19v1','2001021309_19v1 3','인프라스트럭쳐 운영 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021401_21v1','2001021401_21v1 1','클라우드 솔루션 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021401_21v1','2001021401_21v1 2','클라우드 솔루션 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021401_21v1','2001021401_21v1 3','클라우드 솔루션 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021401_21v1','2001021401_21v1 4','클라우드 솔루션 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 1','서버 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 2','스토리지 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 3','네트워크 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 4','DR(Disaster Recovery) 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 5','클라우드 솔루션 구조 설계 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021403_21v1','2001021403_21v1 1','클라우드 솔루션 보안 설계 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021403_21v1','2001021403_21v1 2','클라우드 솔루션 보안 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021404_21v1','2001021404_21v1 1','클라우드 서비스 카탈로그 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021404_21v1','2001021404_21v1 2','클라우드 서비스 컴포넌트 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021404_21v1','2001021404_21v1 3','인터페이스 설계기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021405_21v1','2001021405_21v1 1','클라우드 서비스 비용 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021405_21v1','2001021405_21v1 2','클라우드 서비스 비용 추적 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021405_21v1','2001021405_21v1 3','클라우드 서비스 비용 관리 도구 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021406_21v1','2001021406_21v1 1','데이터 전환 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021406_21v1','2001021406_21v1 2','애플리케이션 전환 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021407_21v1','2001021407_21v1 1','클라우드 솔루션 배포 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021407_21v1','2001021407_21v1 2','클라우드 솔루션 배포 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021407_21v1','2001021407_21v1 3','클라우드 솔루션 배포 테스트 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021408_21v1','2001021408_21v1 1','클라우드 솔루션 운영 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021408_21v1','2001021408_21v1 2','클라우드 솔루션 장애처리 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021408_21v1','2001021408_21v1 3','클라우드 솔루션 모니터링 환경 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021501_21v1','2001021501_21v1 1','클라우드 인프라스트럭쳐 서비스 품질·성능 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021501_21v1','2001021501_21v1 2','클라우드 인프라스트럭쳐 서비스 운영 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021501_21v1','2001021501_21v1 3','클라우드 인프라스트럭쳐 서비스 수준 협약서 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021502_21v1','2001021502_21v1 1','클라우드 인프라스트럭쳐 서비스 기능 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021502_21v1','2001021502_21v1 2','클라우드 인프라스트럭쳐 서비스 비기능 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021502_21v1','2001021502_21v1 3','클라우드 인프라스트럭쳐 서비스 아키텍처 요구사항 명세서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021502_21v1','2001021502_21v1 4','클라우드 인프라스트럭쳐 서비스 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021503_21v1','2001021503_21v1 1','클라우드 서버 가상화 소프트웨어 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021503_21v1','2001021503_21v1 2','클라우드 서버 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021503_21v1','2001021503_21v1 3','클라우드 서버 스펙 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021504_21v1','2001021504_21v1 1','클라우드 스토리지 가상화 소프트웨어 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021504_21v1','2001021504_21v1 2','클라우드 스토리지 구성방식 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021504_21v1','2001021504_21v1 3','클라우드 스토리지 스펙 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021505_21v1','2001021505_21v1 1','클라우드 네트워크 용량 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021505_21v1','2001021505_21v1 2','클라우드 네트워크 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021505_21v1','2001021505_21v1 3','클라우드 네트워크 보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021506_21v1','2001021506_21v1 1','클라우드 서버 서비스 소프트웨어 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021506_21v1','2001021506_21v1 2','클라우드 서버 서비스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021506_21v1','2001021506_21v1 3','클라우드 서버 서비스 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021507_21v1','2001021507_21v1 1','클라우드 스토리지 서비스 소프트웨어 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021507_21v1','2001021507_21v1 2','클라우드 스토리지 서비스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021507_21v1','2001021507_21v1 3','클라우드 스토리지 서비스 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021508_21v1','2001021508_21v1 1','클라우드 네트워크 서비스 소프트웨어 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021508_21v1','2001021508_21v1 2','클라우드 네트워크 서비스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021508_21v1','2001021508_21v1 3','클라우드 네트워크 서비스 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021509_21v1','2001021509_21v1 1','클라우드 인프라스트럭쳐 서비스 테스트 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021509_21v1','2001021509_21v1 2','클라우드 인프라스트럭쳐 서비스 테스트케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021509_21v1','2001021509_21v1 3','클라우드 인프라스트럭쳐 서비스 품질 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021509_21v1','2001021509_21v1 4','클라우드 인프라스트럭쳐 서비스 테스트 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021510_21v1','2001021510_21v1 1','클라우드 인프라스트럭쳐 서비스 배포 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021510_21v1','2001021510_21v1 2','클라우드 인프라스트럭쳐 서비스 배포 가이드 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021510_21v1','2001021510_21v1 3','클라우드 인프라스트럭쳐 서비스 배포 작업 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021510_21v1','2001021510_21v1 4','클라우드 인프라스트럭쳐 서비스 릴리즈하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021601_22v1','2001021601_22v1 1','PaaS 품질·성능 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021601_22v1','2001021601_22v1 2','PaaS 운영 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021601_22v1','2001021601_22v1 3','PaaS 서비스 수준 협약서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021602_22v1','2001021602_22v1 1','PaaS 기능 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021602_22v1','2001021602_22v1 2','PaaS 비기능 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021602_22v1','2001021602_22v1 3','PaaS 아키텍처 요구사항 명세서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021602_22v1','2001021602_22v1 4','PaaS 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021603_22v1','2001021603_22v1 1','PaaS 프로비저닝 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021603_22v1','2001021603_22v1 2','PaaS 기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021603_22v1','2001021603_22v1 3','외부시스템 연동 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021604_22v1','2001021604_22v1 1','PaaS 사용자 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021604_22v1','2001021604_22v1 2','PaaS 관리자 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021605_22v1','2001021605_22v1 1','PaaS 프로비저닝 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021605_22v1','2001021605_22v1 2','PaaS 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021605_22v1','2001021605_22v1 3','외부시스템 연동 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021606_22v1','2001021606_22v1 1','PaaS 사용자 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021606_22v1','2001021606_22v1 2','PaaS 관리자 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021607_22v1','2001021607_22v1 1','PaaS 테스트 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021607_22v1','2001021607_22v1 2','PaaS 테스트케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021607_22v1','2001021607_22v1 3','PaaS 품질·성능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021607_22v1','2001021607_22v1 4','PaaS 테스트 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021608_22v1','2001021608_22v1 1','PaaS 배포 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021608_22v1','2001021608_22v1 2','PaaS 배포 가이드 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021608_22v1','2001021608_22v1 3','PaaS 배포 작업 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021608_22v1','2001021608_22v1 4','PaaS 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021609_22v1','2001021609_22v1 1','PaaS 운영 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021609_22v1','2001021609_22v1 2','PaaS 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021609_22v1','2001021609_22v1 3','PaaS 기능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021609_22v1','2001021609_22v1 4','PaaS 운영 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 1','운영 목표수립 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 2','운영 개선과제 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 3','예산 비용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 4','인적자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 5','운영품질체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 1','IT시스템 구매 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 2','IT시스템 구매 계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 3','IT시스템 구매 계약이행 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 4','IT시스템 구매 계약 종료하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 5','협력업체 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030103_19v3','2001030103_19v3 1','서비스 수준관리 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030103_19v3','2001030103_19v3 2','서비스 수준 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030103_19v3','2001030103_19v3 3','서비스 수준 계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030103_19v3','2001030103_19v3 4','서비스 수준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030105_19v4','2001030105_19v4 1','애플리케이션 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030105_19v4','2001030105_19v4 2','애플리케이션 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030107_19v4','2001030107_19v4 1','네트워크 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030107_19v4','2001030107_19v4 2','네트워크 재난 장애복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 1','DB 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 2','DB 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 3','DB 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 4','DB 백업 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 5','DB 튜닝 확장하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 1','정보서비스 보안 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 2','관리적 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 3','물리적 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 4','기반 인프라 장비 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 5','기반 시스템 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 6','응용서비스 기술적 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 7','구축 후 보안 운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030111_19v4','2001030111_19v4 1','백업시스템 운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030111_19v4','2001030111_19v4 2','통합 모니터링 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030112_19v4','2001030112_19v4 1','IT서비스 연속성관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030112_19v4','2001030112_19v4 2','재해복구시스템 운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 1','애플리케이션 변경요구 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 2','애플리케이션 변경하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 3','변경 애플리케이션 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 4','애플리케이션 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 5','애플리케이션 형상변경하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030114_19v4','2001030114_19v4 1','단말장치 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030114_19v4','2001030114_19v4 2','단말장치 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030115_19v4','2001030115_19v4 1','IT시스템 서버 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030115_19v4','2001030115_19v4 2','IT시스템 서버 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030116_19v4','2001030116_19v4 1','네트워크 유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030116_19v4','2001030116_19v4 2','네트워크 트래픽 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030116_19v4','2001030116_19v4 3','네트워크 용량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030117_19v4','2001030117_19v4 1','서비스데스크 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030117_19v4','2001030117_19v4 2','서비스데스크 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030118_19v4','2001030118_19v4 1','서비스데스크 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030118_19v4','2001030118_19v4 2','IT시스템 사용자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030119_19v4','2001030119_19v4 1','IT시스템 구성관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030119_19v4','2001030119_19v4 2','IT시스템 변경관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030119_19v4','2001030119_19v4 3','IT시스템 유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030202_19v4','2001030202_19v4 1','IT기술교육 내부환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030202_19v4','2001030202_19v4 2','직무직급별 IT기술교육정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030202_19v4','2001030202_19v4 3','IT기술교육 체계도작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030203_19v4','2001030203_19v4 1','IT기술교육 요구조사계획작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030203_19v4','2001030203_19v4 2','IT기술 필요교육조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030203_19v4','2001030203_19v4 3','IT기술교육 역량진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030203_19v4','2001030203_19v4 4','IT기술교육 요구조사결과분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030204_19v3','2001030204_19v3 1','IT기술교육 장소선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030204_19v3','2001030204_19v3 2','IT기술교육 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030204_19v3','2001030204_19v3 3','IT기술교육 지원인력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030204_19v3','2001030204_19v3 4','IT기술교육 환경사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030205_19v4','2001030205_19v4 1','IT기술교육 교과목표정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030205_19v4','2001030205_19v4 2','IT기술교육 교과내용편성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030205_19v4','2001030205_19v4 3','IT기술교육 교수방식설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030205_19v4','2001030205_19v4 4','IT기술교육 평가방식설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030206_19v4','2001030206_19v4 1','IT기술교육 자료기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030206_19v4','2001030206_19v4 2','IT기술교육 자료설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030206_19v4','2001030206_19v4 3','IT기술교육 자료제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030206_19v4','2001030206_19v4 4','IT기술교육 자료보완하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030207_19v4','2001030207_19v4 1','IT기술교육 교과수요조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030207_19v4','2001030207_19v4 2','IT기술교육 수업계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030207_19v4','2001030207_19v4 3','IT기술교육 운영사전준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030208_19v3','2001030208_19v3 1','IT기술교육 과정운영사전준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030208_19v3','2001030208_19v3 2','IT기술교육 과정운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030208_19v3','2001030208_19v3 3','IT기술교육 과정사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030209_19v4','2001030209_19v4 1','IT기술교육 교수자선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030209_19v4','2001030209_19v4 2','IT기술교육 교수자역량관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030209_19v4','2001030209_19v4 3','IT기술교육 교수자사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 1','IT기술교육 성과평가계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 2','IT기술교육 성과측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 3','IT기술교육 성과측정결과분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 4','IT기술교육 효과산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 5','IT기술교육 성과평가보고서작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030211_19v4','2001030211_19v4 1','IT기술교육 목표설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030211_19v4','2001030211_19v4 2','IT기술교육 실행계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030212_19v4','2001030212_19v4 1','IT기술교육 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030212_19v4','2001030212_19v4 2','IT기술교육 트랜드분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030212_19v4','2001030212_19v4 3','IT기술교육 범위도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030212_19v4','2001030212_19v4 4','IT기술교육 방향설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030301_19v3','2001030301_19v3 1','기술지원 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030301_19v3','2001030301_19v3 2','기술지원 카탈로그 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030301_19v3','2001030301_19v3 3','기술지원 조직 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030302_19v3','2001030302_19v3 1','기술지원 대상 인수 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030302_19v3','2001030302_19v3 2','기술지원 대상 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030302_19v3','2001030302_19v3 3','기술지원 대상 서비스 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030303_19v3','2001030303_19v3 1','기술지원 요청 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030303_19v3','2001030303_19v3 2','단순 문의 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030303_19v3','2001030303_19v3 3','기술지원 진행상태 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030304_19v4','2001030304_19v4 1','장애 대응 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030304_19v4','2001030304_19v4 2','고객시스템 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030304_19v4','2001030304_19v4 3','장애 처리 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030305_19v4','2001030305_19v4 1','개선 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030305_19v4','2001030305_19v4 2','개선 방안 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030305_19v4','2001030305_19v4 3','개선 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030306_19v3','2001030306_19v3 1','점검 체크리스트 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030306_19v3','2001030306_19v3 2','시스템 점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030306_19v3','2001030306_19v3 3','점검 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030307_19v4','2001030307_19v4 1','기술지원 평가 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030307_19v4','2001030307_19v4 2','기술지원 평가 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030307_19v4','2001030307_19v4 3','평가결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030308_19v3','2001030308_19v3 1','기술지원 이슈 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030308_19v3','2001030308_19v3 2','기술지원 해결 방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030308_19v3','2001030308_19v3 3','기술지원 이슈 진행 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030309_19v4','2001030309_19v4 1','형상관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030309_19v4','2001030309_19v4 2','형상 데이터베이스 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030309_19v4','2001030309_19v4 3','형상 추적 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030311_19v4','2001030311_19v4 1','품질목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030311_19v4','2001030311_19v4 2','품질 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030312_19v4','2001030312_19v4 1','기술지원 이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030312_19v4','2001030312_19v4 2','기술지원 지식관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030313_19v2','2001030313_19v2 1','시스템 유지보수 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030313_19v2','2001030313_19v2 2','기술 문의 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030401_19v2','2001030401_19v2 1','빅데이터 플랫폼 운영 지침 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030401_19v2','2001030401_19v2 2','빅데이터 플랫폼 운영 절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030401_19v2','2001030401_19v2 3','빅데이터 플랫폼 운영 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030401_19v2','2001030401_19v2 4','빅데이터 플랫폼 운영 자원 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030402_19v2','2001030402_19v2 1','빅데이터 서비스 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030402_19v2','2001030402_19v2 2','빅데이터 서비스 수준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030402_19v2','2001030402_19v2 3','빅데이터 서비스 개선 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030403_19v2','2001030403_19v2 1','빅데이터 서비스 성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030403_19v2','2001030403_19v2 2','빅데이터 서비스 가용성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030403_19v2','2001030403_19v2 3','빅데이터 서비스 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030404_19v2','2001030404_19v2 1','빅데이터 솔루션 운영 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030404_19v2','2001030404_19v2 2','빅데이터 솔루션 운영 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030404_19v2','2001030404_19v2 3','빅데이터 솔루션 운영 자원 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030405_19v2','2001030405_19v2 1','빅데이터 솔루션 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030405_19v2','2001030405_19v2 2','빅데이터 솔루션 환경 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030406_19v2','2001030406_19v2 1','빅데이터 플랫폼 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030406_19v2','2001030406_19v2 2','빅데이터 플랫폼 성능 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030406_19v2','2001030406_19v2 3','빅데이터 플랫폼 장애 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030407_19v2','2001030407_19v2 1','빅데이터 품질 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030407_19v2','2001030407_19v2 2','빅데이터 품질 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030407_19v2','2001030407_19v2 3','빅데이터 품질 개선 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030408_19v2','2001030408_19v2 1','빅데이터 플로우 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030408_19v2','2001030408_19v2 2','빅데이터 플로우 변경하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030408_19v2','2001030408_19v2 3','빅데이터 플로우 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030409_19v2','2001030409_19v2 1','메타 데이터 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030409_19v2','2001030409_19v2 2','타겟 데이터 모델링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030410_19v2','2001030410_19v2 1','빅데이터 처리 환경 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030410_19v2','2001030410_19v2 2','빅데이터 처리 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030501_21v1','2001030501_21v1 1','IoT 시스템 운영·관리 상세계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030501_21v1','2001030501_21v1 2','IoT 시스템 운영·관리 현황 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030501_21v1','2001030501_21v1 3','IoT 시스템 운영·관리 개선 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030502_21v1','2001030502_21v1 1','IoT 응용서비스 구성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030502_21v1','2001030502_21v1 2','IoT 응용서비스 성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030502_21v1','2001030502_21v1 3','IoT 응용서비스 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030503_21v1','2001030503_21v1 1','IoT 플랫폼 운영 현황 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030503_21v1','2001030503_21v1 2','IoT 플랫폼 기능 요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030503_21v1','2001030503_21v1 3','IoT 플랫폼 성능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030504_21v1','2001030504_21v1 1','IoT 네트워크 구성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030504_21v1','2001030504_21v1 2','IoT 네트워크 성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030504_21v1','2001030504_21v1 3','IoT 네트워크 장애 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030505_21v1','2001030505_21v1 1','IoT 디바이스 성능 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030505_21v1','2001030505_21v1 2','IoT 디바이스 펌웨어 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030505_21v1','2001030505_21v1 3','IoT 디바이스 고장 수리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030506_21v1','2001030506_21v1 1','IoT 시스템 연동 관리 대상 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030506_21v1','2001030506_21v1 2','IoT 시스템 연동 관리 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030506_21v1','2001030506_21v1 3','IoT 시스템 연동 안정성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030507_21v1','2001030507_21v1 1','IoT 운영 데이터 수집·저장 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030507_21v1','2001030507_21v1 2','IoT 운영 데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030507_21v1','2001030507_21v1 3','IoT 운영 데이터 품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030508_21v1','2001030508_21v1 1','IoT 보안 시스템 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030508_21v1','2001030508_21v1 2','IoT 보안 취약점 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030508_21v1','2001030508_21v1 3','IoT 보안 안정성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030509_21v1','2001030509_21v1 1','IoT 시스템 현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030509_21v1','2001030509_21v1 2','IoT 시스템 변경 내용 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030509_21v1','2001030509_21v1 3','IoT 시스템 변경 작업 수행 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040101_19v3','2001040101_19v3 1','사업계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040101_19v3','2001040101_19v3 2','제안요청서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040101_19v3','2001040101_19v3 3','사업 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040102_19v3','2001040102_19v3 1','프로젝트 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040102_19v3','2001040102_19v3 2','프로젝트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040102_19v3','2001040102_19v3 3','프로젝트 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040102_19v3','2001040102_19v3 4','통합 변경관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 1','요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 2','범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 3','"작업분류체계(WBS');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 4','범위 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 5','범위 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 1','공정 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 2','선후관계 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 3','공정자원 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 4','일정 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 5','일정진척 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 1','업무범위 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 2','업무규모 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 3','원가 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 4','예산 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 5','예산 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040106_19v3','2001040106_19v3 1','수행조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040106_19v3','2001040106_19v3 2','참여인원 편성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040106_19v3','2001040106_19v3 3','인적자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040107_19v3','2001040107_19v3 1','품질 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040107_19v3','2001040107_19v3 2','품질 보증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040107_19v3','2001040107_19v3 3','품질 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 1','위험관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 2','위험 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 3','위험 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 4','위험 대응방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 5','위험 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 1','의사소통 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 2','정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 3','상황보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 4','정보 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 5','이해관계자 기대치 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 6','이해관계자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 1','구매 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 2','공급자 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 3','계약서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 4','계약이행 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 5','계약 종료하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040111_19v3','2001040111_19v3 1','변경관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040111_19v3','2001040111_19v3 2','변경관리 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040111_19v3','2001040111_19v3 3','변경관리 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040111_19v3','2001040111_19v3 4','변경관리 실행내역 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040112_19v3','2001040112_19v3 1','보안관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040112_19v3','2001040112_19v3 2','보안관리 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040112_19v3','2001040112_19v3 3','보안관리 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040113_19v3','2001040113_19v3 1','네트워크 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040113_19v3','2001040113_19v3 2','SW 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040113_19v3','2001040113_19v3 3','HW 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040113_19v3','2001040113_19v3 4','DB 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040114_19v3','2001040114_19v3 1','성과지표 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040114_19v3','2001040114_19v3 2','성과측정체계 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040114_19v3','2001040114_19v3 3','성과 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040114_19v3','2001040114_19v3 4','성과 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040201_19v4','2001040201_19v4 1','조직품질경영체계 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040201_19v4','2001040201_19v4 2','IT품질정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040201_19v4','2001040201_19v4 3','IT품질정책 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040202_19v4','2001040202_19v4 1','IT표준프로세스개선 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040202_19v4','2001040202_19v4 2','IT표준프로세스수립 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040202_19v4','2001040202_19v4 3','IT표준프로세스 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040202_19v4','2001040202_19v4 4','IT표준프로세스 내재화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040203_19v4','2001040203_19v4 1','IT품질관리대상 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040203_19v4','2001040203_19v4 2','IT품질관리목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040203_19v4','2001040203_19v4 3','IT품질관리전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040203_19v4','2001040203_19v4 4','IT품질관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040204_19v4','2001040204_19v4 1','IT품질교육 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040204_19v4','2001040204_19v4 2','IT품질교육 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040204_19v4','2001040204_19v4 3','IT품질교육성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040205_19v4','2001040205_19v4 1','SW품질평가체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040205_19v4','2001040205_19v4 2','SW품질평가계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040205_19v4','2001040205_19v4 3','SW품질평가 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040205_19v4','2001040205_19v4 4','SW품질성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040207_19v4','2001040207_19v4 1','IT품질요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040207_19v4','2001040207_19v4 2','IT품질보증목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040207_19v4','2001040207_19v4 3','IT품질보증계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040207_19v4','2001040207_19v4 4','IT품질보증계획 공유하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040208_19v4','2001040208_19v4 1','SW제품품질점검 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040208_19v4','2001040208_19v4 2','SW제품품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040208_19v4','2001040208_19v4 3','SW제품품질점검결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040209_19v4','2001040209_19v4 1','IT프로세스이행점검 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040209_19v4','2001040209_19v4 2','IT프로세스이행 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040209_19v4','2001040209_19v4 3','IT프로세스이행점검결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040210_19v4','2001040210_19v4 1','IT시정조치계획 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040210_19v4','2001040210_19v4 2','IT시정조치 추적관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040210_19v4','2001040210_19v4 3','IT시정조치결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040211_19v4','2001040211_19v4 1','활동개선계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040211_19v4','2001040211_19v4 2','개선활동 전개하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040211_19v4','2001040211_19v4 3','개선성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040212_19v4','2001040212_19v4 1','개선사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040212_19v4','2001040212_19v4 2','개선사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040213_19v2','2001040213_19v2 1','IT품질 관리시스템 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040213_19v2','2001040213_19v2 2','IT품질 관리시스템 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040213_19v2','2001040213_19v2 3','IT품질 관리시스템 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040214_19v2','2001040214_19v2 1','IT품질 관리시스템 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040214_19v2','2001040214_19v2 2','IT품질 관리시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040301_19v4','2001040301_19v4 1','사업 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040301_19v4','2001040301_19v4 2','사업 범위 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040301_19v4','2001040301_19v4 3','사업 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040301_19v4','2001040301_19v4 4','사업 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040302_19v4','2001040302_19v4 1','테스트 진단 착수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040302_19v4','2001040302_19v4 2','테스트 진단 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040302_19v4','2001040302_19v4 3','테스트 진단 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040303_21v5','2001040303_21v5 1','테스트 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040303_21v5','2001040303_21v5 2','테스트 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040303_21v5','2001040303_21v5 3','테스트 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040303_21v5','2001040303_21v5 4','테스트 방법론 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040309_21v5','2001040309_21v5 1','테스트 결과 분석');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040309_21v5','2001040309_21v5 2','테스트 결과 평가');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040309_21v5','2001040309_21v5 3','테스트 완료 보고');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040310_21v5','2001040310_21v5 1','자동화 도구 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040310_21v5','2001040310_21v5 2','자동화 도구 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040310_21v5','2001040310_21v5 3','자동화 도구 결과 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040311_21v5','2001040311_21v5 1','테스트 위험요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040311_21v5','2001040311_21v5 2','테스트 베이시스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040312_21v5','2001040312_21v5 1','테스트 요구사항 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040312_21v5','2001040312_21v5 2','테스트 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040313_21v5','2001040313_21v5 1','테스트 설계 방법 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040313_21v5','2001040313_21v5 2','테스트 설계 방법 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040314_21v5','2001040314_21v5 1','테스트 케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040314_21v5','2001040314_21v5 2','테스트 케이스 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040315_21v5','2001040315_21v5 1','단위테스트 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040315_21v5','2001040315_21v5 2','단위테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040315_21v5','2001040315_21v5 3','단위테스트 결과보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040316_21v5','2001040316_21v5 1','통합테스트 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040316_21v5','2001040316_21v5 2','통합테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040316_21v5','2001040316_21v5 3','통합테스트 결과보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040317_21v5','2001040317_21v5 1','시스템테스트 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040317_21v5','2001040317_21v5 2','시스템테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040317_21v5','2001040317_21v5 3','시스템테스트 결과보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040318_21v5','2001040318_21v5 1','인수테스트 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040318_21v5','2001040318_21v5 2','인수테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040318_21v5','2001040318_21v5 3','인수테스트 결과보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040319_21v5','2001040319_21v5 1','테스트 진척 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040319_21v5','2001040319_21v5 2','테스트 결함 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040320_21v5','2001040320_21v5 1','테스트 위험 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040320_21v5','2001040320_21v5 2','테스트 산출물 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040321_21v5','2001040321_21v5 1','테스트 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040321_21v5','2001040321_21v5 2','테스트 데이터 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040321_21v5','2001040321_21v5 3','테스트 도구 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040322_21v5','2001040322_21v5 1','점검 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040322_21v5','2001040322_21v5 2','사전 테스트 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 1','예비조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 2','감리범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 3','일정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 4','인력편성 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 5','점검항목 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 6','관련법령 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 7','감리계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040402_19v3','2001040402_19v3 1','착수회의 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040402_19v3','2001040402_19v3 2','착수회의 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040403_19v3','2001040403_19v3 1','계약문서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040403_19v3','2001040403_19v3 2','사업수행계획 관련문서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040404_19v3','2001040404_19v3 1','과업 범위 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040404_19v3','2001040404_19v3 2','요구사항 정의 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040404_19v3','2001040404_19v3 3','요구정의단계 산출물 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040404_19v3','2001040404_19v3 4','기술적용계획표 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040405_19v3','2001040405_19v3 1','검사기준서 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040405_19v3','2001040405_19v3 2','요구사항 추적 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040405_19v3','2001040405_19v3 3','설계단계 산출물 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040406_19v3','2001040406_19v3 1','과업 이행여부 검증 대상 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040406_19v3','2001040406_19v3 2','과업 이행여부 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040406_19v3','2001040406_19v3 3','기술적용결과표 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040406_19v3','2001040406_19v3 4','종료단계 산출물 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040407_19v3','2001040407_19v3 1','감리수행결과보고서 초안 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040407_19v3','2001040407_19v3 2','감리수행결과보고서 초안 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040408_19v3','2001040408_19v3 1','종료회의 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040408_19v3','2001040408_19v3 2','종료회의 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040409_19v3','2001040409_19v3 1','이견사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040409_19v3','2001040409_19v3 2','이견사항 처리결과 공유하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040409_19v3','2001040409_19v3 3','감리수행결과보고서 통보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040410_19v3','2001040410_19v3 1','시정조치 확인 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040410_19v3','2001040410_19v3 2','시정조치 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040410_19v3','2001040410_19v3 3','시정조치확인보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040410_19v3','2001040410_19v3 4','시정조치확인보고서 제출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040411_19v3','2001040411_19v3 1','감리용역 완료검사 의뢰하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040411_19v3','2001040411_19v3 2','감리용역 사업 종료하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050101_19v4','2001050101_19v4 1','시장 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050101_19v4','2001050101_19v4 2','자사 역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050101_19v4','2001050101_19v4 3','경쟁사 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050101_19v4','2001050101_19v4 4','관련법 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050102_19v4','2001050102_19v4 1','시장 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050102_19v4','2001050102_19v4 2','영업 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050102_19v4','2001050102_19v4 3','영업 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050103_19v4','2001050103_19v4 1','파이프라인 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050103_19v4','2001050103_19v4 2','고객 사업계획 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050103_19v4','2001050103_19v4 3','고객 기술현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050104_19v4','2001050104_19v4 1','고객 커버리지 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050104_19v4','2001050104_19v4 2','가치 제시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050104_19v4','2001050104_19v4 3','개념 컨셉 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050105_19v4','2001050105_19v4 1','경쟁사 제안 전략 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050105_19v4','2001050105_19v4 2','솔루션 구성 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050105_19v4','2001050105_19v4 3','가격 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050106_19v4','2001050106_19v4 1','제안요청서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050106_19v4','2001050106_19v4 2','제안서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050106_19v4','2001050106_19v4 3','제안서 발표하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050107_19v4','2001050107_19v4 1','기술 협상하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050107_19v4','2001050107_19v4 2','가격 협상하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050107_19v4','2001050107_19v4 3','계약서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050108_19v4','2001050108_19v4 1','사업수행 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050108_19v4','2001050108_19v4 2','유지보수 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050108_19v4','2001050108_19v4 3','후속사업 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050109_19v4','2001050109_19v4 1','협력선 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050109_19v4','2001050109_19v4 2','협력선 역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050109_19v4','2001050109_19v4 3','협력선 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050110_19v4','2001050110_19v4 1','채권채무 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050110_19v4','2001050110_19v4 2','영업실적 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050110_19v4','2001050110_19v4 3','영업결과 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050201_19v4','2001050201_19v4 1','시장 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050201_19v4','2001050201_19v4 2','고객 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050201_19v4','2001050201_19v4 3','경쟁사 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050201_19v4','2001050201_19v4 4','자사 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050202_19v3','2001050202_19v3 1','마케팅 목표 우선순위 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050202_19v3','2001050202_19v3 2','마케팅 예산 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050202_19v3','2001050202_19v3 3','재무적 마케팅 지표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050202_19v3','2001050202_19v3 4','비재무적 마케팅 지표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050203_19v4','2001050203_19v4 1','시장 세분화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050203_19v4','2001050203_19v4 2','표적 시장 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050203_19v4','2001050203_19v4 3','시장 포지셔닝하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050204_19v3','2001050204_19v3 1','제품(Product) 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050204_19v3','2001050204_19v3 2','가격(Price) 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050204_19v3','2001050204_19v3 3','유통(Place) 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050204_19v3','2001050204_19v3 4','프로모션(Promotion) 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050205_19v3','2001050205_19v3 1','수명주기 전략 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050205_19v3','2001050205_19v3 2','브랜드-제품 전략 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050205_19v3','2001050205_19v3 3','포트폴리오 전략 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050205_19v3','2001050205_19v3 4','포지셔닝 전략 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050206_19v3','2001050206_19v3 1','제품원가 요인 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050206_19v3','2001050206_19v3 2','가격 변경관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050206_19v3','2001050206_19v3 3','경쟁사 대비 가격 포지셔닝 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050207_19v4','2001050207_19v4 1','유통 실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050207_19v4','2001050207_19v4 2','유통채널 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050207_19v4','2001050207_19v4 3','유통경로 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050208_19v3','2001050208_19v3 1','프로모션 예산 분배하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050208_19v3','2001050208_19v3 2','홍보광고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050208_19v3','2001050208_19v3 3','판촉활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050209_19v4','2001050209_19v4 1','고객관리 활동 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050209_19v4','2001050209_19v4 2','고객 데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050209_19v4','2001050209_19v4 3','기존고객 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050209_19v4','2001050209_19v4 4','신규고객 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050210_19v4','2001050210_19v4 1','성과 데이터 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050210_19v4','2001050210_19v4 2','재무적 성과 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050210_19v4','2001050210_19v4 3','비재무적 성과 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050210_19v4','2001050210_19v4 4','마케팅 활동 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060101_19v2','2001060101_19v2 1','정보보호 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060101_19v2','2001060101_19v2 2','정보보호 자원 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060101_19v2','2001060101_19v2 3','정보보호 성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060103_19v2','2001060103_19v2 1','정보보호 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060103_19v2','2001060103_19v2 2','정보보호 정책 유지관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060105_19v2','2001060105_19v2 1','위험관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060105_19v2','2001060105_19v2 2','위험 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060105_19v2','2001060105_19v2 3','위험 분석 결과 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060106_19v2','2001060106_19v2 1','정보보호 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060106_19v2','2001060106_19v2 2','정보보호 대상 범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060106_19v2','2001060106_19v2 3','정보보호 중장기 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060106_19v2','2001060106_19v2 4','정보보호 세부 실행 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060108_19v3','2001060108_19v3 1','네트워크 보안솔루션 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060108_19v3','2001060108_19v3 2','네트워크 보안솔루션 운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060108_19v3','2001060108_19v3 3','네트워크 보안 신규 위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060108_19v3','2001060108_19v3 4','네트워크 보안솔루션 업데이트 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060109_19v3','2001060109_19v3 1','애플리케이션 보안솔루션 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060109_19v3','2001060109_19v3 2','애플리케이션 보안솔루션 운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060109_19v3','2001060109_19v3 3','애플리케이션 보안 신규 위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060109_19v3','2001060109_19v3 4','애플리케이션 보안솔루션 업데이트 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060110_19v3','2001060110_19v3 1','시스템 보안솔루션 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060110_19v3','2001060110_19v3 2','시스템 보안솔루션 운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060110_19v3','2001060110_19v3 3','시스템 보안 신규 위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060110_19v3','2001060110_19v3 4','시스템 보안솔루션 업데이트 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060111_19v3','2001060111_19v3 1','정보보호 인식제고 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060111_19v3','2001060111_19v3 2','정보보호 이행 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060111_19v3','2001060111_19v3 3','침해사고 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060111_19v3','2001060111_19v3 4','외부자 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060112_19v3','2001060112_19v3 1','물리 보안솔루션 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060112_19v3','2001060112_19v3 2','물리 보안솔루션 운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060112_19v3','2001060112_19v3 3','물리 보안 신규 위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060113_19v3','2001060113_19v3 1','보안시스템 상태 체크하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060113_19v3','2001060113_19v3 2','정책요청 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060113_19v3','2001060113_19v3 3','보안시스템 가용성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060114_19v3','2001060114_19v3 1','보안성 검토 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060114_19v3','2001060114_19v3 2','보안성 검토 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060114_19v3','2001060114_19v3 3','보안 대책 권고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060115_19v3','2001060115_19v3 1','보안 감사 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060115_19v3','2001060115_19v3 2','보안 감사 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060115_19v3','2001060115_19v3 3','보안 감사 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060116_19v2','2001060116_19v2 1','협력사 보안 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060116_19v2','2001060116_19v2 2','협력사 보안 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060116_19v2','2001060116_19v2 3','협력사 보안 감사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060201_19v2','2001060201_19v2 1','보안 전략 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060201_19v2','2001060201_19v2 2','보안 위험 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060201_19v2','2001060201_19v2 3','보안 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060203_19v2','2001060203_19v2 1','보안감사 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060203_19v2','2001060203_19v2 2','보안감사 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020606_18v1','2002020606_18v1 3','정보보안관리 시스템 예방 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020607_18v1','2002020607_18v1 1','시험계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020607_18v1','2002020607_18v1 2','시험 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020607_18v1','2002020607_18v1 3','시험보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020608_18v1','2002020608_18v1 1','유지보수 현황 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020608_18v1','2002020608_18v1 2','유지보수 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020608_18v1','2002020608_18v1 3','운용설비상태 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020608_18v1','2002020608_18v1 4','점검결과 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020609_18v1','2002020609_18v1 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020609_18v1','2002020609_18v1 2','품질관리 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020609_18v1','2002020609_18v1 3','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020610_18v1','2002020610_18v1 1','서비스 플랫폼 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020610_18v1','2002020610_18v1 2','서비스 플랫폼 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020610_18v1','2002020610_18v1 3','서비스 플랫폼 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 1','수요조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 2','수요분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 3','서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 4','서비스 홍보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 5','서비스 컨설팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030102_16v2','2002030102_16v2 1','서비스 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030102_16v2','2002030102_16v2 2','현장작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030102_16v2','2002030102_16v2 3','안전관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030102_16v2','2002030102_16v2 4','서비스개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030103_13v1','2002030103_13v1 1','운용시설 운용계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030103_13v1','2002030103_13v1 2','운용시설 정비점검계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030103_13v1','2002030103_13v1 3','운용요원 인력계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030103_13v1','2002030103_13v1 4','운용시설 대개체 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030104_16v2','2002030104_16v2 1','통화품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030104_16v2','2002030104_16v2 2','접속품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030104_16v2','2002030104_16v2 3','성능시험 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030104_16v2','2002030104_16v2 4','품질·성능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030105_16v2','2002030105_16v2 1','교환기 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030105_16v2','2002030105_16v2 2','식별번호 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030105_16v2','2002030105_16v2 3','트래픽 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030105_16v2','2002030105_16v2 4','실내환경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030106_16v2','2002030106_16v2 1','업무 이관받기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030106_16v2','2002030106_16v2 2','고장점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030106_16v2','2002030106_16v2 3','고장처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030106_16v2','2002030106_16v2 4','고장이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030107_13v1','2002030107_13v1 1','현장 정기점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030107_13v1','2002030107_13v1 2','선로·설비관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030107_13v1','2002030107_13v1 3','기반설비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030107_13v1','2002030107_13v1 4','자재관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030108_13v1','2002030108_13v1 1','요금정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030108_13v1','2002030108_13v1 2','요금통계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030108_13v1','2002030108_13v1 3','사용요금 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030108_13v1','2002030108_13v1 4','사용요금 청구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 1','고객 상담하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 2','전산시스템 조작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 3','고객정보 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 4','만족도 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 5','상담직원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030110_13v1','2002030110_13v1 1','고객 상담하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030110_13v1','2002030110_13v1 2','전산시스템 조작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030110_13v1','2002030110_13v1 3','고객정보 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030110_13v1','2002030110_13v1 4','고객만족도 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 1','사업계획 목표수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 2','사업계획 조직구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 3','사업계획 예산수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 4','사업계획 실행ㆍ조정ㆍ통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 5','사업계획 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 1','시장동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 2','사업타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 3','가격정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 4','신상품 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 5','마케팅전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 1','영업전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 2','영업 활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 3','고객관계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 4','계약서 작성ㆍ계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 5','대금 청구ㆍ정산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030204_13v1','2002030204_13v1 1','제안 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030204_13v1','2002030204_13v1 2','제안서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030204_13v1','2002030204_13v1 3','제안서 발표하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 1','고객의 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 2','케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 3','통신장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 4','통신환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 5','서비스 개통 행정 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 1','서비스현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 2','서비스품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 3','망 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 4','설비 시험ㆍ점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 5','망관리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030207_13v1','2002030207_13v1 1','보안 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030207_13v1','2002030207_13v1 2','보안 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030207_13v1','2002030207_13v1 3','보안 장비 원격 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030207_13v1','2002030207_13v1 4','보안현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 1','예방 정비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 2','결함 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 3','기능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 4','장비 예비품 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 5','유지보수 현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 1','장애 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 2','장애 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 3','장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 4','작업자 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 5','고객 응대하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 1','교육 자료 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 2','업무기술 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 3','훈련과정 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 4','훈련과정 실습하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 5','신기술 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 1','시장조사 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 2','고객 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 3','영업목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 4','가격정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 5','홍보ㆍ판매전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030302_22v2','2002030302_22v2 1','점검정비 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030302_22v2','2002030302_22v2 2','긴급복구 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060514_22v2','2001060514_22v2 2','영상관제 업무 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060514_22v2','2001060514_22v2 3','영상관제 업무 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060601_19v2','2001060601_19v2 1','생체인식 선행기술 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060601_19v2','2001060601_19v2 2','생체인식 알고리즘 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060601_19v2','2001060601_19v2 3','생체인식 알고리즘 스펙 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060601_19v2','2001060601_19v2 4','생체인식 알고리즘 상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060602_19v2','2001060602_19v2 1','생체인식 모듈 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060602_19v2','2001060602_19v2 2','생체인식 모듈 회로 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060602_19v2','2001060602_19v2 3','생체인식 센서 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060602_19v2','2001060602_19v2 4','생체인식 모듈 펌웨어 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060603_19v2','2001060603_19v2 1','생체인식 서비스 플랫폼 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060603_19v2','2001060603_19v2 2','생체인식 API 관련표준 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060603_19v2','2001060603_19v2 3','생체인식 API 기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060603_19v2','2001060603_19v2 4','생체인식 API 함수 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060604_19v2','2001060604_19v2 1','생체인식 전처리 알고리즘 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060604_19v2','2001060604_19v2 2','생체인식 레퍼런스 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060604_19v2','2001060604_19v2 3','생체인식 알고리즘 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060604_19v2','2001060604_19v2 4','생체인식 알고리즘 성능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060605_19v2','2001060605_19v2 1','생체인식 모듈 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060605_19v2','2001060605_19v2 2','생체인식 센서 모듈 튜닝하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060605_19v2','2001060605_19v2 3','생체인식 모듈 펌웨어 포팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060606_19v2','2001060606_19v2 1','생체인식 API 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060606_19v2','2001060606_19v2 2','생체인식 API 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060607_19v2','2001060607_19v2 1','생체인식 성능평가 환경 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060607_19v2','2001060607_19v2 2','생체인식 성능평가용 데이터베이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060607_19v2','2001060607_19v2 3','생체인식 성능평가 결과 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060607_19v2','2001060607_19v2 4','생체인식 성능평가 결과 피드백하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060608_19v2','2001060608_19v2 1','생체인식 테스트 환경 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060608_19v2','2001060608_19v2 2','생체인식 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060701_19v1','2001060701_19v1 1','개인정보보호 관련 법령·정책 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060701_19v1','2001060701_19v1 2','개인정보보호 관련 법령·정책 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060701_19v1','2001060701_19v1 3','개인정보보호 분석결과 기록 유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060702_19v1','2001060702_19v1 1','개인정보보호 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060702_19v1','2001060702_19v1 2','개인정보보호 범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060702_19v1','2001060702_19v1 3','개인정보보호 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060702_19v1','2001060702_19v1 4','개인정보보호 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060703_19v1','2001060703_19v1 1','개인정보 영향평가 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060703_19v1','2001060703_19v1 2','개인정보 영향평가 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060703_19v1','2001060703_19v1 3','개인정보 영향평가 개선조치 이행점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060704_19v1','2001060704_19v1 1','개인정보보호 위험관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060704_19v1','2001060704_19v1 2','개인정보보호 위험 분석·평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060704_19v1','2001060704_19v1 3','개인정보보호 대책 수립·이행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060705_19v1','2001060705_19v1 1','개인정보 처리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060705_19v1','2001060705_19v1 2','개인정보 사고 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060705_19v1','2001060705_19v1 3','개인정보보호 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060706_19v1','2001060706_19v1 1','개인정보보호 활동 모니터링 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060706_19v1','2001060706_19v1 2','내부 정보보호 활동 모니터링 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060706_19v1','2001060706_19v1 3','개인정보보호 모니터링 결과 사전 예방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060706_19v1','2001060706_19v1 4','개인정보 침해사고 사후 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060707_19v1','2001060707_19v1 1','개인정보보호 관리체계 인증 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060707_19v1','2001060707_19v1 2','개인정보보호 관리체계 인증 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060707_19v1','2001060707_19v1 3','개인정보보호 관리체계 인증 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060708_19v1','2001060708_19v1 1','개인정보보호 감사 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060708_19v1','2001060708_19v1 2','개인정보보호 감사 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060708_19v1','2001060708_19v1 3','개인정보보호 감사 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060801_20v1','2001060801_20v1 1','사고 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060801_20v1','2001060801_20v1 2','사전 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060801_20v1','2001060801_20v1 3','계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060802_20v1','2001060802_20v1 1','현장 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060802_20v1','2001060802_20v1 2','현장 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060802_20v1','2001060802_20v1 3','현장증거 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060802_20v1','2001060802_20v1 4','현장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060803_20v1','2001060803_20v1 1','증거 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060803_20v1','2001060803_20v1 2','증거 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060803_20v1','2001060803_20v1 3','동일성 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060804_20v1','2001060804_20v1 1','증거물 인쇄하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060804_20v1','2001060804_20v1 2','증거 보관하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060804_20v1','2001060804_20v1 3','보관소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 1','증거물 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 2','물리적 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 3','증거사본 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 4','파일시스템 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 5','데이터 추출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 1','운영체제/애플리케이션 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 2','네트워크 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 3','코드 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 4','데이터베이스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 5','안티포렌식 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060807_20v1','2001060807_20v1 1','보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060807_20v1','2001060807_20v1 2','보고서 제출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060807_20v1','2001060807_20v1 3','증언하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 1','운영목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 2','관계 법령 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 3','내부규정과 절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 4','운영정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 5','유지보수 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 1','위험요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 2','시스템 상호연계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 3','운영 및 유지관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 4','운영조직 편성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 5','장애대응 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060903_21v1','2001060903_21v1 1','영상정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060903_21v1','2001060903_21v1 2','영상정보 저장하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060903_21v1','2001060903_21v1 3','영상정보 반출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060903_21v1','2001060903_21v1 4','영상정보 파기하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060904_21v1','2001060904_21v1 1','출입통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060904_21v1','2001060904_21v1 2','시스템 접근통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060905_21v1','2001060905_21v1 1','개인영상정보 수집·저장하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060905_21v1','2001060905_21v1 2','개인영상정보 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060905_21v1','2001060905_21v1 3','개인영상정보에 대한 안정성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060905_21v1','2001060905_21v1 4','개인영상정보 열람·제공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060906_21v1','2001060906_21v1 1','관제시스템 자원관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060906_21v1','2001060906_21v1 2','관제시스템 상태 모니터링 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060906_21v1','2001060906_21v1 3','장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060907_21v1','2001060907_21v1 1','카메라 작동 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060907_21v1','2001060907_21v1 2','이상징후 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060907_21v1','2001060907_21v1 3','이상징후 채증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060907_21v1','2001060907_21v1 4','상황보고 후 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060908_21v1','2001060908_21v1 1','보안사고 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060908_21v1','2001060908_21v1 2','보안사고 원인분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060908_21v1','2001060908_21v1 3','보안사고 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060908_21v1','2001060908_21v1 4','영상정보시스템 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060909_21v1','2001060909_21v1 1','영상정보 보안감사 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060909_21v1','2001060909_21v1 2','영상정보 보안감사 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060909_21v1','2001060909_21v1 3','영상정보 보안감사 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061001_22v1','2001061001_22v1 1','가명?익명 법제도 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061001_22v1','2001061001_22v1 2','가명?익명처리 관련 법제도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061001_22v1','2001061001_22v1 3','가명?익명처리 관련 법제도 분석결과 기록유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061002_22v1','2001061002_22v1 1','가명·익명처리 환경구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061002_22v1','2001061002_22v1 2','가명·익명처리 사전준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061002_22v1','2001061002_22v1 3','가명?익명정보 대상선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061003_22v1','2001061003_22v1 1','가명?익명처리 위험관리계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061003_22v1','2001061003_22v1 2','데이터 식별 위험성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061003_22v1','2001061003_22v1 3','처리환경 위험성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061003_22v1','2001061003_22v1 4','가명?익명처리 수준 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061004_22v1','2001061004_22v1 1','가명처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061004_22v1','2001061004_22v1 2','익명처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061004_22v1','2001061004_22v1 3','추가 가명?익명처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061005_22v1','2001061005_22v1 1','가명정보 결합 사전준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061005_22v1','2001061005_22v1 2','가명정보 결합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061005_22v1','2001061005_22v1 3','결합 가명정보 반출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061006_22v1','2001061006_22v1 1','가명?익명처리 적정성 검토 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061006_22v1','2001061006_22v1 2','가명?익명처리 적정성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061006_22v1','2001061006_22v1 3','가명?익명처리 적정성검토 사후조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061007_22v1','2001061007_22v1 1','가명?익명정보처리 기록관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061007_22v1','2001061007_22v1 2','가명정보 안전성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061007_22v1','2001061007_22v1 3','가명?익명정보 재식별 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061007_22v1','2001061007_22v1 4','가명·익명정보 재식별 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 1','인공지능 플랫폼 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 2','인공지능 플랫폼 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 3','인공지능 플랫폼 구축 범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 4','인공지능 플랫폼 구축 일정 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 5','인공지능 플랫폼 구축 비용 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070102_18v1','2001070102_18v1 1','인공지능 플랫폼 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070102_18v1','2001070102_18v1 2','인공지능 플랫폼 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070102_18v1','2001070102_18v1 3','인공지능 플랫폼 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070102_18v1','2001070102_18v1 4','인공지능 플랫폼 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070103_18v1','2001070103_18v1 1','인공지능 플랫폼 인프라 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070103_18v1','2001070103_18v1 2','인공지능 플랫폼 기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070103_18v1','2001070103_18v1 3','인공지능 플랫폼 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070103_18v1','2001070103_18v1 4','인공지능 플랫폼 지식화 구현설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070104_18v1','2001070104_18v1 1','인공지능 플랫폼 하드웨어 환경 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070104_18v1','2001070104_18v1 2','인공지능 플랫폼 소프트웨어 환경 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070104_18v1','2001070104_18v1 3','인공지능 플랫폼 네트워크 환경 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 1','인공지능 학습 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 2','인공지능 추론 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 3','인공지능 인지 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 4','인공지능 모델링 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 5','인공지능 플랫폼 관리 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070106_18v1','2001070106_18v1 1','인공지능 플랫폼 휴먼 머신 인터랙션 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070106_18v1','2001070106_18v1 2','인공지능 플랫폼 내부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070106_18v1','2001070106_18v1 3','인공지능 플랫폼 외부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070107_18v1','2001070107_18v1 1','인공지능 데이터 수집 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070107_18v1','2001070107_18v1 2','인공지능 데이터 처리 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070107_18v1','2001070107_18v1 3','인공지능 데이터 저장 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070107_18v1','2001070107_18v1 4','인공지능 지식화 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070108_18v1','2001070108_18v1 1','인공지능 플랫폼 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070108_18v1','2001070108_18v1 2','인공지능 플랫폼 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070108_18v1','2001070108_18v1 3','인공지능 플랫폼 성능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070108_18v1','2001070108_18v1 4','인공지능 플랫폼 인수 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070109_18v1','2001070109_18v1 1','인공지능 플랫폼 품질 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070109_18v1','2001070109_18v1 2','인공지능 플랫폼 품질 보증 활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070109_18v1','2001070109_18v1 3','인공지능 플랫폼 품질 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070202_22v2','2001070202_22v2 1','인공지능 서비스 대상 고객 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070202_22v2','2001070202_22v2 2','인공지능 서비스 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070202_22v2','2001070202_22v2 3','인공지능 서비스 품질목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070202_22v2','2001070202_22v2 4','인공지능 서비스 법?윤리 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070204_22v2','2001070204_22v2 1','인공지능 서비스 모델 구성요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070204_22v2','2001070204_22v2 2','인공지능 서비스 모델 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070204_22v2','2001070204_22v2 3','인공지능 서비스 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070205_22v2','2001070205_22v2 1','인공지능 서비스 시나리오 요소 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070205_22v2','2001070205_22v2 2','인공지능 서비스 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070205_22v2','2001070205_22v2 3','인공지능 서비스 시나리오 타당성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070205_22v2','2001070205_22v2 4','인공지능 서비스 시나리오 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070206_22v2','2001070206_22v2 1','인공지능 서비스 활용방안 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070206_22v2','2001070206_22v2 2','인공지능 서비스 비즈니스모델 활용 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070206_22v2','2001070206_22v2 3','인공지능 서비스 자산화 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 1','인공지능 서비스 추진조직 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 2','인공지능 서비스 인프라 활용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 3','인공지능 서비스 추진일정 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 4','인공지능 서비스 소요예산 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 5','인공지능 서비스 위험관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070208_22v2','2001070208_22v2 1','인공지능 서비스 성과기준 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070208_22v2','2001070208_22v2 2','인공지능 서비스 성과평가 방법 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070208_22v2','2001070208_22v2 3','인공지능 서비스 성과평가 실행 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070208_22v2','2001070208_22v2 4','인공지능 서비스 성과평가 피드백 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070209_22v2','2001070209_22v2 1','인공지능 서비스 기술·시장 환경 분석하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070209_22v2','2001070209_22v2 2','인공지능 서비스 요건 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070209_22v2','2001070209_22v2 3','인공지능 서비스 필요 자원 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 1','인공지능 서비스 데이터 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 2','인공지능 서비스 데이터 확보 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 3','인공지능 서비스 데이터 정제 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 4','인공지능 서비스 데이터 가공 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 5','인공지능 서비스 데이터 검증 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070301_19v1','2001070301_19v1 1','인공지능 모델 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070301_19v1','2001070301_19v1 2','인공지능 모델 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070301_19v1','2001070301_19v1 3','인공지능 후보 모델 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070302_19v1','2001070302_19v1 1','인공지능 모델 기본 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070302_19v1','2001070302_19v1 2','인공지능 모델 통합 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070302_19v1','2001070302_19v1 3','인공지능 모델 설계 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070303_19v1','2001070303_19v1 1','인공지능 데이터 확보 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070303_19v1','2001070303_19v1 2','인공지능 데이터 확보 시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070303_19v1','2001070303_19v1 3','인공지능 내·외부 데이터 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070303_19v1','2001070303_19v1 4','인공지능 데이터 증강하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070304_19v1','2001070304_19v1 1','인공지능 데이터 정제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070304_19v1','2001070304_19v1 2','인공지능 데이터 통합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070304_19v1','2001070304_19v1 3','인공지능 데이터 변환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070304_19v1','2001070304_19v1 4','인공지능 데이터 축소하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070305_19v1','2001070305_19v1 1','인공지능 객체 발견하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070305_19v1','2001070305_19v1 2','인공지능 특징 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070305_19v1','2001070305_19v1 3','인공지능 특징 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070305_19v1','2001070305_19v1 4','인공지능 특징 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070306_19v1','2001070306_19v1 1','인공지능 학습 알고리즘 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070306_19v1','2001070306_19v1 2','인공지능 학습 모델 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070306_19v1','2001070306_19v1 3','인공지능 인자 조율하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070306_19v1','2001070306_19v1 4','인공지능 학습하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070307_19v1','2001070307_19v1 1','인공지능 모델 평가 기준 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070307_19v1','2001070307_19v1 2','인공지능 모델 선정기준 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070307_19v1','2001070307_19v1 3','인공지능 학습 결과 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070307_19v1','2001070307_19v1 4','인공지능 최적화 모델 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070308_19v1','2001070308_19v1 1','인공지능 선정모델 구성요소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070308_19v1','2001070308_19v1 2','인공지능 선정모델 배포 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070308_19v1','2001070308_19v1 3','인공지능 선정모델 성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070401_20v1','2001070401_20v1 1','인공지능서비스 운영관리지침 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070401_20v1','2001070401_20v1 2','인공지능서비스 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070401_20v1','2001070401_20v1 3','인공지능서비스 운영조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070401_20v1','2001070401_20v1 4','인공지능서비스 운영성과관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070402_20v1','2001070402_20v1 1','인공지능서비스 이용자 이용정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070402_20v1','2001070402_20v1 2','인공지능서비스 과금관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070402_20v1','2001070402_20v1 3','인공지능서비스 이용불만사항(VOC) 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070403_20v1','2001070403_20v1 1','인공지능서비스 고도화 반영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070403_20v1','2001070403_20v1 2','인공지능서비스 운영성과 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070403_20v1','2001070403_20v1 3','인공지능서비스 규제이슈대응 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070403_20v1','2001070403_20v1 4','인공지능서비스 운영매뉴얼 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070404_20v1','2001070404_20v1 1','인공지능서비스 운영자원 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070404_20v1','2001070404_20v1 2','인공지능서비스 운영인터페이스 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070404_20v1','2001070404_20v1 3','인공지능서비스 운영성능 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070404_20v1','2001070404_20v1 4','인공지능서비스 운영모니터링결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070405_20v1','2001070405_20v1 1','인공지능서비스 운영품질지표 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070405_20v1','2001070405_20v1 2','인공지능서비스 운영품질 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070405_20v1','2001070405_20v1 3','인공지능서비스 운영품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070406_20v1','2001070406_20v1 1','인공지능서비스 운영장애 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070406_20v1','2001070406_20v1 2','인공지능서비스 운영장애유형 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070406_20v1','2001070406_20v1 3','인공지능서비스 운영장애 해결하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070406_20v1','2001070406_20v1 4','인공지능서비스 장애처리결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070407_20v1','2001070407_20v1 1','인공지능서비스 이용자관점 운영수준관리체계 정립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070407_20v1','2001070407_20v1 2','인공지능서비스 이용자 관점 운영수준측정대상 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070407_20v1','2001070407_20v1 3','인공지능서비스 이용자관점 운영수준측정지표 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070407_20v1','2001070407_20v1 4','인공지능서비스 이용자관점 운영수준 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070408_20v1','2001070408_20v1 1','인공지능서비스 운영개선사항 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070408_20v1','2001070408_20v1 2','인공지능서비스 운영개선사항 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070408_20v1','2001070408_20v1 3','인공지능서비스 운영개선사항 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070501_20v1','2001070501_20v1 1','인공지능서비스 목표 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070501_20v1','2001070501_20v1 2','인공지능서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070501_20v1','2001070501_20v1 3','인공지능서비스 성과평가 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070502_20v1','2001070502_20v1 1','인공지능서비스 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070502_20v1','2001070502_20v1 2','인공지능서비스 애플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070503_20v1','2001070503_20v1 1','인공지능서비스 플랫폼 적용방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070503_20v1','2001070503_20v1 2','인공지능서비스 모델 적용방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070503_20v1','2001070503_20v1 3','인공지능서비스 데이터 적용방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070503_20v1','2001070503_20v1 4','인공지능서비스 인터페이스 적용방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070504_20v1','2001070504_20v1 1','인공지능서비스 비즈니스로직 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070504_20v1','2001070504_20v1 2','인공지능서비스 플랫폼 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070504_20v1','2001070504_20v1 3','인공지능서비스 모델 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070504_20v1','2001070504_20v1 4','인공지능서비스 인터페이스 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070505_20v1','2001070505_20v1 1','인공지능서비스 특화데이터 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070505_20v1','2001070505_20v1 2','인공지능서비스 모델 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070505_20v1','2001070505_20v1 3','인공지능서비스 모델 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070506_20v1','2001070506_20v1 1','인공지능서비스 사용자 인터페이스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070506_20v1','2001070506_20v1 2','인공지능서비스 시스템 인터페이스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070506_20v1','2001070506_20v1 3','인공지능서비스 인터페이스 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070506_20v1','2001070506_20v1 4','인공지능서비스 인터페이스 사용성 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070507_20v1','2001070507_20v1 1','인공지능서비스 테스트계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070507_20v1','2001070507_20v1 2','인공지능서비스 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070507_20v1','2001070507_20v1 3','인공지능서비스 성능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070507_20v1','2001070507_20v1 4','인공지능서비스 신뢰성 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070508_20v1','2001070508_20v1 1','인공지능서비스 이행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070508_20v1','2001070508_20v1 2','인공지능서비스 운영환경 이행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070508_20v1','2001070508_20v1 3','인공지능서비스 고객 인수테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070601_22v1','2001070601_22v1 1','인공지능 학습데이터 구축 임무 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070601_22v1','2001070601_22v1 2','인공지능 학습데이터 구축 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070601_22v1','2001070601_22v1 3','인공지능 학습데이터 품질 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070602_22v1','2001070602_22v1 1','인공지능 학습데이터 획득 가이드라인 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070602_22v1','2001070602_22v1 2','인공지능 학습데이터 획득 방법 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070603_22v1','2001070603_22v1 1','인공지능 학습데이터 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070603_22v1','2001070603_22v1 2','인공지능 학습데이터 비식별화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070603_22v1','2001070603_22v1 3','인공지능 학습데이터 획득 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070604_22v1','2001070604_22v1 1','인공지능 학습데이터 저장 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070604_22v1','2001070604_22v1 2','인공지능 학습데이터 저장 방식 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070604_22v1','2001070604_22v1 3','인공지능 학습데이터 저장소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 1','인공지능 학습데이터 정제 가이드라인 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 2','인공지능 학습데이터 필터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 3','인공지능 학습데이터 유형 변환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 4','인공지능 학습데이터 클렌징하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 5','인공지능 학습데이터 정제 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070606_22v1','2001070606_22v1 1','인공지능 학습데이터 라벨링 가이드라인 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070606_22v1','2001070606_22v1 2','인공지능 학습데이터 라벨링 가이드라인 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070606_22v1','2001070606_22v1 3','인공지능 학습데이터 라벨링 가이드라인 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070606_22v1','2001070606_22v1 4','인공지능 학습데이터 라벨링 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070607_22v1','2001070607_22v1 1','인공지능 학습데이터 라벨링 가이드라인 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070607_22v1','2001070607_22v1 2','인공지능 학습데이터 라벨링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 1','인공지능 학습데이터 가명정보 결합 사전 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 2','인공지능 학습데이터 가명 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 3','인공지능 학습데이터 가명처리 적정성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 4','인공지능 학습데이터 결합 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 5','인공지능 학습데이터 결합 사후 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070609_22v1','2001070609_22v1 1','인공지능 학습데이터 변환 가이드라인 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070609_22v1','2001070609_22v1 2','인공지능 학습데이터 변환 프로그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070609_22v1','2001070609_22v1 3','인공지능 학습데이터 변환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070609_22v1','2001070609_22v1 4','인공지능 학습데이터 변환 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080101_21v2','2001080101_21v2 1','목표 시장 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080101_21v2','2001080101_21v2 2','목표 시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080101_21v2','2001080101_21v2 3','아이템 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080102_21v2','2001080102_21v2 1','요구사항 정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080102_21v2','2001080102_21v2 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080102_21v2','2001080102_21v2 3','요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080102_21v2','2001080102_21v2 4','아키텍처 모델 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080103_21v2','2001080103_21v2 1','블록체인 보상체계 정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080103_21v2','2001080103_21v2 2','블록체인 보상체계 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080103_21v2','2001080103_21v2 3','블록체인 비즈니스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080103_21v2','2001080103_21v2 4','블록체인 비즈니스 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080104_21v2','2001080104_21v2 1','블록 데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080104_21v2','2001080104_21v2 2','합의 알고리즘 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080104_21v2','2001080104_21v2 3','체인 데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080105_21v2','2001080105_21v2 1','단위 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080105_21v2','2001080105_21v2 2','인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080105_21v2','2001080105_21v2 3','환경변수 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080106_21v2','2001080106_21v2 1','프로토타입 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080106_21v2','2001080106_21v2 2','프로토타입 개발 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080106_21v2','2001080106_21v2 3','프로토타입 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080106_21v2','2001080106_21v2 4','단위 기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080107_21v2','2001080107_21v2 1','프로토타입 테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080107_21v2','2001080107_21v2 2','프로토타입 테스트 케이스 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080107_21v2','2001080107_21v2 3','프로토타입 통합 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080108_21v2','2001080108_21v2 1','프로토타입 검증 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080108_21v2','2001080108_21v2 2','프로토타입 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080201_21v2','2001080201_21v2 1','요구사항 정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080201_21v2','2001080201_21v2 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080201_21v2','2001080201_21v2 3','요구사항 피드백하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080202_21v2','2001080202_21v2 1','블록체인 네트워크 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080202_21v2','2001080202_21v2 2','블록체인 합의 알고리즘 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080202_21v2','2001080202_21v2 3','블록체인 세부기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080203_21v2','2001080203_21v2 1','응용서비스 기능구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080203_21v2','2001080203_21v2 2','블록체인 비즈니스 기능구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080203_21v2','2001080203_21v2 3','블록체인 기능검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080204_21v2','2001080204_21v2 1','테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080204_21v2','2001080204_21v2 2','테스트 환경 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080204_21v2','2001080204_21v2 3','테스트 결함 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080205_21v2','2001080205_21v2 1','단위 테스트 케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080205_21v2','2001080205_21v2 2','단위 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080206_21v2','2001080206_21v2 1','통합 테스트 케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080206_21v2','2001080206_21v2 2','통합 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080207_21v2','2001080207_21v2 1','블록체인 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080207_21v2','2001080207_21v2 2','시험 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080207_21v2','2001080207_21v2 3','블록체인 수정·보완 요구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080208_21v2','2001080208_21v2 1','블록체인 운영환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080208_21v2','2001080208_21v2 2','블록체인 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080208_21v2','2001080208_21v2 3','블록체인 개선 요구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080301_22v2','2001080301_22v2 1','블록체인 산업시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080301_22v2','2001080301_22v2 2','블록체인 사업 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080301_22v2','2001080301_22v2 3','블록체인 제도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080302_22v2','2001080302_22v2 1','블록체인 비즈니스 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080302_22v2','2001080302_22v2 2','블록체인 비즈니스모델 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080302_22v2','2001080302_22v2 3','블록체인 비즈니스모델 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080303_22v2','2001080303_22v2 1','블록체인 기술동향 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080303_22v2','2001080303_22v2 2','블록체인 기술적 요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080303_22v2','2001080303_22v2 3','블록체인 적용기술 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080304_22v2','2001080304_22v2 1','블록체인 서비스 정보보호 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080304_22v2','2001080304_22v2 2','블록체인 서비스 정보보호 사전점검계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080304_22v2','2001080304_22v2 3','블록체인 서비스 정보보호 운영관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080305_22v2','2001080305_22v2 1','블록체인 서비스 적용?활용 기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080305_22v2','2001080305_22v2 2','블록체인 서비스 적합성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080305_22v2','2001080305_22v2 3','블록체인 서비스 모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080306_22v2','2001080306_22v2 1','블록체인 서비스 구축 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080306_22v2','2001080306_22v2 2','블록체인 서비스 구축 일정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080306_22v2','2001080306_22v2 3','블록체인 서비스 구축 자원계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080307_22v2','2001080307_22v2 1','블록체인 서비스 운영 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080307_22v2','2001080307_22v2 2','블록체인 서비스 수준 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080307_22v2','2001080307_22v2 3','블록체인 서비스 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080308_22v2','2001080308_22v2 1','블록체인 서비스 관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080308_22v2','2001080308_22v2 2','블록체인 서비스 위험관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080308_22v2','2001080308_22v2 3','블록체인 서비스 품질개선 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090101_20v1','2001090101_20v1 1','스마트물류 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090101_20v1','2001090101_20v1 2','스마트물류체계 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090101_20v1','2001090101_20v1 3','스마트물류체계 도입타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090102_20v1','2001090102_20v1 1','스마트물류체계 목표모델 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090102_20v1','2001090102_20v1 2','스마트물류체계 실행과제 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090102_20v1','2001090102_20v1 3','스마트물류체계 이행로드맵 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 1','스마트물류체계 추진조직 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 2','스마트물류체계 소요예산 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 3','스마트물류체계 추진일정 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 4','스마트물류체계 플랫폼구축 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 5','스마트물류체계 통합관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090104_20v1','2001090104_20v1 1','스마트물류 시설도입계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090104_20v1','2001090104_20v1 2','스마트물류 시설운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090104_20v1','2001090104_20v1 3','스마트물류 시설유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090105_20v1','2001090105_20v1 1','스마트물류 장비도입계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090105_20v1','2001090105_20v1 2','스마트물류 장비운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090105_20v1','2001090105_20v1 3','스마트물류 장비유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090106_20v1','2001090106_20v1 1','스마트물류 소프트웨어도입계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090106_20v1','2001090106_20v1 2','스마트물류 소프트웨어운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090106_20v1','2001090106_20v1 3','스마트물류 소프트웨어유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090107_20v1','2001090107_20v1 1','스마트물류 데이터활용방향 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090107_20v1','2001090107_20v1 2','스마트물류 데이터수집계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090107_20v1','2001090107_20v1 3','스마트물류 데이터분석계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090108_20v1','2001090108_20v1 1','스마트물류체계 표준탐색하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090108_20v1','2001090108_20v1 2','스마트물류체계 표준선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090108_20v1','2001090108_20v1 3','스마트물류체계 표준적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090109_20v1','2001090109_20v1 1','스마트물류체계 성과평가기준 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090109_20v1','2001090109_20v1 2','스마트물류체계 성과평가실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090109_20v1','2001090109_20v1 3','스마트물류체계 성과평가피드백방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 1','스마트물류 플랫폼설계 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 2','내외부환경·자원 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 3','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 4','기술규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 5','설계서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090202_20v1','2001090202_20v1 1','최적화 서비스영역 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090202_20v1','2001090202_20v1 2','최적화 성능목표 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090202_20v1','2001090202_20v1 3','최적화 기술 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090202_20v1','2001090202_20v1 4','최적화 서비스 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090203_20v1','2001090203_20v1 1','요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090203_20v1','2001090203_20v1 2','구축범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090203_20v1','2001090203_20v1 3','적용기술 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090203_20v1','2001090203_20v1 4','솔루션후보 선정평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090204_20v1','2001090204_20v1 1','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090204_20v1','2001090204_20v1 2','네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090204_20v1','2001090204_20v1 3','네트워크 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090205_20v1','2001090205_20v1 1','설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090210_20v1','2001090210_20v1 3','서비스품질 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090210_20v1','2001090210_20v1 4','시스템 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090301_20v1','2001090301_20v1 1','스마트물류 비즈니스환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090301_20v1','2001090301_20v1 2','내부인프라 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090301_20v1','2001090301_20v1 3','플랫폼 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090301_20v1','2001090301_20v1 4','연계시스템 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090302_20v1','2001090302_20v1 1','스마트물류 비즈니스모델 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090302_20v1','2001090302_20v1 2','인적자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090302_20v1','2001090302_20v1 3','시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090302_20v1','2001090302_20v1 4','스마트물류 설비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090303_20v1','2001090303_20v1 1','수요예측 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090303_20v1','2001090303_20v1 2','대응 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090303_20v1','2001090303_20v1 3','물동량변동 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090304_20v1','2001090304_20v1 1','장비운용 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090304_20v1','2001090304_20v1 2','센서 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090304_20v1','2001090304_20v1 3','매핑(Mapping) 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090304_20v1','2001090304_20v1 4','IoT 제어관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090305_20v1','2001090305_20v1 1','지능형 재고관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090305_20v1','2001090305_20v1 2','지능형 하역관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090305_20v1','2001090305_20v1 3','풀필먼트 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090305_20v1','2001090305_20v1 4','특수화물 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090306_20v1','2001090306_20v1 1','실내자율주행로봇 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090306_20v1','2001090306_20v1 2','실외자율주행로봇 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090306_20v1','2001090306_20v1 3','자율주행로봇 관제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090307_20v1','2001090307_20v1 1','어플리케이션 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090307_20v1','2001090307_20v1 2','가시성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090307_20v1','2001090307_20v1 3','장애 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090307_20v1','2001090307_20v1 4','운용성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090308_20v1','2001090308_20v1 1','DBMS 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090308_20v1','2001090308_20v1 2','기준정보 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090308_20v1','2001090308_20v1 3','실시간 데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090309_20v1','2001090309_20v1 1','기업 연계시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090309_20v1','2001090309_20v1 2','타 비즈니스 연계시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090309_20v1','2001090309_20v1 3','데이터인터페이스(Open API) 개방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090309_20v1','2001090309_20v1 4','공공데이터 통합연계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090310_20v1','2001090310_20v1 1','정보보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090310_20v1','2001090310_20v1 2','스마트물류 작업안전 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090310_20v1','2001090310_20v1 3','스마트물류 시설장비안전 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100101_20v1','2001100101_20v1 1','디지털트윈 필요성 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100101_20v1','2001100101_20v1 2','디지털트윈 대상 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100101_20v1','2001100101_20v1 3','디지털트윈 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100102_20v1','2001100102_20v1 1','디지털트윈 내부환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100102_20v1','2001100102_20v1 2','디지털트윈 외부환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100102_20v1','2001100102_20v1 3','디지털트윈 기술환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100103_20v1','2001100103_20v1 1','디지털트윈 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100103_20v1','2001100103_20v1 2','디지털트윈 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100103_20v1','2001100103_20v1 3','디지털트윈 요구사항 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100103_20v1','2001100103_20v1 4','디지털트윈 구현가능성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100104_20v1','2001100104_20v1 1','디지털트윈 모델 구성요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100104_20v1','2001100104_20v1 2','디지털트윈 모델 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100104_20v1','2001100104_20v1 3','디지털트윈 모델 타당성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100104_20v1','2001100104_20v1 4','디지털트윈 모델 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100105_20v1','2001100105_20v1 1','디지털트윈 모델 활용시나리오 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100105_20v1','2001100105_20v1 2','디지털트윈 모델 활용시나리오 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100105_20v1','2001100105_20v1 3','디지털트윈 모델 활용시나리오 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100106_20v1','2001100106_20v1 1','디지털트윈 구현항목 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100106_20v1','2001100106_20v1 2','디지털트윈 구현체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100106_20v1','2001100106_20v1 3','디지털트윈 인프라계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100107_20v1','2001100107_20v1 1','디지털트윈 운영목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100107_20v1','2001100107_20v1 2','디지털트윈 운영체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100107_20v1','2001100107_20v1 3','디지털트윈 성능유지방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100108_20v1','2001100108_20v1 1','디지털트윈 성과지표 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100108_20v1','2001100108_20v1 2','디지털트윈 성과기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100108_20v1','2001100108_20v1 3','디지털트윈 성과평가방법 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100201_22v1','2001100201_22v1 1','디지털트윈 물리객체 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100201_22v1','2001100201_22v1 2','디지털트윈 가상모델 구현 요건 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100201_22v1','2001100201_22v1 3','디지털트윈 알고리즘 적용 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100201_22v1','2001100201_22v1 4','디지털트윈 가상모델 상세설계서 작성하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100202_22v1','2001100202_22v1 1','디지털트윈 상호작용 기능 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100202_22v1','2001100202_22v1 2','디지털트윈 상호작용 기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100202_22v1','2001100202_22v1 3','디지털트윈 상호작용 동기화 방안 설계하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100203_22v1','2001100203_22v1 1','디지털트윈 데이터 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100203_22v1','2001100203_22v1 2','디지털트윈 데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100203_22v1','2001100203_22v1 3','디지털트윈 데이터 동기화 유지방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100204_22v1','2001100204_22v1 1','레퍼런스 아키텍처 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100204_22v1','2001100204_22v1 2','시스템 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100204_22v1','2001100204_22v1 3','인프라 아키텍처 설계하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100205_22v1','2001100205_22v1 1','디지털트윈 가상모델 검증 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090205_20v1','2001090205_20v1 2','설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090205_20v1','2001090205_20v1 3','설비 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090206_20v1','2001090206_20v1 1','IoT도입 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090206_20v1','2001090206_20v1 2','IoT장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090206_20v1','2001090206_20v1 3','IoT장비 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090207_20v1','2001090207_20v1 1','소프트웨어 상세설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090207_20v1','2001090207_20v1 2','소프트웨어 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090207_20v1','2001090207_20v1 3','소프트웨어 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090208_20v1','2001090208_20v1 1','기능별 데이터 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090208_20v1','2001090208_20v1 2','데이터아키텍처 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090208_20v1','2001090208_20v1 3','데이터베이스시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090208_20v1','2001090208_20v1 4','데이터베이스 운영 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090209_20v1','2001090209_20v1 1','통합테스트 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090209_20v1','2001090209_20v1 2','통합테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090209_20v1','2001090209_20v1 3','시범운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090210_20v1','2001090210_20v1 1','스마트물류 데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090210_20v1','2001090210_20v1 2','최적화대상 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100205_22v1','2001100205_22v1 2','디지털트윈 가상모델 설계 검증 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100205_22v1','2001100205_22v1 3','디지털트윈 가상모델 설계 검증결과 반영하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100206_22v1','2001100206_22v1 1','디지털트윈 모듈 설계 구체화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100206_22v1','2001100206_22v1 2','디지털트윈 구현환경 구체화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100206_22v1','2001100206_22v1 3','디지털트윈 구현계획 구체화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100207_22v1','2001100207_22v1 1','디지털트윈 가상모델 품질검증지표 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100207_22v1','2001100207_22v1 2','디지털트윈 가상모델 최적화 기준 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100207_22v1','2001100207_22v1 3','디지털트윈 가상모델 품질평가 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100301_22v1','2001100301_22v1 1','응용서비스 범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100301_22v1','2001100301_22v1 2','응용서비스 기능 구체화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100301_22v1','2001100301_22v1 3','응용서비스 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100301_22v1','2001100301_22v1 4','응용서비스 기능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100302_22v1','2001100302_22v1 1','물리구조 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100302_22v1','2001100302_22v1 2','가상세계 모델링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100302_22v1','2001100302_22v1 3','가상세계 시각화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100302_22v1','2001100302_22v1 4','데이터 재현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100303_22v1','2001100303_22v1 1','물리객체 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100303_22v1','2001100303_22v1 2','가상객체 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100303_22v1','2001100303_22v1 3','상호작용 동기화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100304_22v1','2001100304_22v1 1','디지털트윈 알고리즘 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100304_22v1','2001100304_22v1 2','디지털트윈 구현 알고리즘 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100304_22v1','2001100304_22v1 3','디지털트윈 알고리즘 안정성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100305_22v1','2001100305_22v1 1','데이터 수집모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100305_22v1','2001100305_22v1 2','디지털트윈 데이터 분석모델 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100305_22v1','2001100305_22v1 3','디지털트윈 예측모델 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100305_22v1','2001100305_22v1 4','동기화 서비스 지원모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100306_22v1','2001100306_22v1 1','디지털트윈 테스트계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100306_22v1','2001100306_22v1 2','디지털트윈 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100306_22v1','2001100306_22v1 3','디지털트윈 성능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100306_22v1','2001100306_22v1 4','디지털트윈 안정성 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100307_22v1','2001100307_22v1 1','디지털트윈 가상모델 검증지표 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100307_22v1','2001100307_22v1 2','디지털트윈 가상모델 최적화 기준 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100307_22v1','2001100307_22v1 3','디지털트윈 가상모델 품질 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010101_21v3','2002010101_21v3 1','구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010101_21v3','2002010101_21v3 2','통신망계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010101_21v3','2002010101_21v3 3','망 연동 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010101_21v3','2002010101_21v3 4','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010102_21v3','2002010102_21v3 1','교환설비 기본설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010102_21v3','2002010102_21v3 2','중계설비 기본설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010102_21v3','2002010102_21v3 3','전원설비 기본설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010105_21v3','2002010105_21v3 1','중계설비 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010105_21v3','2002010105_21v3 2','광단국 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010105_21v3','2002010105_21v3 3','광관로 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010105_21v3','2002010105_21v3 4','광케이블 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 1','공사착공 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 2','기초설치공사 및 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 3','케이블 설치공사 및 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 4','교환설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 5','준공 행정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010108_21v3','2002010108_21v3 1','단위시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010108_21v3','2002010108_21v3 2','종합시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010108_21v3','2002010108_21v3 3','망 연동 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010109_21v3','2002010109_21v3 1','착공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010109_21v3','2002010109_21v3 2','시공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010109_21v3','2002010109_21v3 3','준공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010110_21v3','2002010110_21v3 1','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010110_21v3','2002010110_21v3 2','구성성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010110_21v3','2002010110_21v3 3','고장통계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010110_21v3','2002010110_21v3 4','예비자원 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010114_21v2','2002010114_21v2 1','실시설계설명서 지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010114_21v2','2002010114_21v2 2','실시설계도면 지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010114_21v2','2002010114_21v2 3','공사비명세서 지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010114_21v2','2002010114_21v2 4','전원설비 실시설계지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010115_21v2','2002010115_21v2 1','공사계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010115_21v2','2002010115_21v2 2','일반시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010115_21v2','2002010115_21v2 3','특별시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010115_21v2','2002010115_21v2 4','예정공정표 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010116_21v2','2002010116_21v2 1','설계도면 기준 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010116_21v2','2002010116_21v2 2','구성도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010116_21v2','2002010116_21v2 3','배치도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010116_21v2','2002010116_21v2 4','평면도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 1','기술계산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 2','수량산출서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 3','단가산출서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 4','일위대가 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 5','공사원가계산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 1','자재원가 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 2','자재 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 3','자재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 4','공사원가 계산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 5','공사업자 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010119_21v1','2002010119_21v1 1','정류기 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010119_21v1','2002010119_21v1 2','축전기 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010119_21v1','2002010119_21v1 3','무정전 전원장치설비 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010119_21v1','2002010119_21v1 4','접지설비 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010120_21v1','2002010120_21v1 1','교환시스템 5G 엔티티(Entity) 설치공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010120_21v1','2002010120_21v1 2','교환시스템 5G 엔티티(Entity) 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010120_21v1','2002010120_21v1 3','교환시스템 5G 엔티티(Entity) 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010120_21v1','2002010120_21v1 4','교환시스템 5G 엔티티(Entity) 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 1','구축 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 2','구축 범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 3','구축 조직구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 4','구축 소요예산 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 5','구축 인허가 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 1','구내통신환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 2','설계보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 3','설계도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 4','설계예산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 5','공사시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010203_16v3','2002010203_16v3 1','제안요청서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010203_16v3','2002010203_16v3 2','제안 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010203_16v3','2002010203_16v3 3','제안서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010203_16v3','2002010203_16v3 4','제안서 발표하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 1','대외업무 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 2','시공상세도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 3','공사 행정업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 4','자재 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 5','공정 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 1','설계도서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 2','설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 3','설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 4','설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 5','설비공사보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 2','시험검사계획 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 3','단위시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 4','종합시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 5','시공품질 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 1','설계단계의 감리업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 2','공사착수단계의 감리업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 3','공사시행단계의 감리업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 4','기성·준공검사 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 5','인계·인수 업무수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 1','인허가 업무 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 2','정산 내역 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 3','준공 도서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 4','준공검사 준비·결과 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 5','시설물 인계·인수서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 1','구내통신 운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 2','구내통신설비 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 3','구내통신설비 예방점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 4','구내통신설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 5','예비전원설비 등 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 1','구내통신실 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 2','구내교환설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 3','LAN 설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 4','인증제도 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 5','구내통합설비 기술규격 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 1','방송공동수신설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 2','CATV 설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 3','CCTV 설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 4','전관방송설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 5','구내방송통신설비 기술규격 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 1','구내 배관설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 2','구내 배선설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 3','구내 배선반설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 4','홈네트워크설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 5','구내배관배선설비 기술규격 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 1','교환설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 2','전송설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 3','무선설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 4','방송공동수신설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 5','통합배선설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 1','유선선로설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 2','배관설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 3','안테나계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 4','전파전파 특성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 5','통합배선 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 1','현장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 2','케이블트레이 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 3','전선관 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 4','덕트 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 5','단자함 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010217_16v3','2002010217_16v3 1','광 케이블 포설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010217_16v3','2002010217_16v3 2','광 케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010217_16v3','2002010217_16v3 3','광 케이블 성단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010217_16v3','2002010217_16v3 4','광 케이블 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010218_16v3','2002010218_16v3 1','일반 케이블 포설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010218_16v3','2002010218_16v3 2','일반 케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010218_16v3','2002010218_16v3 3','일반 케이블 성단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010218_16v3','2002010218_16v3 4','일반 케이블 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010301_22v3','2002010301_22v3 1','시장현황파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010301_22v3','2002010301_22v3 2','타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010301_22v3','2002010301_22v3 3','사업계획서작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010302_22v3','2002010302_22v3 1','구축절차계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010302_22v3','2002010302_22v3 2','옥내기반시설 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010302_22v3','2002010302_22v3 3','옥외선로설비 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010302_22v3','2002010302_22v3 4','부속장비계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010303_22v3','2002010303_22v3 1','기본설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010303_22v3','2002010303_22v3 2','실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010303_22v3','2002010303_22v3 3','제안요청서작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010304_22v3','2002010304_22v3 1','발주계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010304_22v3','2002010304_22v3 2','사업자선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010304_22v3','2002010304_22v3 3','발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010304_22v3','2002010304_22v3 4','검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010305_22v3','2002010305_22v3 1','수급방법파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010305_22v3','2002010305_22v3 2','구축절차파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010305_22v3','2002010305_22v3 3','구축방법검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010305_22v3','2002010305_22v3 4','네트워크설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010306_22v3','2002010306_22v3 1','시험방법계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010306_22v3','2002010306_22v3 2','단위시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010306_22v3','2002010306_22v3 3','종합시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010306_22v3','2002010306_22v3 4','인수시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010307_22v3','2002010307_22v3 1','착공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010307_22v3','2002010307_22v3 2','시공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010307_22v3','2002010307_22v3 3','준공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010308_22v3','2002010308_22v3 1','운용계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010308_22v3','2002010308_22v3 2','운용매뉴얼작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010308_22v3','2002010308_22v3 3','운용교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010309_22v3','2002010309_22v3 1','유지보수계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010309_22v3','2002010309_22v3 2','유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010309_22v3','2002010309_22v3 3','이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010310_22v4','2002010310_22v4 1','관리적보안수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010310_22v4','2002010310_22v4 2','물리적보안수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010312_22v2','2002010312_22v2 3','설계도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010312_22v2','2002010312_22v2 4','장비 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 1','스위치 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 2','VLAN 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 3','라우팅 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 4','이중화 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 5','백업·장애복구 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 6','스위치 보안 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 1','구축환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 2','설계도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 3','AP 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 4','PoE 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 5','WLC 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 6','무선랜 보안 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 1','서버용 컴퓨터 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 2','서버 가상화 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 3','Windows Server 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 4','Linux Server 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 5','Cloud기반 서버 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 1','현장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 2','굴착 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 3','맨홀(수공) 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 4','관로 부설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 5','관로 교량 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010317_22v2','2002010317_22v2 1','현장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010317_22v2','2002010317_22v2 2','통신주 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010317_22v2','2002010317_22v2 3','지지철물 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010317_22v2','2002010317_22v2 4','조가선 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010318_22v2','2002010318_22v2 1','현장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010318_22v2','2002010318_22v2 2','기초대 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010318_22v2','2002010318_22v2 3','구조물 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010318_22v2','2002010318_22v2 4','함체 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010401_21v2','2002010401_21v2 1','이동통신구내설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010401_21v2','2002010401_21v2 2','이동통신구내설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010401_21v2','2002010401_21v2 3','이동통신구내설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010401_21v2','2002010401_21v2 4','이동통신구내설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 1','방송공동수신설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 2','전파환경 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 3','방송공동수신설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 4','방송공동수신설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 5','방송공동수신설비 사용전검사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010403_21v2','2002010403_21v2 1','영상정보처리기기(CCTV)설비 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010403_21v2','2002010403_21v2 2','영상정보처리기기(CCTV)설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010403_21v2','2002010403_21v2 3','영상정보처리기기(CCTV)설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 1','방범·방재·경비보안설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 2','방범설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 3','방재설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 4','경비보안설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 5','출입통제시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 6','방범ㆍ방재ㆍ보안설비ㆍ출입통제시스템 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010405_21v2','2002010405_21v2 1','방송·음향설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010405_21v2','2002010405_21v2 2','방송·음향설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010405_21v2','2002010405_21v2 3','방송·음향설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 1','홈네트워크설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 2','홈네트워크설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 3','IoT설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 4','홈네트워크설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 5','IoT설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 1','구내전화설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 2','구내 아날로그 교환설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 3','구내 디지털 교환설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 4','구내 아날로그 전화설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 5','구내 디지털 전화설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010408_21v2','2002010408_21v2 1','EMP방호설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010408_21v2','2002010408_21v2 2','EMP방호설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010408_21v2','2002010408_21v2 3','EMP방호설비 성능측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 1','주차관제설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 2','요금관제설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 3','신호관제설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 4','유도관제설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 5','주차관제설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010410_21v2','2002010410_21v2 1','빌딩안내설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010410_21v2','2002010410_21v2 2','빌딩안내설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010410_21v2','2002010410_21v2 3','빌딩안내설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010411_21v2','2002010411_21v2 1','정보통신전용 전원·접지설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010411_21v2','2002010411_21v2 2','정보통신전용 전원·접지설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010411_21v2','2002010411_21v2 3','정보통신전용 전원·접지설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010412_21v1','2002010412_21v1 1','주배선반 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010412_21v1','2002010412_21v1 2','시스템랙 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010412_21v1','2002010412_21v1 3','단자함 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010413_21v1','2002010413_21v1 1','지능형 영상감시설비 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010413_21v1','2002010413_21v1 2','지능형 영상감시설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010413_21v1','2002010413_21v1 3','승강기 영상감시설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010413_21v1','2002010413_21v1 4','지능형 영상감시설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010414_21v1','2002010414_21v1 1','영상표출시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010414_21v1','2002010414_21v1 2','저장·분배장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010414_21v1','2002010414_21v1 3','영상모니터링설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010415_21v1','2002010415_21v1 1','xEMS설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010415_21v1','2002010415_21v1 2','xEMS설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010415_21v1','2002010415_21v1 3','xEMS설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010416_21v1','2002010416_21v1 1','구내통신설비 유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010416_21v1','2002010416_21v1 2','구내통신설비 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010416_21v1','2002010416_21v1 3','유지보수 결과보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010310_22v4','2002010310_22v4 3','기술적보안수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010311_22v2','2002010311_22v2 1','인터넷 설비 공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010311_22v2','2002010311_22v2 2','인터넷 분배장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010311_22v2','2002010311_22v2 3','인터넷 종단장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010311_22v2','2002010311_22v2 4','인터넷 설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010312_22v2','2002010312_22v2 1','아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010312_22v2','2002010312_22v2 2','트래픽 예측하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010501_17v1','2002010501_17v1 1','요구사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010501_17v1','2002010501_17v1 2','환경요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010501_17v1','2002010501_17v1 3','기술사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010501_17v1','2002010501_17v1 4','소요예산 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010502_17v1','2002010502_17v1 1','구축 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010502_17v1','2002010502_17v1 2','구축 범위 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010502_17v1','2002010502_17v1 3','구축 일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010502_17v1','2002010502_17v1 4','구축 원가 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010503_17v1','2002010503_17v1 1','설계 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010503_17v1','2002010503_17v1 2','기본설계서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010503_17v1','2002010503_17v1 3','실시설계서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010504_17v1','2002010504_17v1 1','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010504_17v1','2002010504_17v1 2','구축 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010504_17v1','2002010504_17v1 3','준공서류 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010505_17v1','2002010505_17v1 1','감리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010505_17v1','2002010505_17v1 2','설계도서 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010505_17v1','2002010505_17v1 3','구축 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010506_17v1','2002010506_17v1 1','운영 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010506_17v1','2002010506_17v1 2','운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010506_17v1','2002010506_17v1 3','관리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010507_17v1','2002010507_17v1 1','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010507_17v1','2002010507_17v1 2','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010507_17v1','2002010507_17v1 3','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010508_17v1','2002010508_17v1 1','관리적 보안 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010508_17v1','2002010508_17v1 2','물리적 보안 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010508_17v1','2002010508_17v1 3','기술적 보안 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010509_17v1','2002010509_17v1 1','유지보수 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010509_17v1','2002010509_17v1 2','유지보수 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010509_17v1','2002010509_17v1 3','유지보수 인력 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010601_18v1','2002010601_18v1 1','철도전송설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010601_18v1','2002010601_18v1 2','철도전송설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010601_18v1','2002010601_18v1 3','철도전송설비 시운전개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010602_18v1','2002010602_18v1 1','선로변통합인터페이스통신설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010602_18v1','2002010602_18v1 2','선로변통합인터페이스통신설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010602_18v1','2002010602_18v1 3','선로변통합인터페이스통신설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010602_18v1','2002010602_18v1 4','선로변통합인터페이스통신설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010603_18v1','2002010603_18v1 1','열차무선설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010603_18v1','2002010603_18v1 2','열차무선설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010603_18v1','2002010603_18v1 3','열차무선설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010603_18v1','2002010603_18v1 4','열차무선설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010604_18v1','2002010604_18v1 1','철도영상감시설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010604_18v1','2002010604_18v1 2','철도영상감시설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010604_18v1','2002010604_18v1 3','철도영상감시설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010604_18v1','2002010604_18v1 4','철도영상감시설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010605_18v1','2002010605_18v1 1','철도정보통신망설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010605_18v1','2002010605_18v1 2','철도정보통신망설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010605_18v1','2002010605_18v1 3','철도정보통신망설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010605_18v1','2002010605_18v1 4','철도정보통신망설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010606_18v1','2002010606_18v1 1','열차행선안내설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010606_18v1','2002010606_18v1 2','열차행선안내설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010606_18v1','2002010606_18v1 3','열차행선안내설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010606_18v1','2002010606_18v1 4','열차행선안내설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010607_18v1','2002010607_18v1 1','철도재난방송수신설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010607_18v1','2002010607_18v1 2','철도재난방송수신설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010607_18v1','2002010607_18v1 3','철도재난방송수신설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010607_18v1','2002010607_18v1 4','철도재난방송수신설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010608_18v1','2002010608_18v1 1','역무자동화설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010608_18v1','2002010608_18v1 2','역무자동화설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010608_18v1','2002010608_18v1 3','역무자동화설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010608_18v1','2002010608_18v1 4','역무자동화설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010609_18v1','2002010609_18v1 1','철도관제전화설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010609_18v1','2002010609_18v1 2','철도관제전화설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010609_18v1','2002010609_18v1 3','철도관제전화설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010609_18v1','2002010609_18v1 4','철도관제전화설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010610_18v1','2002010610_18v1 1','철도자동안내방송설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010610_18v1','2002010610_18v1 2','철도자동안내방송설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010610_18v1','2002010610_18v1 3','철도자동안내방송설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010610_18v1','2002010610_18v1 4','철도자동안내방송설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010701_18v1','2002010701_18v1 1','교통신호제어설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010701_18v1','2002010701_18v1 2','교통신호제어설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010701_18v1','2002010701_18v1 3','교통신호제어설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010701_18v1','2002010701_18v1 4','교통신호제어설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010702_18v1','2002010702_18v1 1','도로전광판설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010702_18v1','2002010702_18v1 2','도로전광판설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010702_18v1','2002010702_18v1 3','도로전광판설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010702_18v1','2002010702_18v1 4','도로전광판설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010703_18v1','2002010703_18v1 1','교통관제설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010703_18v1','2002010703_18v1 2','교통관제설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010703_18v1','2002010703_18v1 3','교통관제설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010703_18v1','2002010703_18v1 4','교통관제설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010704_18v1','2002010704_18v1 1','교통정보망설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010704_18v1','2002010704_18v1 2','교통정보망설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010704_18v1','2002010704_18v1 3','교통정보망설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010704_18v1','2002010704_18v1 4','교통정보망설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010705_18v1','2002010705_18v1 1','교통상황감시설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010705_18v1','2002010705_18v1 2','교통상황감시설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010705_18v1','2002010705_18v1 3','교통상황감시설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010705_18v1','2002010705_18v1 4','교통상황감시설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010706_18v1','2002010706_18v1 1','차량번호인식설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010706_18v1','2002010706_18v1 2','차량번호인식설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010706_18v1','2002010706_18v1 3','차량번호인식설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010706_18v1','2002010706_18v1 4','차량번호인식설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010707_18v1','2002010707_18v1 1','교통영상정보처리설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010707_18v1','2002010707_18v1 2','교통영상정보처리설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010707_18v1','2002010707_18v1 3','교통영상정보처리설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010707_18v1','2002010707_18v1 4','교통영상정보처리설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010708_18v1','2002010708_18v1 1','과적차량단속설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010708_18v1','2002010708_18v1 2','과적차량단속설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010708_18v1','2002010708_18v1 3','과적차량단속설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010708_18v1','2002010708_18v1 4','과적차량단속설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010709_18v1','2002010709_18v1 1','요금징수설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010709_18v1','2002010709_18v1 2','요금징수설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010709_18v1','2002010709_18v1 3','요금징수설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010709_18v1','2002010709_18v1 4','요금징수설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010710_18v1','2002010710_18v1 1','버스정보시스템(BIS)설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010710_18v1','2002010710_18v1 2','버스정보시스템(BIS) 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010710_18v1','2002010710_18v1 3','버스정보시스템(BIS) 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010710_18v1','2002010710_18v1 4','버스정보시스템(BIS)개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010711_18v1','2002010711_18v1 1','보행자안내설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010711_18v1','2002010711_18v1 2','보행자안내설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010711_18v1','2002010711_18v1 3','보행자안내설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010801_18v1','2002010801_18v1 1','레이더시스템 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010801_18v1','2002010801_18v1 2','레이더시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010801_18v1','2002010801_18v1 3','레이더시스템 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010801_18v1','2002010801_18v1 4','레이더시스템 준공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010802_18v1','2002010802_18v1 1','해상무선통신 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010802_18v1','2002010802_18v1 2','해상무선통신설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010802_18v1','2002010802_18v1 3','해상무선통신설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010802_18v1','2002010802_18v1 4','해상무선통신설비 준공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010803_18v1','2002010803_18v1 1','선박교통관제 전송설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010803_18v1','2002010803_18v1 2','선박교통관제 전송설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010803_18v1','2002010803_18v1 3','선박교통관제 전송설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010803_18v1','2002010803_18v1 4','선박교통관제 전송설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010804_18v1','2002010804_18v1 1','해상용등부표 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010804_18v1','2002010804_18v1 2','해상용등부표설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010804_18v1','2002010804_18v1 3','해상용등부표설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010804_18v1','2002010804_18v1 4','해상용등부표설비 준공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010805_18v1','2002010805_18v1 1','선박자동식별장치 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010805_18v1','2002010805_18v1 2','선박자동식별장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010805_18v1','2002010805_18v1 3','선박자동식별장치 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010805_18v1','2002010805_18v1 4','선박자동식별장치 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010806_18v1','2002010806_18v1 1','위성항법보정시스템 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010806_18v1','2002010806_18v1 2','위성항법보정시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010806_18v1','2002010806_18v1 3','위성항법보정시스템 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010806_18v1','2002010806_18v1 4','위성항법보정시스템 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010807_18v1','2002010807_18v1 1','해사위성통신장비 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010807_18v1','2002010807_18v1 2','해사위성통신장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010807_18v1','2002010807_18v1 3','해사위성통신장비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010807_18v1','2002010807_18v1 4','해사위성통신장비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010808_18v1','2002010808_18v1 1','자동조타장치 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010808_18v1','2002010808_18v1 2','자동조타장치설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010808_18v1','2002010808_18v1 3','자동조타장치설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010808_18v1','2002010808_18v1 4','자동조타장치설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010809_18v1','2002010809_18v1 1','항해자료기록장치 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010809_18v1','2002010809_18v1 2','항해자료기록장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010809_18v1','2002010809_18v1 3','항해자료기록장치 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010809_18v1','2002010809_18v1 4','항해자료기록장치 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010810_18v1','2002010810_18v1 1','기상시설 공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010810_18v1','2002010810_18v1 2','기상시설 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010810_18v1','2002010810_18v1 3','기상시설 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010810_18v1','2002010810_18v1 4','기상시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010811_18v1','2002010811_18v1 1','선박어로 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010811_18v1','2002010811_18v1 2','선박어로설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010811_18v1','2002010811_18v1 3','선박어로설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010811_18v1','2002010811_18v1 4','선박어로설비 준공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010901_18v1','2002010901_18v1 1','계기착륙시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010901_18v1','2002010901_18v1 2','계기착륙시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010901_18v1','2002010901_18v1 3','계기착륙시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010901_18v1','2002010901_18v1 4','계기착륙시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010902_18v1','2002010902_18v1 1','자동종속감시시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010902_18v1','2002010902_18v1 2','자동종속감시시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010902_18v1','2002010902_18v1 3','자동종속감시시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010902_18v1','2002010902_18v1 4','자동종속감시시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010903_18v1','2002010903_18v1 1','레이더시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010903_18v1','2002010903_18v1 2','레이더시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010903_18v1','2002010903_18v1 3','레이더시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010903_18v1','2002010903_18v1 4','레이더시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010904_18v1','2002010904_18v1 1','레이더자료자동처리시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010904_18v1','2002010904_18v1 2','레이더자료자동처리시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010904_18v1','2002010904_18v1 3','레이더자료자동처리시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010904_18v1','2002010904_18v1 4','레이더자료자동처리시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010905_18v1','2002010905_18v1 1','거리측정·전방향표지시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010905_18v1','2002010905_18v1 2','거리측정·전방향표지시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010905_18v1','2002010905_18v1 3','거리측정·전방향표지시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010905_18v1','2002010905_18v1 4','거리측정·전방향표지시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010906_18v1','2002010906_18v1 1','항공고정통신시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010906_18v1','2002010906_18v1 2','항공고정통신시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010906_18v1','2002010906_18v1 3','항공고정통신시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010906_18v1','2002010906_18v1 4','항공고정통신시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010907_18v1','2002010907_18v1 1','단거리·단파이동통신시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010907_18v1','2002010907_18v1 2','단거리·단파이동통신시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010907_18v1','2002010907_18v1 3','단거리·단파이동통신시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010907_18v1','2002010907_18v1 4','단거리·단파이동통신시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010908_18v1','2002010908_18v1 1','음성통신제어시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010908_18v1','2002010908_18v1 2','음성통신제어시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010908_18v1','2002010908_18v1 3','음성통신제어시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010908_18v1','2002010908_18v1 4','음성통신제어시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010909_18v1','2002010909_18v1 1','초단파디지털이동통신시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010909_18v1','2002010909_18v1 2','초단파디지털이동통신시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010909_18v1','2002010909_18v1 3','초단파디지털이동통신시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010909_18v1','2002010909_18v1 4','초단파디지털이동통신시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010910_18v1','2002010910_18v1 1','공항정보방송시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010910_18v1','2002010910_18v1 2','공항정보방송시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010910_18v1','2002010910_18v1 3','공항정보방송시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010910_18v1','2002010910_18v1 4','공항정보방송시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011001_19v1','2002011001_19v1 1','클라우드 플랫폼 하드웨어 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011001_19v1','2002011001_19v1 2','클라우드 플랫폼 가상화 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011001_19v1','2002011001_19v1 3','클라우드 플랫폼 서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011002_19v1','2002011002_19v1 1','하드웨어 플랫폼 구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011002_19v1','2002011002_19v1 2','소프트웨어 플랫폼 구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011002_19v1','2002011002_19v1 3','클라우드 플랫폼 서비스 구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011003_19v1','2002011003_19v1 1','클라우드 플랫폼 하드웨어 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011003_19v1','2002011003_19v1 2','클라우드 플랫폼 소프트웨어 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011003_19v1','2002011003_19v1 3','클라우드 플랫폼 서비스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011004_19v1','2002011004_19v1 1','하드웨어 인프라 설계도서 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011004_19v1','2002011004_19v1 2','하드웨어 인프라 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011004_19v1','2002011004_19v1 3','하드웨어 인프라 구축 완료도서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011005_19v1','2002011005_19v1 1','가상화 인프라 환경 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011005_19v1','2002011005_19v1 2','가상화 인프라 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011005_19v1','2002011005_19v1 3','가상머신 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011005_19v1','2002011005_19v1 4','가상화 인프라 자원 운영 관리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011006_19v1','2002011006_19v1 1','백업/복구 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011006_19v1','2002011006_19v1 2','백업/복구 시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011006_19v1','2002011006_19v1 3','백업/복구 시스템 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011007_19v1','2002011007_19v1 1','클라우드 보안정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011007_19v1','2002011007_19v1 2','클라우드 보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011007_19v1','2002011007_19v1 3','클라우드 보안 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011008_19v1','2002011008_19v1 1','시험계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011008_19v1','2002011008_19v1 2','단위테스트 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011008_19v1','2002011008_19v1 3','통합테스트 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011009_19v1','2002011009_19v1 1','하드웨어 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011009_19v1','2002011009_19v1 2','소프트웨어 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011009_19v1','2002011009_19v1 3','클라우드 서비스 품질성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020101_14v2','2002020101_14v2 1','요구사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020101_14v2','2002020101_14v2 2','환경요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020101_14v2','2002020101_14v2 3','기술사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020101_14v2','2002020101_14v2 4','소요예산 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020102_14v2','2002020102_14v2 1','구축범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020102_14v2','2002020102_14v2 2','기술사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020102_14v2','2002020102_14v2 3','공정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020102_14v2','2002020102_14v2 4','품질관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020103_14v2','2002020103_14v2 1','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020103_14v2','2002020103_14v2 2','수용용량 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020103_14v2','2002020103_14v2 3','설계도서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020103_14v2','2002020103_14v2 4','무선통신시스템 보호대책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020104_14v2','2002020104_14v2 1','장비규격 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020104_14v2','2002020104_14v2 2','구축장비 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020104_14v2','2002020104_14v2 3','발주장비 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020106_14v2','2002020106_14v2 1','단위 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020106_14v2','2002020106_14v2 2','통합 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020106_14v2','2002020106_14v2 3','준공 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020106_14v2','2002020106_14v2 4','인수 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020107_14v2','2002020107_14v2 1','관련규정 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020107_14v2','2002020107_14v2 2','설계도서 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020107_14v2','2002020107_14v2 3','시공 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020108_14v2','2002020108_14v2 1','요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020108_14v2','2002020108_14v2 2','최적화방안 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020108_14v2','2002020108_14v2 3','최적화계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020108_14v2','2002020108_14v2 4','최적화 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020109_14v2','2002020109_14v2 1','인수인계내역 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020109_14v2','2002020109_14v2 2','기술이전 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020109_14v2','2002020109_14v2 3','운용매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020109_14v2','2002020109_14v2 4','장비 인수인계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020110_14v2','2002020110_14v2 1','하자계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020110_14v2','2002020110_14v2 2','하자 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020110_14v2','2002020110_14v2 3','장애관리 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020111_16v1','2002020111_16v1 1','급전선 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020111_16v1','2002020111_16v1 2','안테나 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020111_16v1','2002020111_16v1 3','무선중계설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020111_16v1','2002020111_16v1 4','고정무선설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020112_16v3','2002020112_16v3 1','설치계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020112_16v3','2002020112_16v3 2','통신장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020112_16v3','2002020112_16v3 3','안테나 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020112_16v3','2002020112_16v3 4','부대설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020113_16v3','2002020113_16v3 1','백홀망 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020113_16v3','2002020113_16v3 2','기지국 장비 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020113_16v3','2002020113_16v3 3','기지국 장비 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 1','타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 2','기술적 대안 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 3','설계지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 4','기본설계도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 5','기본설계서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020115_16v1','2002020115_16v1 1','공사설명서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020115_16v1','2002020115_16v1 2','일반시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020115_16v1','2002020115_16v1 3','특별시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020115_16v1','2002020115_16v1 4','예정공정표 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020116_16v1','2002020116_16v1 1','공종별 배치도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020116_16v1','2002020116_16v1 2','공종별 계통도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020116_16v1','2002020116_16v1 3','공종별 평면도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020116_16v1','2002020116_16v1 4','공종별 상세도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 1','공사원가계산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 2','자재명세표 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 3','수량산출서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 4','산출기초 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 5','기술계산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020201_22v3','2002020201_22v3 1','요구사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020201_22v3','2002020201_22v3 3','기술사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 1','구축범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 2','구축일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 3','구축원가 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 4','인력계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 5','이해관계자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 1','업무수행계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 2','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 3','세부기술규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 4','설계도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 5','설계보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020204_22v3','2002020204_22v3 1','자재설비 설계검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020204_22v3','2002020204_22v3 2','제안요청서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020204_22v3','2002020204_22v3 3','시공업체 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020206_22v3','2002020206_22v3 1','구축 상면 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020206_22v3','2002020206_22v3 2','환경설비 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020206_22v3','2002020206_22v3 3','전원설비 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020206_22v3','2002020206_22v3 4','보안설비 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020208_22v3','2002020208_22v3 1','시험 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020208_22v3','2002020208_22v3 2','단위 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020208_22v3','2002020208_22v3 3','통합 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020208_22v3','2002020208_22v3 4','평가·보완하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 1','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 2','자재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 3','구축업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 4','감리보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 5','안전관리 지도하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020210_22v3','2002020210_22v3 1','유지관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020210_22v3','2002020210_22v3 2','전송시스템 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020210_22v3','2002020210_22v3 3','점검결과 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020212_22v2','2002020212_22v2 1','무선통신 표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020212_22v2','2002020212_22v2 2','유선통신 표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020212_22v2','2002020212_22v2 3','설계공사 표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020212_22v2','2002020212_22v2 4','구내 방송통신 표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 1','설계 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 2','자재 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 3','자재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 4','구축 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 5','준공서류 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020215_22v1','2002020215_22v1 1','전송망 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020215_22v1','2002020215_22v1 2','전송시스템 전송용량산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020215_22v1','2002020215_22v1 3','전송망 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020301_21v3','2002020301_21v3 1','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020301_21v3','2002020301_21v3 2','경제성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020301_21v3','2002020301_21v3 3','구축일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020301_21v3','2002020301_21v3 4','예산계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020302_21v3','2002020302_21v3 1','전파환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020302_21v3','2002020302_21v3 2','망기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020302_21v3','2002020302_21v3 3','개략공사비 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020302_21v3','2002020302_21v3 4','일반시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 1','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 2','무선망 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 3','장비규격서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 4','설계도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 5','특별시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020304_21v3','2002020304_21v3 1','장비규격 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020304_21v3','2002020304_21v3 2','구축장비 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020304_21v3','2002020304_21v3 3','발주장비 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020306_21v3','2002020306_21v3 1','단위 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020306_21v3','2002020306_21v3 2','통합 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020306_21v3','2002020306_21v3 3','준공 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020307_21v3','2002020307_21v3 1','감리 대가 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020307_21v3','2002020307_21v3 2','법규 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020307_21v3','2002020307_21v3 3','설계 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020307_21v3','2002020307_21v3 4','시공 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020308_21v3','2002020308_21v3 1','전파기술기준 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020308_21v3','2002020308_21v3 2','무선국 개설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020308_21v3','2002020308_21v3 3','전자파장해 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020309_14v2','2002020309_14v2 1','망운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020309_14v2','2002020309_14v2 2','망품질계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020309_14v2','2002020309_14v2 3','망운용인력 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020310_21v3','2002020310_21v3 1','유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020310_21v3','2002020310_21v3 2','장애방지대책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020310_21v3','2002020310_21v3 3','유지보수인력 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020310_21v3','2002020310_21v3 4','장비장애 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020311_21v2','2002020311_21v2 1','서비스 구역 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020311_21v2','2002020311_21v2 2','전파환경 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020311_21v2','2002020311_21v2 3','전파환경 측정 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020312_21v2','2002020312_21v2 1','급전선 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020312_21v2','2002020312_21v2 2','안테나 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020312_21v2','2002020312_21v2 3','철탑 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020312_21v2','2002020312_21v2 4','안테나계 기술 규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 1','무선중계설비 설계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 2','고정무선설비 설계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 3','이동통신설비 설계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 4','위성통신설비 설계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 5','무선통신설비 기술규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020314_21v4','2002020314_21v4 1','현장파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020314_21v4','2002020314_21v4 2','반입장비 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020314_21v4','2002020314_21v4 3','공사비산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020314_21v4','2002020314_21v4 4','구축일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 1','설치계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 2','중계기 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 3','케이블 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 4','안테나 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 5','부대장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 1','5G 액세스 장비 설치 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 2','5G 액세스 장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 3','5G 액세스 장비 케이블 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 4','부대설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 5','설치 장비 성능 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020201_22v3','2002020201_22v3 2','환경요소 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020401_18v2','2002020401_18v2 1','요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020401_18v2','2002020401_18v2 2','타당성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020401_18v2','2002020401_18v2 3','시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020401_18v2','2002020401_18v2 4','전파환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 1','공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 2','안테나 시설 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 3','위성송수신장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 4','전송장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 5','전원시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 6','준공처리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 1','감리행정 업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 2','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 3','시공 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 4','공정관리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 5','시공품질 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020404_18v2','2002020404_18v2 1','위성체 제어하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020404_18v2','2002020404_18v2 2','위성체 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020404_18v2','2002020404_18v2 3','위성체상태 정보감시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020404_18v2','2002020404_18v2 4','긴급 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020406_18v2','2002020406_18v2 1','지구국 장비 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020406_18v2','2002020406_18v2 2','기반 시설 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020406_18v2','2002020406_18v2 3','긴급 복구 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020407_18v2','2002020407_18v2 1','인·허가 사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020407_18v2','2002020407_18v2 2','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020407_18v2','2002020407_18v2 3','사업목표 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020407_18v2','2002020407_18v2 4','사업비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 1','위성 송수신장치 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 2','안테나시설 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 3','전송장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 4','전원시설 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 5','지구국 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020409_18v1','2002020409_18v1 1','운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020409_18v1','2002020409_18v1 2','중계기 자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020409_18v1','2002020409_18v1 3','중계기 운용상태 감시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020409_18v1','2002020409_18v1 4','중계기 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020501_22v3','2002020501_22v3 1','IoT 융합서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020501_22v3','2002020501_22v3 2','IoT통신망 기능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020501_22v3','2002020501_22v3 3','IoT통신망 성능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020501_22v3','2002020501_22v3 4','IoT통신망 구성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020502_22v3','2002020502_22v3 1','IoT통신망 표준 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020502_22v3','2002020502_22v3 2','IoT통신망 기술기준 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020502_22v3','2002020502_22v3 3','IoT통신망 기술규격 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 1','공정 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 2','품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 3','공사비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 4','안전 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 5','감리행정업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020504_22v3','2002020504_22v3 1','무선전력전송기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020504_22v3','2002020504_22v3 2','전원시설 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020504_22v3','2002020504_22v3 3','통신접지 기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020504_22v3','2002020504_22v3 4','기술분석보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020505_22v3','2002020505_22v3 1','LPWAN 디바이스 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020505_22v3','2002020505_22v3 2','LPWAN 백엔드 네트워크 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020505_22v3','2002020505_22v3 3','LPWAN 백홀 네트워크 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020505_22v3','2002020505_22v3 4','LPWAN 기술분석보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020506_22v3','2002020506_22v3 1','네트워크 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020506_22v3','2002020506_22v3 2','기본 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020506_22v3','2002020506_22v3 3','실시 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020506_22v3','2002020506_22v3 4','설계설명서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020507_22v3','2002020507_22v3 1','LPWAN 디바이스 네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020507_22v3','2002020507_22v3 2','LPWAN 백엔드 네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020507_22v3','2002020507_22v3 3','LPWAN 백홀 네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020507_22v3','2002020507_22v3 4','LPWAN 부대설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020508_22v3','2002020508_22v3 1','LPWAN 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020508_22v3','2002020508_22v3 2','LPWAN 디바이스 네트워크 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020508_22v3','2002020508_22v3 3','LPWAN 백엔드 네트워크 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020508_22v3','2002020508_22v3 4','LPWAN 백홀 네트워크 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020509_22v3','2002020509_22v3 1','LoWPAN 디바이스 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020509_22v3','2002020509_22v3 2','LoWPAN 근거리통신망 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020509_22v3','2002020509_22v3 3','LoWPAN 기술분석보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020510_22v3','2002020510_22v3 1','디바이스 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020510_22v3','2002020510_22v3 2','백홀 연동방식 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020510_22v3','2002020510_22v3 3','실시 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020510_22v3','2002020510_22v3 4','설계설명서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020511_22v3','2002020511_22v3 1','LoWPAN 디바이스 시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020511_22v3','2002020511_22v3 2','LoWPAN 근거리 통신망 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020511_22v3','2002020511_22v3 3','LoWPAN 부대설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020512_22v3','2002020512_22v3 1','LoWPAN 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020512_22v3','2002020512_22v3 2','LoWPAN 디바이스 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020512_22v3','2002020512_22v3 3','LoWPAN 근거리 통신망 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020512_22v3','2002020512_22v3 4','LoWPAN 부대설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020513_22v1','2002020513_22v1 1','IoT통신망 보안관리 대상 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020513_22v1','2002020513_22v1 2','디바이스 네트워크 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020513_22v1','2002020513_22v1 3','백엔드 네트워크 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020513_22v1','2002020513_22v1 4','백홀 네트워크 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020601_18v1','2002020601_18v1 1','사업 타당성 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020601_18v1','2002020601_18v1 2','사업계획서 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020601_18v1','2002020601_18v1 3','제안요청서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020601_18v1','2002020601_18v1 4','발주 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 1','공통기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 2','비상상황 단계별 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 3','장애 시 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 4','대체통신수단 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 5','표준운영절차 훈련 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020603_18v1','2002020603_18v1 1','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020603_18v1','2002020603_18v1 2','기본 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020603_18v1','2002020603_18v1 3','상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020603_18v1','2002020603_18v1 4','공사시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020604_18v1','2002020604_18v1 1','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020604_18v1','2002020604_18v1 2','시공계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020604_18v1','2002020604_18v1 3','시설 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020604_18v1','2002020604_18v1 4','준공서류 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020605_18v1','2002020605_18v1 1','공공안전통신망 운용관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020605_18v1','2002020605_18v1 2','PS-LTE 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020605_18v1','2002020605_18v1 3','LTE-M. 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020605_18v1','2002020605_18v1 4','LTE-R 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020606_18v1','2002020606_18v1 1','정보보안관리 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020606_18v1','2002020606_18v1 2','정보보안관리 체계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010307_19v4','2001010307_19v4 5','정보기술 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 1','인력계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 2','장비·도구계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 3','경비계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 4','구매계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010308_19v4','2001010308_19v4 5','설치계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 1','일정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 2','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 3','산출물 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 4','변화관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010309_19v4','2001010309_19v4 5','운영 유지보수 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 1','성과평가 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 2','성과평가 방법 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 3','성과평가 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 4','평가결과 피드백 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010310_19v4','2001010310_19v4 5','성과 확대방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 1','비즈니스 전략 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 2','조직 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 3','핵심역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 4','관리 절차 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010401_19v4','2001010401_19v4 5','재무 구조 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 1','시장동향 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 2','소비자 요구 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 3','정보기술 정책 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 4','기술동향 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 5','경쟁사 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010402_19v4','2001010402_19v4 6','대체재 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010403_19v4','2001010403_19v4 1','표준 및 특허 기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010403_19v4','2001010403_19v4 2','OSS현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010403_19v4','2001010403_19v4 3','개발 플랫폼 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010403_19v4','2001010403_19v4 4','기술 도입 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 1','SW 제품 가격정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 2','예상 매출 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 3','비용 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 4','비용 효과 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010404_19v4','2001010404_19v4 5','제품 모형(Mockup) 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 1','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 2','명세 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 3','개념 수준 SW 아키텍처 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 4','운영 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010405_19v4','2001010405_19v4 5','제품 운영 환경 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010406_19v4','2001010406_19v4 1','SW제품 선정 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010406_19v4','2001010406_19v4 2','SW제품 라인업 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010406_19v4','2001010406_19v4 3','SW제품 라이프 싸이클 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010406_19v4','2001010406_19v4 4','SW제품 중장기 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 1','개발 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 2','개발 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 3','개발 예산 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 4','개발 일정 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 5','투입 자원 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010407_19v4','2001010407_19v4 6','개발 수행 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010408_19v4','2001010408_19v4 1','유지보수 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010408_19v4','2001010408_19v4 2','사용자 맞춤화 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010408_19v4','2001010408_19v4 3','사후 지원계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010408_19v4','2001010408_19v4 4','SW제품 개선계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010409_19v4','2001010409_19v4 1','SW제품인증 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010409_19v4','2001010409_19v4 2','판매 라이선스정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010409_19v4','2001010409_19v4 3','제품패키징 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010409_19v4','2001010409_19v4 4','판매방안 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010410_19v4','2001010410_19v4 1','고객 분류하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010410_19v4','2001010410_19v4 2','대상 고객 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010410_19v4','2001010410_19v4 3','고객 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010410_19v4','2001010410_19v4 4','고객 관계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010509_21v4','2001010509_21v4 1','분석 결과 시각화 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010509_21v4','2001010509_21v4 2','분석 결과 시각화 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010509_21v4','2001010509_21v4 3','분석 결과 시각화 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010510_21v4','2001010510_21v4 1','데이터 정제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010510_21v4','2001010510_21v4 2','데이터 통합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010510_21v4','2001010510_21v4 3','데이터 변환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010511_21v4','2001010511_21v4 1','기술통계 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010511_21v4','2001010511_21v4 2','데이터 분포 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010511_21v4','2001010511_21v4 3','변수간 관계 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010512_21v1','2001010512_21v1 1','빅데이터 분석 피처 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010512_21v1','2001010512_21v1 2','빅데이터 분석 피처 추출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010512_21v1','2001010512_21v1 3','빅데이터 분석 피처 선택하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010512_21v1','2001010512_21v1 4','빅데이터 분석 피처 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 1','데이터 분석 가설 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 2','데이터셋 분할하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 3','통계적 모델 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 4','머신러닝 모델 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010513_21v1','2001010513_21v1 5','모델 성능 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010514_21v1','2001010514_21v1 1','빅데이터 분석 모델 평가 기준 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010514_21v1','2001010514_21v1 2','빅데이터 분석 모델 평가 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010514_21v1','2001010514_21v1 3','빅데이터 분석 모델 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010515_21v1','2001010515_21v1 1','빅데이터 분석 플로우 구성요소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010515_21v1','2001010515_21v1 2','빅데이터 분석 플로우 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010515_21v1','2001010515_21v1 3','빅데이터 분석 플로우 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010516_21v1','2001010516_21v1 1','데이터 분석 언어 기본문법 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010516_21v1','2001010516_21v1 2','데이터 분석 언어특성 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010516_21v1','2001010516_21v1 3','데이터 분석 라이브러리 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010516_21v1','2001010516_21v1 4','데이터 분석 자동화 도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010601_19v2','2001010601_19v2 1','IoT 대상 시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010601_19v2','2001010601_19v2 2','IoT 고객환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010601_19v2','2001010601_19v2 3','IoT 경쟁사환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010601_19v2','2001010601_19v2 4','IoT 내부역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010602_19v2','2001010602_19v2 1','IoT 비즈니스 모델 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010602_19v2','2001010602_19v2 2','IoT 요소기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010602_19v2','2001010602_19v2 3','IoT 비즈니스 모델 구성요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010602_19v2','2001010602_19v2 4','IoT 비즈니스 모델 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010603_19v2','2001010603_19v2 1','IoT 서비스 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021102_19v2','2001021102_19v2 2','데이터 거버넌스 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021102_19v2','2001021102_19v2 3','데이터 보안 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021102_19v2','2001021102_19v2 4','데이터 라이프사이클 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021103_19v2','2001021103_19v2 1','데이터 아키텍처 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021103_19v2','2001021103_19v2 2','데이터 아키텍처 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021103_19v2','2001021103_19v2 3','데이터 아키텍처 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021103_19v2','2001021103_19v2 4','데이터 아키텍처 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021104_19v2','2001021104_19v2 1','데이터 아키텍처 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021104_19v2','2001021104_19v2 2','데이터 아키텍처 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021104_19v2','2001021104_19v2 3','데이터 아키텍처 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021105_19v2','2001021105_19v2 1','데이터 표준 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021105_19v2','2001021105_19v2 2','데이터 표준 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021105_19v2','2001021105_19v2 3','데이터 표준 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021106_19v2','2001021106_19v2 1','개념데이터 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021106_19v2','2001021106_19v2 2','논리데이터 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021106_19v2','2001021106_19v2 3','물리데이터 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021106_19v2','2001021106_19v2 4','데이터 모델 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021107_19v2','2001021107_19v2 1','데이터베이스 구축 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021107_19v2','2001021107_19v2 2','데이터베이스 최적화 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021108_19v2','2001021108_19v2 1','데이터 품질관리 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021108_19v2','2001021108_19v2 2','데이터 품질관리 프로세스 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021109_19v2','2001021109_19v2 1','데이터 품질 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021109_19v2','2001021109_19v2 2','데이터 품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021110_19v2','2001021110_19v2 1','데이터 아키텍처 일정 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021110_19v2','2001021110_19v2 2','데이터 아키텍처 범위 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021110_19v2','2001021110_19v2 3','데이터 아키텍처 수행 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021201_19v1','2001021201_19v1 1','연동 대상 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021201_19v1','2001021201_19v1 2','연동 방식 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021201_19v1','2001021201_19v1 3','연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021201_19v1','2001021201_19v1 4','연동 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021202_19v1','2001021202_19v1 1','시스템 연동 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021202_19v1','2001021202_19v1 2','시스템 연동 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021202_19v1','2001021202_19v1 3','시스템 연동 규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021203_19v1','2001021203_19v1 1','연동 모듈 개발 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021203_19v1','2001021203_19v1 2','연동 모듈 개발 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021203_19v1','2001021203_19v1 3','연동 모듈 개발 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021203_19v1','2001021203_19v1 4','연동 모듈 SW 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021204_19v1','2001021204_19v1 1','외부 서비스 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021204_19v1','2001021204_19v1 2','외부 서비스 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021204_19v1','2001021204_19v1 3','외부 서비스 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021205_19v1','2001021205_19v1 1','서버 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021205_19v1','2001021205_19v1 2','서버 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021205_19v1','2001021205_19v1 3','서버 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021206_19v1','2001021206_19v1 1','게이트웨이 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021206_19v1','2001021206_19v1 2','게이트웨이 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021206_19v1','2001021206_19v1 3','게이트웨이 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021207_19v1','2001021207_19v1 1','스마트 디바이스 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021207_19v1','2001021207_19v1 2','스마트 디바이스 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021207_19v1','2001021207_19v1 3','스마트 디바이스 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021208_19v1','2001021208_19v1 1','엣지 디바이스 연동 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021208_19v1','2001021208_19v1 2','엣지 디바이스 연동 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021208_19v1','2001021208_19v1 3','엣지 디바이스 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021209_19v1','2001021209_19v1 1','IoT시스템 연동 시험 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021209_19v1','2001021209_19v1 2','IoT시스템 연동 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021209_19v1','2001021209_19v1 3','IoT시스템 연동 시험 결과 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021301_19v1','2001021301_19v1 1','자산 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021301_19v1','2001021301_19v1 2','기술 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021301_19v1','2001021301_19v1 3','문제점 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021302_19v1','2001021302_19v1 1','인프라스트럭쳐 아키텍처 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021302_19v1','2001021302_19v1 2','인프라스트럭쳐 아키텍처 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021302_19v1','2001021302_19v1 3','인프라스트럭쳐 아키텍처 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021302_19v1','2001021302_19v1 4','인프라스트럭쳐 아키텍처 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 1','인프라스트럭쳐 아키텍처 설계 원칙 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 2','서버 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 3','스토리지 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 4','네트워크 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021303_19v1','2001021303_19v1 5','보안 적용 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021304_19v1','2001021304_19v1 1','서버 하드웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021304_19v1','2001021304_19v1 2','서버 소프트웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021304_19v1','2001021304_19v1 3','서버 보안 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021305_19v1','2001021305_19v1 1','스토리지 하드웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021305_19v1','2001021305_19v1 2','스토리지 소프트웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021305_19v1','2001021305_19v1 3','스토리지 보안 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021306_19v1','2001021306_19v1 1','네트워크 하드웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021306_19v1','2001021306_19v1 2','네트워크 소프트웨어 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021306_19v1','2001021306_19v1 3','네트워크 보안 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021307_19v1','2001021307_19v1 1','가상서버 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021307_19v1','2001021307_19v1 2','스토리지 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021307_19v1','2001021307_19v1 3','네트워크 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021307_19v1','2001021307_19v1 4','보안 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021308_19v1','2001021308_19v1 1','서버 구성 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021308_19v1','2001021308_19v1 2','스토리지 구성 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021308_19v1','2001021308_19v1 3','네트워크 구성 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021309_19v1','2001021309_19v1 1','인프라스트럭쳐 관리 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021309_19v1','2001021309_19v1 2','인프라스트럭쳐 모니터링 체계 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021309_19v1','2001021309_19v1 3','인프라스트럭쳐 운영 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021401_21v1','2001021401_21v1 1','클라우드 솔루션 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021401_21v1','2001021401_21v1 2','클라우드 솔루션 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021401_21v1','2001021401_21v1 3','클라우드 솔루션 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021401_21v1','2001021401_21v1 4','클라우드 솔루션 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 1','서버 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 2','스토리지 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010603_19v2','2001010603_19v2 2','IoT 서비스 모형 기능 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010603_19v2','2001010603_19v2 3','IoT 디바이스 모형 기능 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010603_19v2','2001010603_19v2 4','IoT 표준 활용 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010604_19v2','2001010604_19v2 1','IoT 디바이스 요소기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010604_19v2','2001010604_19v2 2','IoT 디바이스 사양 명세화 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010604_19v2','2001010604_19v2 3','IoT 디바이스 디자인 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010604_19v2','2001010604_19v2 4','IoT 디바이스 UI기능 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010605_19v2','2001010605_19v2 1','IoT 네트워크 구성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010605_19v2','2001010605_19v2 2','IoT 서비스망 구성 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010605_19v2','2001010605_19v2 3','IoT 네트워크 운영/관리 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010606_19v2','2001010606_19v2 1','IoT 플랫폼 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010606_19v2','2001010606_19v2 2','IoT 플랫폼 현황 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010606_19v2','2001010606_19v2 3','IoT 플랫폼 적용방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010607_19v2','2001010607_19v2 1','IoT 응용소프트웨어 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010607_19v2','2001010607_19v2 2','IoT 응용소프트웨어 자원계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010607_19v2','2001010607_19v2 3','IoT 응용소프트웨어 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010607_19v2','2001010607_19v2 4','IoT 응용소프트웨어 운영 시나리오 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010608_19v2','2001010608_19v2 1','IoT 데이터 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010608_19v2','2001010608_19v2 2','IoT 데이터 수집 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010608_19v2','2001010608_19v2 3','IoT 데이터 저장 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010608_19v2','2001010608_19v2 4','IoT 데이터 활용 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010609_19v2','2001010609_19v2 1','IoT 보안 위협 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010609_19v2','2001010609_19v2 2','IoT 보안 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010609_19v2','2001010609_19v2 3','IoT 보안 관리방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010610_19v2','2001010610_19v2 1','IoT 서비스 마케팅 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010610_19v2','2001010610_19v2 2','IoT 서비스 마케팅 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010610_19v2','2001010610_19v2 3','IoT 서비스 마케팅 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010610_19v2','2001010610_19v2 4','IoT 서비스 마케팅 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010611_19v2','2001010611_19v2 1','IoT 서비스 유지보수 운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010611_19v2','2001010611_19v2 2','IoT 서비스 고객 요구사항 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010611_19v2','2001010611_19v2 3','IoT 서비스 고객 지원계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010611_19v2','2001010611_19v2 4','IoT 서비스 협력업체 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010701_19v2','2001010701_19v2 1','빅데이터 서비스 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010701_19v2','2001010701_19v2 2','빅데이터 서비스 모델 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010701_19v2','2001010701_19v2 3','빅데이터 서비스 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010701_19v2','2001010701_19v2 4','빅데이터 서비스 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010702_19v2','2001010702_19v2 1','빅데이터 서비스 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010702_19v2','2001010702_19v2 2','빅데이터 데이터 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010702_19v2','2001010702_19v2 3','빅데이터 기술 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010702_19v2','2001010702_19v2 4','빅데이터 인력 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 1','빅데이터 분석 요건 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 2','빅데이터 분석 데이터 확보 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 3','빅데이터 분석 데이터 탐색 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 4','빅데이터 분석 모델링 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010703_19v2','2001010703_19v2 5','빅데이터 분석 결과 적용 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010704_19v2','2001010704_19v2 1','빅데이터 아키텍처 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010704_19v2','2001010704_19v2 2','빅데이터 수집 기술 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010704_19v2','2001010704_19v2 3','빅데이터 저장 기술 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010704_19v2','2001010704_19v2 4','빅데이터 처리 기술 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010705_19v2','2001010705_19v2 1','빅데이터 성과기준 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010705_19v2','2001010705_19v2 2','빅데이터 성과측정 방법 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010705_19v2','2001010705_19v2 3','빅데이터 성과평가 실행 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010705_19v2','2001010705_19v2 4','빅데이터 성과평가 피드백 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010706_19v2','2001010706_19v2 1','빅데이터 분석 결과 활용 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010706_19v2','2001010706_19v2 2','빅데이터 비즈니스 모델 활용 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010706_19v2','2001010706_19v2 3','빅데이터 시장 활용 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010706_19v2','2001010706_19v2 4','빅데이터 상품화 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010707_19v2','2001010707_19v2 1','빅데이터 품질관리 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010707_19v2','2001010707_19v2 2','빅데이터 보안관리 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010707_19v2','2001010707_19v2 3','빅데이터 조직 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010707_19v2','2001010707_19v2 4','빅데이터 운영관리 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010801_19v2','2001010801_19v2 1','핀테크 생태계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010801_19v2','2001010801_19v2 2','핀테크 제도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010801_19v2','2001010801_19v2 3','핀테크 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010802_19v2','2001010802_19v2 1','핀테크 데이터 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010802_19v2','2001010802_19v2 2','핀테크 데이터 분류하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010802_19v2','2001010802_19v2 3','핀테크 데이터 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010802_19v2','2001010802_19v2 4','핀테크 데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010803_19v2','2001010803_19v2 1','핀테크 기술 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010803_19v2','2001010803_19v2 2','핀테크 기술 분류하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010803_19v2','2001010803_19v2 3','핀테크 기술 체계도 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010803_19v2','2001010803_19v2 4','핀테크 핵심 기술 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 1','핀테크 서비스 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 2','핀테크 서비스 시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 3','핀테크 서비스 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 4','핀테크 서비스 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 5','핀테크 서비스 UX 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010804_19v2','2001010804_19v2 6','핀테크 서비스 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010805_19v2','2001010805_19v2 1','핀테크 플랫폼 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010805_19v2','2001010805_19v2 2','핀테크 플랫폼 시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010805_19v2','2001010805_19v2 3','핀테크 플랫폼 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010805_19v2','2001010805_19v2 4','핀테크 플랫폼 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010806_19v2','2001010806_19v2 1','핀테크 보안 환경 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010806_19v2','2001010806_19v2 2','핀테크 보안 위험 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010806_19v2','2001010806_19v2 3','핀테크 보안 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010806_19v2','2001010806_19v2 4','핀테크 보안 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010807_19v2','2001010807_19v2 1','핀테크 시스템 개발 요구사항 반영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010807_19v2','2001010807_19v2 2','핀테크 시스템 개발 아키텍처 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010807_19v2','2001010807_19v2 3','핀테크 시스템 개발 타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010807_19v2','2001010807_19v2 4','핀테크 시스템 개발 추진 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010808_19v2','2001010808_19v2 1','핀테크 마케팅 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010808_19v2','2001010808_19v2 2','핀테크 마케팅 채널 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010808_19v2','2001010808_19v2 3','핀테크 마케팅 운영 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010808_19v2','2001010808_19v2 4','핀테크 마케팅 성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010809_19v2','2001010809_19v2 1','핀테크 추진 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010809_19v2','2001010809_19v2 2','핀테크 위험 관리 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010809_19v2','2001010809_19v2 3','핀테크 경제성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001010809_19v2','2001010809_19v2 4','핀테크 실행 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020101_19v4','2001020101_19v4 1','SW아키텍처 일정관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020101_19v4','2001020101_19v4 2','SW아키텍처 범위관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020101_19v4','2001020101_19v4 3','SW아키텍처 이해관계자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020101_19v4','2001020101_19v4 4','SW아키텍처 위험관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020102_19v5','2001020102_19v5 1','SW아키텍처 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020102_19v5','2001020102_19v5 2','SW아키텍처 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020102_19v5','2001020102_19v5 3','SW아키텍처 제약사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020104_19v5','2001020104_19v5 1','SW아키텍처 요소기술 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020104_19v5','2001020104_19v5 2','SW아키텍처 요소기술 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020104_19v5','2001020104_19v5 3','SW아키텍처 요소기술 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020104_19v5','2001020104_19v5 4','SW아키텍처 요소기술 커스터마이징하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020106_19v4','2001020106_19v4 1','SW아키텍처 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020106_19v4','2001020106_19v4 2','SW구현환경 제공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020106_19v4','2001020106_19v4 3','SW아키텍처 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020107_19v4','2001020107_19v4 1','SW아키텍처 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020107_19v4','2001020107_19v4 2','시스템 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020107_19v4','2001020107_19v4 3','보안성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020108_19v4','2001020108_19v4 1','SW아키텍처 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020108_19v4','2001020108_19v4 2','SW아키텍처 활용 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020108_19v4','2001020108_19v4 3','SW아키텍처 준수 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020109_19v4','2001020109_19v4 1','SW아키텍처 변경사항 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020109_19v4','2001020109_19v4 2','SW아키텍처 변경방법 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020109_19v4','2001020109_19v4 3','SW아키텍처 변경 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020109_19v4','2001020109_19v4 4','SW아키텍처 자산화 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020110_19v5','2001020110_19v5 1','현행 SW아키텍처 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020110_19v5','2001020110_19v5 2','SW아키텍처 결정요인 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020110_19v5','2001020110_19v5 3','SW아키텍처 기능 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020111_19v5','2001020111_19v5 1','SW아키텍처 품질속성 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020111_19v5','2001020111_19v5 2','상위수준 후보 SW아키텍처 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020112_19v5','2001020112_19v5 1','SW아키텍처 설계 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020112_19v5','2001020112_19v5 2','적용 아키텍처 접근법 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020112_19v5','2001020112_19v5 3','SW아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020112_19v5','2001020112_19v5 4','SW아키텍처 설계 적정성 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020113_19v5','2001020113_19v5 1','SW아키텍처 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020113_19v5','2001020113_19v5 2','SW아키텍처 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020201_19v4','2001020201_19v4 1','현행 시스템 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020201_19v4','2001020201_19v4 2','요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020201_19v4','2001020201_19v4 3','분석모델 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020205_19v5','2001020205_19v5 1','논리 데이터저장소 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020205_19v5','2001020205_19v5 2','물리 데이터저장소 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020205_19v5','2001020205_19v5 3','데이터 조작 프로시저 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020205_19v5','2001020205_19v5 4','데이터 조작 프로시저 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020206_19v5','2001020206_19v5 1','연계 데이터 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020206_19v5','2001020206_19v5 2','연계 메커니즘 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020206_19v5','2001020206_19v5 3','내외부 연계 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020208_19v4','2001020208_19v4 1','정보시스템 사용자 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020208_19v4','2001020208_19v4 2','정보시스템 이행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020208_19v4','2001020208_19v4 3','정보시스템 안정화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020209_19v5','2001020209_19v5 1','제품소프트웨어 패키징하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020209_19v5','2001020209_19v5 2','제품소프트웨어 매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020209_19v5','2001020209_19v5 3','제품소프트웨어 버전관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020211_19v5','2001020211_19v5 1','개발환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020211_19v5','2001020211_19v5 2','공통 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020211_19v5','2001020211_19v5 3','서버 프로그램 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020211_19v5','2001020211_19v5 4','배치 프로그램 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020212_19v5','2001020212_19v5 1','인터페이스 설계서 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020212_19v5','2001020212_19v5 2','인터페이스 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020212_19v5','2001020212_19v5 3','인터페이스 구현 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020214_19v5','2001020214_19v5 1','애플리케이션 배포 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020214_19v5','2001020214_19v5 2','애플리케이션 소스 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020214_19v5','2001020214_19v5 3','애플리케이션 빌드하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020214_19v5','2001020214_19v5 4','애플리케이션 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020217_19v5','2001020217_19v5 1','리팩토링 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020217_19v5','2001020217_19v5 2','소스 코드 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020217_19v5','2001020217_19v5 3','리팩토링 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020218_19v5','2001020218_19v5 1','인터페이스 요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020218_19v5','2001020218_19v5 2','인터페이스 대상 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020218_19v5','2001020218_19v5 3','인터페이스 상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020219_19v5','2001020219_19v5 1','요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020219_19v5','2001020219_19v5 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020219_19v5','2001020219_19v5 3','요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020219_19v5','2001020219_19v5 4','요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020220_19v2','2001020220_19v2 1','기능 모델 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020220_19v2','2001020220_19v2 2','기능 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020221_19v5','2001020221_19v5 1','공통 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020221_19v5','2001020221_19v5 2','타 시스템 연동설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020222_19v5','2001020222_19v5 1','정적 분석모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020222_19v5','2001020222_19v5 2','정적모델 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020223_19v5','2001020223_19v5 1','동적 분석모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020223_19v5','2001020223_19v5 2','동적모델 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020224_19v5','2001020224_19v5 1','UI 요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020224_19v5','2001020224_19v5 2','UI 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020225_19v5','2001020225_19v5 1','UI 설계 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020225_19v5','2001020225_19v5 2','UI 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020226_19v5','2001020226_19v5 1','애플리케이션  테스트케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020226_19v5','2001020226_19v5 2','애플리케이션  통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020226_19v5','2001020226_19v5 3','애플리케이션 성능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020227_19v5','2001020227_19v5 1','애플리케이션 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020227_19v5','2001020227_19v5 2','애플리케이션 결함 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020228_19v5','2001020228_19v5 1','CASE 도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020228_19v5','2001020228_19v5 2','품질요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020229_19v5','2001020229_19v5 1','소프트웨어개발 방법론 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020229_19v5','2001020229_19v5 2','소프트웨어개발 방법론 테일러링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020230_19v4','2001020230_19v4 1','언어특성 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020230_19v4','2001020230_19v4 2','라이브러리 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020231_19v4','2001020231_19v4 1','구조적 프로그래밍 언어 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020231_19v4','2001020231_19v4 2','객체지향 프로그래밍 언어 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020231_19v4','2001020231_19v4 3','스크립트 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020232_19v4','2001020232_19v4 1','네트워크 기초 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020232_19v4','2001020232_19v4 2','미들웨어 기초 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020232_19v4','2001020232_19v4 3','데이터베이스 기초 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020233_19v4','2001020233_19v4 1','운영체제 기초 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020233_19v4','2001020233_19v4 2','기본 개발환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020234_19v1','2001020234_19v1 1','소스코드 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020234_19v1','2001020234_19v1 2','개발 환경 백업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020234_19v1','2001020234_19v1 3','개발 환경 복원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020301_19v3','2001020301_19v3 1','하드웨어 자료 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020301_19v3','2001020301_19v3 2','하드웨어 기능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020301_19v3','2001020301_19v3 3','시험요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020301_19v3','2001020301_19v3 4','하드웨어 분석 결과 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 1','임베디드 시스템 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 2','임베디드 시스템 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 3','시스템 테스트 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 4','임베디드 시스템 버그 수정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020309_19v5','2001020309_19v5 5','임베디드 시스템 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020310_19v3','2001020310_19v3 1','요구 문서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020310_19v3','2001020310_19v3 2','기술문서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020310_19v3','2001020310_19v3 3','사용자 매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020310_19v3','2001020310_19v3 4','사용자 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020311_19v4','2001020311_19v4 1','운영체제 부트 과정 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020311_19v4','2001020311_19v4 2','펌웨어 요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020311_19v4','2001020311_19v4 3','펌웨어 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020312_19v5','2001020312_19v5 1','하드웨어 테스트 SW 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020312_19v5','2001020312_19v5 2','펌웨어 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020312_19v5','2001020312_19v5 3','단위 SW 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020313_19v5','2001020313_19v5 1','펌웨어 설계 문서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020313_19v5','2001020313_19v5 2','하드웨어 데이터시트 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020314_19v6','2001020314_19v6 1','하드웨어 테스트 SW 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020314_19v6','2001020314_19v6 2','부트로더 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020314_19v6','2001020314_19v6 3','소스 코드 인스펙션하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020315_19v6','2001020315_19v6 1','커널 소스 분석 환경 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020315_19v6','2001020315_19v6 2','커널 소스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020316_19v5','2001020316_19v5 1','커널 이미지 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020316_19v5','2001020316_19v5 2','부팅 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020317_19v4','2001020317_19v4 1','디바이스 드라이버 설계 전 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020317_19v4','2001020317_19v4 2','디바이스 드라이버 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020318_19v5','2001020318_19v5 1','API 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020318_19v5','2001020318_19v5 2','디바이스 드라이버 설계 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020319_19v5','2001020319_19v5 1','디바이스 드라이버 개발 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020319_19v5','2001020319_19v5 2','디바이스 드라이버 개발 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020320_19v6','2001020320_19v6 1','디바이스 드라이버 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020320_19v6','2001020320_19v6 2','디바이스 드라이버 소스 코드 인스펙션하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020321_19v5','2001020321_19v5 1','애플리케이션 요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020321_19v5','2001020321_19v5 2','애플리케이션 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020322_19v6','2001020322_19v6 1','애플리케이션 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020322_19v6','2001020322_19v6 2','모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020322_19v6','2001020322_19v6 3','UML 다이어그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020323_19v5','2001020323_19v5 1','기술명세 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020323_19v5','2001020323_19v5 2','애플리케이션 개발 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020324_19v6','2001020324_19v6 1','애플리케이션 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020324_19v6','2001020324_19v6 2','애플리케이션 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020325_19v2','2001020325_19v2 1','오픈 플랫폼 개발 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020325_19v2','2001020325_19v2 2','오픈 플랫폼 디바이스 제어하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020325_19v2','2001020325_19v2 3','오픈 플랫폼 애플리케이션 제어하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020326_19v2','2001020326_19v2 1','임베디드 SW 요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020326_19v2','2001020326_19v2 2','임베디드 SW 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020326_19v2','2001020326_19v2 3','임베디드 SW 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020327_19v1','2001020327_19v1 1','임베디드 SW 운영환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020327_19v1','2001020327_19v1 2','임베디드 SW 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020327_19v1','2001020327_19v1 3','임베디드 SW 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020328_19v1','2001020328_19v1 1','임베디드 SW 모듈화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020328_19v1','2001020328_19v1 2','데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020328_19v1','2001020328_19v1 3','인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020401_19v4','2001020401_19v4 1','데이터베이스 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020401_19v4','2001020401_19v4 2','데이터베이스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020401_19v4','2001020401_19v4 3','데이터베이스 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020401_19v4','2001020401_19v4 4','데이터베이스 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020402_19v4','2001020402_19v4 1','주제영역 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020402_19v4','2001020402_19v4 2','핵심개체 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020402_19v4','2001020402_19v4 3','핵심관계 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020402_19v4','2001020402_19v4 4','개념 E-R 다이어그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020403_19v4','2001020403_19v4 1','개체 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020403_19v4','2001020403_19v4 2','관계 상세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020403_19v4','2001020403_19v4 3','논리 E-R 다이어그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020403_19v4','2001020403_19v4 4','데이터베이스 정규화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020404_19v4','2001020404_19v4 1','물리요소 조사 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020404_19v4','2001020404_19v4 2','데이터베이스 물리속성 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020404_19v4','2001020404_19v4 3','물리 E-R 다이어그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020404_19v4','2001020404_19v4 4','데이터베이스 반정규화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020405_19v4','2001020405_19v4 1','DBMS 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020405_19v4','2001020405_19v4 2','데이터베이스 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020405_19v4','2001020405_19v4 3','데이터베이스 오브젝트 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020408_19v4','2001020408_19v4 1','성능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020408_19v4','2001020408_19v4 2','성능개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020408_19v4','2001020408_19v4 3','성능개선결과 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020411_19v4','2001020411_19v4 1','데이터 전환계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020411_19v4','2001020411_19v4 2','데이터 전환 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020412_19v4','2001020412_19v4 1','데이터 전환 프로그램 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020412_19v4','2001020412_19v4 2','데이터 전환 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020412_19v4','2001020412_19v4 3','데이터 정합성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020412_19v4','2001020412_19v4 4','데이터 정제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020413_19v4','2001020413_19v4 1','기본 SQL 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020413_19v4','2001020413_19v4 2','고급 SQL 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020414_19v4','2001020414_19v4 1','절차형 SQL 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020414_19v4','2001020414_19v4 2','응용 SQL 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020415_19v1','2001020415_19v1 1','데이터 조회하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020415_19v1','2001020415_19v1 2','데이터 수정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020501_19v4','2001020501_19v4 1','기술트렌드 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020501_19v4','2001020501_19v4 2','거시시장환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020501_19v4','2001020501_19v4 3','경쟁환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020503_19v4','2001020503_19v4 1','네트워크 토폴로지 연결성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020503_19v4','2001020503_19v4 2','네트워크 토폴로지 장단점 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020503_19v4','2001020503_19v4 3','네트워크 토폴로지 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020503_19v4','2001020503_19v4 4','네트워크 토폴로지 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020504_19v4','2001020504_19v4 1','네트워크 자원관리 방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020504_19v4','2001020504_19v4 2','표준화 네트워크 자원관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020505_19v4','2001020505_19v4 1','네트워크 QoS 제공전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020505_19v4','2001020505_19v4 2','네트워크 QoS 제공방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020506_19v4','2001020506_19v4 1','소프트웨어 계층별 모델링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020506_19v4','2001020506_19v4 2','시스템 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020506_19v4','2001020506_19v4 3','플랫폼 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020507_19v4','2001020507_19v4 1','소프트웨어 개발방법론 커스터마이징하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020507_19v4','2001020507_19v4 2','세부작업절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020507_19v4','2001020507_19v4 3','절차별 기법 활용 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020507_19v4','2001020507_19v4 4','품질목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020508_19v3','2001020508_19v3 1','개발환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020508_19v3','2001020508_19v3 2','기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020510_19v4','2001020510_19v4 1','프로젝트 단계별 일정 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020510_19v4','2001020510_19v4 2','프로젝트 단계별 게이트 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020510_19v4','2001020510_19v4 3','프로젝트 형상 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020511_19v4','2001020511_19v4 1','프로토콜 명세 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020511_19v4','2001020511_19v4 2','프로토콜 동작 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020512_19v4','2001020512_19v4 1','프로토콜 명세서 기반 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020512_19v4','2001020512_19v4 2','신규 프로토콜 표준화 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020513_19v4','2001020513_19v4 1','네트워크 자원 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020513_19v4','2001020513_19v4 2','네트워크 자원 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020514_19v4','2001020514_19v4 1','서비스별 네트워크 QoS 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020514_19v4','2001020514_19v4 2','네트워크 QoS 제공 수준 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020515_19v3','2001020515_19v3 1','프로그램 디버깅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020515_19v3','2001020515_19v3 2','프로그램 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020516_19v4','2001020516_19v4 1','품질평가 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020516_19v4','2001020516_19v4 2','품질평가 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020517_19v4','2001020517_19v4 1','평가 수행 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020517_19v4','2001020517_19v4 2','평가 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020518_19v4','2001020518_19v4 1','네트워크 패킷 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020518_19v4','2001020518_19v4 2','네트워크 패킷 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020601_19v5','2001020601_19v5 1','보안 범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020601_19v5','2001020601_19v5 2','보안 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020601_19v5','2001020601_19v5 3','보안 구축 계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020603_19v5','2001020603_19v5 1','보안요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020603_19v5','2001020603_19v5 2','보안요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020603_19v5','2001020603_19v5 3','보안요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020604_19v5','2001020604_19v5 1','정보보호정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020604_19v5','2001020604_19v5 2','정보보호조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020604_19v5','2001020604_19v5 3','인적보안대책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020605_19v4','2001020605_19v4 1','물리적 보호구역 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020605_19v4','2001020605_19v4 2','시스템 보호하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020605_19v4','2001020605_19v4 3','사무실 보안 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 1','보안인증 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 2','보안인증 신청하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 3','보안인증 심사받기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 4','보안인증 부적합사항 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020610_19v5','2001020610_19v5 5','보안인증 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020611_19v5','2001020611_19v5 1','SW개발 보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020611_19v5','2001020611_19v5 2','SW개발 보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020612_19v5','2001020612_19v5 1','DB보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020612_19v5','2001020612_19v5 2','DB보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020613_19v5','2001020613_19v5 1','시스템 보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020613_19v5','2001020613_19v5 2','시스템 보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020614_19v5','2001020614_19v5 1','NW보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020614_19v5','2001020614_19v5 2','NW보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020701_19v3','2001020701_19v3 1','트렌드 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020701_19v3','2001020701_19v3 2','경쟁 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020701_19v3','2001020701_19v3 3','내부역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020702_19v3','2001020702_19v3 1','UI/UX 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020702_19v3','2001020702_19v3 2','UI/UX 작업분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020702_19v3','2001020702_19v3 3','리소스 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020703_19v3','2001020703_19v3 1','사용자 리서치 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020703_19v3','2001020703_19v3 2','리서치 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020703_19v3','2001020703_19v3 3','리서치 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020704_19v3','2001020704_19v3 1','UI/UX 콘셉트 아이디어 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020704_19v3','2001020704_19v3 2','패스트 프로토타입 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020704_19v3','2001020704_19v3 3','패스트 프로토타이핑 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020705_19v2','2001020705_19v2 1','UI/UX 콘셉트 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020705_19v2','2001020705_19v2 2','기능(FEATURE) 리스트 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020705_19v2','2001020705_19v2 3','콘텐츠 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020706_19v2','2001020706_19v2 1','정보 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020706_19v2','2001020706_19v2 2','와이어프레임 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020706_19v2','2001020706_19v2 3','태스크 플로우 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020707_19v3','2001020707_19v3 1','GUI 디자인 콘셉트 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020707_19v3','2001020707_19v3 2','GUI 디자인 요소 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020708_19v3','2001020708_19v3 1','UI 설계 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020708_19v3','2001020708_19v3 2','UI 구현 표준 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020709_19v3','2001020709_19v3 1','사용성 테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020709_19v3','2001020709_19v3 2','사용성 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020709_19v3','2001020709_19v3 3','테스트 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020710_19v2','2001020710_19v2 1','UI/UX 가이드 기준 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020710_19v2','2001020710_19v2 2','UI/UX 가이드 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020710_19v2','2001020710_19v2 3','UI/UX 가이드 공유하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020711_19v3','2001020711_19v3 1','GUI 템플릿 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020711_19v3','2001020711_19v3 2','인터랙션 요소 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020712_19v3','2001020712_19v3 1','저작도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020712_19v3','2001020712_19v3 2','UI 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 1','시스템SW 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 2','시스템SW 선도모델 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 3','자료 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 4','요구 기능 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020801_19v3','2001020801_19v3 5','요구 비기능 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020802_19v3','2001020802_19v3 1','SW 모듈화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020802_19v3','2001020802_19v3 2','데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020802_19v3','2001020802_19v3 3','외부 인터페이스 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020802_19v3','2001020802_19v3 4','시스템 인터페이스 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020803_19v3','2001020803_19v3 1','단위 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020803_19v3','2001020803_19v3 2','환경 변수 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020803_19v3','2001020803_19v3 3','내부 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020803_19v3','2001020803_19v3 4','외부 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020805_19v3','2001020805_19v3 1','모듈 통합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020805_19v3','2001020805_19v3 2','통합 실행 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020805_19v3','2001020805_19v3 3','설치 패키지 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020806_19v3','2001020806_19v3 1','시스템SW 테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020806_19v3','2001020806_19v3 2','시스템SW 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020806_19v3','2001020806_19v3 3','시스템SW 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020806_19v3','2001020806_19v3 4','시스템SW 품질 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020807_19v3','2001020807_19v3 1','시스템SW 매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020807_19v3','2001020807_19v3 2','FAQ 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020807_19v3','2001020807_19v3 3','백서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020807_19v3','2001020807_19v3 4','교육교재 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020808_19v2','2001020808_19v2 1','시스템SW 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020808_19v2','2001020808_19v2 2','시범 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020809_19v3','2001020809_19v3 1','단위 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020809_19v3','2001020809_19v3 2','환경 변수 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020810_19v3','2001020810_19v3 1','내부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020810_19v3','2001020810_19v3 2','외부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020811_19v2','2001020811_19v2 1','환경 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020811_19v2','2001020811_19v2 2','사용자 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020901_19v2','2001020901_19v2 1','빅데이터 플랫폼 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020901_19v2','2001020901_19v2 2','빅데이터 플랫폼 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020901_19v2','2001020901_19v2 3','빅데이터 플랫폼 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020902_19v2','2001020902_19v2 1','빅데이터 플랫폼 인프라구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020902_19v2','2001020902_19v2 2','빅데이터 입출력구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020903_19v2','2001020903_19v2 1','빅데이터 수집시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020903_19v2','2001020903_19v2 2','빅데이터 수집시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020903_19v2','2001020903_19v2 3','빅데이터 수집·변환 모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020903_19v2','2001020903_19v2 4','수집 데이터 검증모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020904_19v2','2001020904_19v2 1','빅데이터 저장모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020904_19v2','2001020904_19v2 2','빅데이터 저장관리시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020904_19v2','2001020904_19v2 3','빅데이터 적재모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 1','빅데이터 처리시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 2','빅데이터 처리시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 3','분산처리 수행모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 4','실시간 수행모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020905_19v2','2001020905_19v2 5','이벤트처리 수행모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020906_19v2','2001020906_19v2 1','빅데이터 분석시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020906_19v2','2001020906_19v2 2','빅데이터 분석시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020906_19v2','2001020906_19v2 3','빅데이터 분석모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020907_19v2','2001020907_19v2 1','빅데이터 품질관리시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020907_19v2','2001020907_19v2 2','빅데이터 품질관리시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020907_19v2','2001020907_19v2 3','빅데이터 품질관리모듈 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020908_19v2','2001020908_19v2 1','빅데이터 플랫폼 테스트 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020908_19v2','2001020908_19v2 2','빅데이터 플랫폼 기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001020908_19v2','2001020908_19v2 3','빅데이터 플랫폼 비기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021001_19v2','2001021001_19v2 1','핀테크 비즈니스 모델 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021001_19v2','2001021001_19v2 2','핀테크 선도기술 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021001_19v2','2001021001_19v2 3','핀테크 기능 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021001_19v2','2001021001_19v2 4','핀테크 비기능 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021002_19v2','2001021002_19v2 1','핀테크 인프라 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021002_19v2','2001021002_19v2 2','핀테크 인프라 영향평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021003_19v2','2001021003_19v2 1','핀테크 인터페이스 대상 추출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021003_19v2','2001021003_19v2 2','핀테크 내부 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021003_19v2','2001021003_19v2 3','핀테크 외부 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021004_19v2','2001021004_19v2 1','핀테크 핵심기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021004_19v2','2001021004_19v2 2','핀테크 응용기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021004_19v2','2001021004_19v2 3','핀테크 부가기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021004_19v2','2001021004_19v2 4','핀테크 이용자 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021005_19v2','2001021005_19v2 1','핀테크 보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021005_19v2','2001021005_19v2 2','핀테크 인증 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021006_19v2','2001021006_19v2 1','핀테크 내부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021006_19v2','2001021006_19v2 2','핀테크 외부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021007_19v2','2001021007_19v2 1','핀테크 핵심기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021007_19v2','2001021007_19v2 2','핀테크 응용기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021007_19v2','2001021007_19v2 3','핀테크 부가기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021007_19v2','2001021007_19v2 4','핀테크 이용자 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021008_19v2','2001021008_19v2 1','핀테크 보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021008_19v2','2001021008_19v2 2','핀테크 인증 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021009_19v2','2001021009_19v2 1','핀테크 기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021009_19v2','2001021009_19v2 2','핀테크 비기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021101_19v2','2001021101_19v2 1','전사 아키텍처 프레임워크 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021101_19v2','2001021101_19v2 2','전사 아키텍처 참조 모델 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021101_19v2','2001021101_19v2 3','데이터 아키텍처 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021101_19v2','2001021101_19v2 4','데이터 아키텍처 구축 실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021102_19v2','2001021102_19v2 1','데이터 거버넌스 프로세스 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060606_19v2','2001060606_19v2 1','생체인식 API 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060606_19v2','2001060606_19v2 2','생체인식 API 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060607_19v2','2001060607_19v2 1','생체인식 성능평가 환경 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060607_19v2','2001060607_19v2 2','생체인식 성능평가용 데이터베이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060607_19v2','2001060607_19v2 3','생체인식 성능평가 결과 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060607_19v2','2001060607_19v2 4','생체인식 성능평가 결과 피드백하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060608_19v2','2001060608_19v2 1','생체인식 테스트 환경 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060608_19v2','2001060608_19v2 2','생체인식 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060701_19v1','2001060701_19v1 1','개인정보보호 관련 법령·정책 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060701_19v1','2001060701_19v1 2','개인정보보호 관련 법령·정책 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060701_19v1','2001060701_19v1 3','개인정보보호 분석결과 기록 유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060702_19v1','2001060702_19v1 1','개인정보보호 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060702_19v1','2001060702_19v1 2','개인정보보호 범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060702_19v1','2001060702_19v1 3','개인정보보호 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060702_19v1','2001060702_19v1 4','개인정보보호 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060703_19v1','2001060703_19v1 1','개인정보 영향평가 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060703_19v1','2001060703_19v1 2','개인정보 영향평가 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060703_19v1','2001060703_19v1 3','개인정보 영향평가 개선조치 이행점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060704_19v1','2001060704_19v1 1','개인정보보호 위험관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060704_19v1','2001060704_19v1 2','개인정보보호 위험 분석·평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060704_19v1','2001060704_19v1 3','개인정보보호 대책 수립·이행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060705_19v1','2001060705_19v1 1','개인정보 처리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060705_19v1','2001060705_19v1 2','개인정보 사고 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060705_19v1','2001060705_19v1 3','개인정보보호 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060706_19v1','2001060706_19v1 1','개인정보보호 활동 모니터링 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060706_19v1','2001060706_19v1 2','내부 정보보호 활동 모니터링 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060706_19v1','2001060706_19v1 3','개인정보보호 모니터링 결과 사전 예방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060706_19v1','2001060706_19v1 4','개인정보 침해사고 사후 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060707_19v1','2001060707_19v1 1','개인정보보호 관리체계 인증 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060707_19v1','2001060707_19v1 2','개인정보보호 관리체계 인증 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060707_19v1','2001060707_19v1 3','개인정보보호 관리체계 인증 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060708_19v1','2001060708_19v1 1','개인정보보호 감사 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060708_19v1','2001060708_19v1 2','개인정보보호 감사 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060708_19v1','2001060708_19v1 3','개인정보보호 감사 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060801_20v1','2001060801_20v1 1','사고 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060801_20v1','2001060801_20v1 2','사전 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060801_20v1','2001060801_20v1 3','계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060802_20v1','2001060802_20v1 1','현장 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060802_20v1','2001060802_20v1 2','현장 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060802_20v1','2001060802_20v1 3','현장증거 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060802_20v1','2001060802_20v1 4','현장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060803_20v1','2001060803_20v1 1','증거 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060803_20v1','2001060803_20v1 2','증거 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060803_20v1','2001060803_20v1 3','동일성 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060804_20v1','2001060804_20v1 1','증거물 인쇄하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060804_20v1','2001060804_20v1 2','증거 보관하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060804_20v1','2001060804_20v1 3','보관소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 1','증거물 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 2','물리적 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 3','증거사본 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 4','파일시스템 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060805_20v1','2001060805_20v1 5','데이터 추출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 1','운영체제/애플리케이션 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 2','네트워크 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 3','코드 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 4','데이터베이스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060806_20v1','2001060806_20v1 5','안티포렌식 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060807_20v1','2001060807_20v1 1','보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060807_20v1','2001060807_20v1 2','보고서 제출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060807_20v1','2001060807_20v1 3','증언하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 1','운영목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 2','관계 법령 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 3','내부규정과 절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 4','운영정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060901_21v1','2001060901_21v1 5','유지보수 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 1','위험요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 2','시스템 상호연계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 3','운영 및 유지관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 4','운영조직 편성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060902_21v1','2001060902_21v1 5','장애대응 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060903_21v1','2001060903_21v1 1','영상정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060903_21v1','2001060903_21v1 2','영상정보 저장하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060903_21v1','2001060903_21v1 3','영상정보 반출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060903_21v1','2001060903_21v1 4','영상정보 파기하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060904_21v1','2001060904_21v1 1','출입통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060904_21v1','2001060904_21v1 2','시스템 접근통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060905_21v1','2001060905_21v1 1','개인영상정보 수집·저장하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060905_21v1','2001060905_21v1 2','개인영상정보 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060905_21v1','2001060905_21v1 3','개인영상정보에 대한 안정성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060905_21v1','2001060905_21v1 4','개인영상정보 열람·제공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060906_21v1','2001060906_21v1 1','관제시스템 자원관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060906_21v1','2001060906_21v1 2','관제시스템 상태 모니터링 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060906_21v1','2001060906_21v1 3','장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060907_21v1','2001060907_21v1 1','카메라 작동 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060907_21v1','2001060907_21v1 2','이상징후 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060907_21v1','2001060907_21v1 3','이상징후 채증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060907_21v1','2001060907_21v1 4','상황보고 후 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060908_21v1','2001060908_21v1 1','보안사고 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060908_21v1','2001060908_21v1 2','보안사고 원인분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060908_21v1','2001060908_21v1 3','보안사고 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060908_21v1','2001060908_21v1 4','영상정보시스템 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060909_21v1','2001060909_21v1 1','영상정보 보안감사 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060909_21v1','2001060909_21v1 2','영상정보 보안감사 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060909_21v1','2001060909_21v1 3','영상정보 보안감사 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061001_22v1','2001061001_22v1 1','가명?익명 법제도 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061001_22v1','2001061001_22v1 2','가명?익명처리 관련 법제도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061001_22v1','2001061001_22v1 3','가명?익명처리 관련 법제도 분석결과 기록유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 3','네트워크 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 4','DR(Disaster Recovery) 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021402_21v1','2001021402_21v1 5','클라우드 솔루션 구조 설계 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021403_21v1','2001021403_21v1 1','클라우드 솔루션 보안 설계 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021403_21v1','2001021403_21v1 2','클라우드 솔루션 보안 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021404_21v1','2001021404_21v1 1','클라우드 서비스 카탈로그 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021404_21v1','2001021404_21v1 2','클라우드 서비스 컴포넌트 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021404_21v1','2001021404_21v1 3','인터페이스 설계기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021405_21v1','2001021405_21v1 1','클라우드 서비스 비용 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021405_21v1','2001021405_21v1 2','클라우드 서비스 비용 추적 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021405_21v1','2001021405_21v1 3','클라우드 서비스 비용 관리 도구 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021406_21v1','2001021406_21v1 1','데이터 전환 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021406_21v1','2001021406_21v1 2','애플리케이션 전환 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021407_21v1','2001021407_21v1 1','클라우드 솔루션 배포 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021407_21v1','2001021407_21v1 2','클라우드 솔루션 배포 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021407_21v1','2001021407_21v1 3','클라우드 솔루션 배포 테스트 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021408_21v1','2001021408_21v1 1','클라우드 솔루션 운영 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021408_21v1','2001021408_21v1 2','클라우드 솔루션 장애처리 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021408_21v1','2001021408_21v1 3','클라우드 솔루션 모니터링 환경 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021501_21v1','2001021501_21v1 1','클라우드 인프라스트럭쳐 서비스 품질·성능 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021501_21v1','2001021501_21v1 2','클라우드 인프라스트럭쳐 서비스 운영 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021501_21v1','2001021501_21v1 3','클라우드 인프라스트럭쳐 서비스 수준 협약서 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021502_21v1','2001021502_21v1 1','클라우드 인프라스트럭쳐 서비스 기능 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021502_21v1','2001021502_21v1 2','클라우드 인프라스트럭쳐 서비스 비기능 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021502_21v1','2001021502_21v1 3','클라우드 인프라스트럭쳐 서비스 아키텍처 요구사항 명세서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021502_21v1','2001021502_21v1 4','클라우드 인프라스트럭쳐 서비스 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021503_21v1','2001021503_21v1 1','클라우드 서버 가상화 소프트웨어 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021503_21v1','2001021503_21v1 2','클라우드 서버 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021503_21v1','2001021503_21v1 3','클라우드 서버 스펙 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021504_21v1','2001021504_21v1 1','클라우드 스토리지 가상화 소프트웨어 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021504_21v1','2001021504_21v1 2','클라우드 스토리지 구성방식 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021504_21v1','2001021504_21v1 3','클라우드 스토리지 스펙 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021505_21v1','2001021505_21v1 1','클라우드 네트워크 용량 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021505_21v1','2001021505_21v1 2','클라우드 네트워크 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021505_21v1','2001021505_21v1 3','클라우드 네트워크 보안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021506_21v1','2001021506_21v1 1','클라우드 서버 서비스 소프트웨어 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021506_21v1','2001021506_21v1 2','클라우드 서버 서비스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021506_21v1','2001021506_21v1 3','클라우드 서버 서비스 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021507_21v1','2001021507_21v1 1','클라우드 스토리지 서비스 소프트웨어 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021507_21v1','2001021507_21v1 2','클라우드 스토리지 서비스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021507_21v1','2001021507_21v1 3','클라우드 스토리지 서비스 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021508_21v1','2001021508_21v1 1','클라우드 네트워크 서비스 소프트웨어 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021508_21v1','2001021508_21v1 2','클라우드 네트워크 서비스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021508_21v1','2001021508_21v1 3','클라우드 네트워크 서비스 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021509_21v1','2001021509_21v1 1','클라우드 인프라스트럭쳐 서비스 테스트 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021509_21v1','2001021509_21v1 2','클라우드 인프라스트럭쳐 서비스 테스트케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021509_21v1','2001021509_21v1 3','클라우드 인프라스트럭쳐 서비스 품질 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021509_21v1','2001021509_21v1 4','클라우드 인프라스트럭쳐 서비스 테스트 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021510_21v1','2001021510_21v1 1','클라우드 인프라스트럭쳐 서비스 배포 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021510_21v1','2001021510_21v1 2','클라우드 인프라스트럭쳐 서비스 배포 가이드 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021510_21v1','2001021510_21v1 3','클라우드 인프라스트럭쳐 서비스 배포 작업 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021510_21v1','2001021510_21v1 4','클라우드 인프라스트럭쳐 서비스 릴리즈하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021601_22v1','2001021601_22v1 1','PaaS 품질·성능 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021601_22v1','2001021601_22v1 2','PaaS 운영 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021601_22v1','2001021601_22v1 3','PaaS 서비스 수준 협약서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021602_22v1','2001021602_22v1 1','PaaS 기능 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021602_22v1','2001021602_22v1 2','PaaS 비기능 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021602_22v1','2001021602_22v1 3','PaaS 아키텍처 요구사항 명세서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021602_22v1','2001021602_22v1 4','PaaS 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021603_22v1','2001021603_22v1 1','PaaS 프로비저닝 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021603_22v1','2001021603_22v1 2','PaaS 기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021603_22v1','2001021603_22v1 3','외부시스템 연동 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021604_22v1','2001021604_22v1 1','PaaS 사용자 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021604_22v1','2001021604_22v1 2','PaaS 관리자 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021605_22v1','2001021605_22v1 1','PaaS 프로비저닝 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021605_22v1','2001021605_22v1 2','PaaS 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021605_22v1','2001021605_22v1 3','외부시스템 연동 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021606_22v1','2001021606_22v1 1','PaaS 사용자 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021606_22v1','2001021606_22v1 2','PaaS 관리자 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021607_22v1','2001021607_22v1 1','PaaS 테스트 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021607_22v1','2001021607_22v1 2','PaaS 테스트케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021607_22v1','2001021607_22v1 3','PaaS 품질·성능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021607_22v1','2001021607_22v1 4','PaaS 테스트 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021608_22v1','2001021608_22v1 1','PaaS 배포 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021608_22v1','2001021608_22v1 2','PaaS 배포 가이드 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021608_22v1','2001021608_22v1 3','PaaS 배포 작업 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021608_22v1','2001021608_22v1 4','PaaS 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021609_22v1','2001021609_22v1 1','PaaS 운영 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021609_22v1','2001021609_22v1 2','PaaS 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021609_22v1','2001021609_22v1 3','PaaS 기능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001021609_22v1','2001021609_22v1 4','PaaS 운영 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 1','운영 목표수립 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 2','운영 개선과제 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 3','예산 비용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 4','인적자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030101_19v3','2001030101_19v3 5','운영품질체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 1','IT시스템 구매 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 2','IT시스템 구매 계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 3','IT시스템 구매 계약이행 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 4','IT시스템 구매 계약 종료하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030102_19v3','2001030102_19v3 5','협력업체 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030103_19v3','2001030103_19v3 1','서비스 수준관리 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030103_19v3','2001030103_19v3 2','서비스 수준 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030103_19v3','2001030103_19v3 3','서비스 수준 계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030103_19v3','2001030103_19v3 4','서비스 수준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030105_19v4','2001030105_19v4 1','애플리케이션 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030105_19v4','2001030105_19v4 2','애플리케이션 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030107_19v4','2001030107_19v4 1','네트워크 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030107_19v4','2001030107_19v4 2','네트워크 재난 장애복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 1','DB 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 2','DB 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 3','DB 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 4','DB 백업 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030108_19v3','2001030108_19v3 5','DB 튜닝 확장하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 1','정보서비스 보안 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 2','관리적 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 3','물리적 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 4','기반 인프라 장비 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 5','기반 시스템 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 6','응용서비스 기술적 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030109_19v3','2001030109_19v3 7','구축 후 보안 운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030111_19v4','2001030111_19v4 1','백업시스템 운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030111_19v4','2001030111_19v4 2','통합 모니터링 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030112_19v4','2001030112_19v4 1','IT서비스 연속성관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030112_19v4','2001030112_19v4 2','재해복구시스템 운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 1','애플리케이션 변경요구 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 2','애플리케이션 변경하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 3','변경 애플리케이션 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 4','애플리케이션 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030113_19v4','2001030113_19v4 5','애플리케이션 형상변경하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030114_19v4','2001030114_19v4 1','단말장치 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030114_19v4','2001030114_19v4 2','단말장치 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030115_19v4','2001030115_19v4 1','IT시스템 서버 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030115_19v4','2001030115_19v4 2','IT시스템 서버 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030116_19v4','2001030116_19v4 1','네트워크 유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030116_19v4','2001030116_19v4 2','네트워크 트래픽 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030116_19v4','2001030116_19v4 3','네트워크 용량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030117_19v4','2001030117_19v4 1','서비스데스크 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030117_19v4','2001030117_19v4 2','서비스데스크 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030118_19v4','2001030118_19v4 1','서비스데스크 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030118_19v4','2001030118_19v4 2','IT시스템 사용자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030119_19v4','2001030119_19v4 1','IT시스템 구성관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030119_19v4','2001030119_19v4 2','IT시스템 변경관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030119_19v4','2001030119_19v4 3','IT시스템 유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030202_19v4','2001030202_19v4 1','IT기술교육 내부환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030202_19v4','2001030202_19v4 2','직무직급별 IT기술교육정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030202_19v4','2001030202_19v4 3','IT기술교육 체계도작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030203_19v4','2001030203_19v4 1','IT기술교육 요구조사계획작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030203_19v4','2001030203_19v4 2','IT기술 필요교육조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030203_19v4','2001030203_19v4 3','IT기술교육 역량진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030203_19v4','2001030203_19v4 4','IT기술교육 요구조사결과분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030204_19v3','2001030204_19v3 1','IT기술교육 장소선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030204_19v3','2001030204_19v3 2','IT기술교육 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030204_19v3','2001030204_19v3 3','IT기술교육 지원인력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030204_19v3','2001030204_19v3 4','IT기술교육 환경사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030205_19v4','2001030205_19v4 1','IT기술교육 교과목표정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030205_19v4','2001030205_19v4 2','IT기술교육 교과내용편성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030205_19v4','2001030205_19v4 3','IT기술교육 교수방식설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030205_19v4','2001030205_19v4 4','IT기술교육 평가방식설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030206_19v4','2001030206_19v4 1','IT기술교육 자료기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030206_19v4','2001030206_19v4 2','IT기술교육 자료설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030206_19v4','2001030206_19v4 3','IT기술교육 자료제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030206_19v4','2001030206_19v4 4','IT기술교육 자료보완하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030207_19v4','2001030207_19v4 1','IT기술교육 교과수요조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030207_19v4','2001030207_19v4 2','IT기술교육 수업계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030207_19v4','2001030207_19v4 3','IT기술교육 운영사전준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030208_19v3','2001030208_19v3 1','IT기술교육 과정운영사전준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030208_19v3','2001030208_19v3 2','IT기술교육 과정운영관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030208_19v3','2001030208_19v3 3','IT기술교육 과정사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030209_19v4','2001030209_19v4 1','IT기술교육 교수자선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030209_19v4','2001030209_19v4 2','IT기술교육 교수자역량관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030209_19v4','2001030209_19v4 3','IT기술교육 교수자사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 1','IT기술교육 성과평가계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 2','IT기술교육 성과측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 3','IT기술교육 성과측정결과분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 4','IT기술교육 효과산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030210_19v3','2001030210_19v3 5','IT기술교육 성과평가보고서작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030211_19v4','2001030211_19v4 1','IT기술교육 목표설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030211_19v4','2001030211_19v4 2','IT기술교육 실행계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030212_19v4','2001030212_19v4 1','IT기술교육 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030212_19v4','2001030212_19v4 2','IT기술교육 트랜드분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030212_19v4','2001030212_19v4 3','IT기술교육 범위도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030212_19v4','2001030212_19v4 4','IT기술교육 방향설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030301_19v3','2001030301_19v3 1','기술지원 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030301_19v3','2001030301_19v3 2','기술지원 카탈로그 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030301_19v3','2001030301_19v3 3','기술지원 조직 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030302_19v3','2001030302_19v3 1','기술지원 대상 인수 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030302_19v3','2001030302_19v3 2','기술지원 대상 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030302_19v3','2001030302_19v3 3','기술지원 대상 서비스 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030303_19v3','2001030303_19v3 1','기술지원 요청 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030303_19v3','2001030303_19v3 2','단순 문의 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030303_19v3','2001030303_19v3 3','기술지원 진행상태 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030304_19v4','2001030304_19v4 1','장애 대응 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030304_19v4','2001030304_19v4 2','고객시스템 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030304_19v4','2001030304_19v4 3','장애 처리 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030305_19v4','2001030305_19v4 1','개선 방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030305_19v4','2001030305_19v4 2','개선 방안 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030305_19v4','2001030305_19v4 3','개선 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030306_19v3','2001030306_19v3 1','점검 체크리스트 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030306_19v3','2001030306_19v3 2','시스템 점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030306_19v3','2001030306_19v3 3','점검 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030307_19v4','2001030307_19v4 1','기술지원 평가 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030307_19v4','2001030307_19v4 2','기술지원 평가 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030307_19v4','2001030307_19v4 3','평가결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030308_19v3','2001030308_19v3 1','기술지원 이슈 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030308_19v3','2001030308_19v3 2','기술지원 해결 방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030308_19v3','2001030308_19v3 3','기술지원 이슈 진행 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030309_19v4','2001030309_19v4 1','형상관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030309_19v4','2001030309_19v4 2','형상 데이터베이스 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030309_19v4','2001030309_19v4 3','형상 추적 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030311_19v4','2001030311_19v4 1','품질목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030311_19v4','2001030311_19v4 2','품질 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030312_19v4','2001030312_19v4 1','기술지원 이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030312_19v4','2001030312_19v4 2','기술지원 지식관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030313_19v2','2001030313_19v2 1','시스템 유지보수 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030313_19v2','2001030313_19v2 2','기술 문의 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030401_19v2','2001030401_19v2 1','빅데이터 플랫폼 운영 지침 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030401_19v2','2001030401_19v2 2','빅데이터 플랫폼 운영 절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030401_19v2','2001030401_19v2 3','빅데이터 플랫폼 운영 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030401_19v2','2001030401_19v2 4','빅데이터 플랫폼 운영 자원 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030402_19v2','2001030402_19v2 1','빅데이터 서비스 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030402_19v2','2001030402_19v2 2','빅데이터 서비스 수준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030402_19v2','2001030402_19v2 3','빅데이터 서비스 개선 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030403_19v2','2001030403_19v2 1','빅데이터 서비스 성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030403_19v2','2001030403_19v2 2','빅데이터 서비스 가용성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030403_19v2','2001030403_19v2 3','빅데이터 서비스 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030404_19v2','2001030404_19v2 1','빅데이터 솔루션 운영 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030404_19v2','2001030404_19v2 2','빅데이터 솔루션 운영 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030404_19v2','2001030404_19v2 3','빅데이터 솔루션 운영 자원 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030405_19v2','2001030405_19v2 1','빅데이터 솔루션 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030405_19v2','2001030405_19v2 2','빅데이터 솔루션 환경 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030406_19v2','2001030406_19v2 1','빅데이터 플랫폼 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030406_19v2','2001030406_19v2 2','빅데이터 플랫폼 성능 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030406_19v2','2001030406_19v2 3','빅데이터 플랫폼 장애 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030407_19v2','2001030407_19v2 1','빅데이터 품질 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030407_19v2','2001030407_19v2 2','빅데이터 품질 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030407_19v2','2001030407_19v2 3','빅데이터 품질 개선 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030408_19v2','2001030408_19v2 1','빅데이터 플로우 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030408_19v2','2001030408_19v2 2','빅데이터 플로우 변경하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030408_19v2','2001030408_19v2 3','빅데이터 플로우 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030409_19v2','2001030409_19v2 1','메타 데이터 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030409_19v2','2001030409_19v2 2','타겟 데이터 모델링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030410_19v2','2001030410_19v2 1','빅데이터 처리 환경 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030410_19v2','2001030410_19v2 2','빅데이터 처리 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030501_21v1','2001030501_21v1 1','IoT 시스템 운영·관리 상세계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030501_21v1','2001030501_21v1 2','IoT 시스템 운영·관리 현황 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030501_21v1','2001030501_21v1 3','IoT 시스템 운영·관리 개선 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030502_21v1','2001030502_21v1 1','IoT 응용서비스 구성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030502_21v1','2001030502_21v1 2','IoT 응용서비스 성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030502_21v1','2001030502_21v1 3','IoT 응용서비스 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030503_21v1','2001030503_21v1 1','IoT 플랫폼 운영 현황 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030503_21v1','2001030503_21v1 2','IoT 플랫폼 기능 요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030503_21v1','2001030503_21v1 3','IoT 플랫폼 성능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030504_21v1','2001030504_21v1 1','IoT 네트워크 구성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030504_21v1','2001030504_21v1 2','IoT 네트워크 성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030504_21v1','2001030504_21v1 3','IoT 네트워크 장애 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030505_21v1','2001030505_21v1 1','IoT 디바이스 성능 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030505_21v1','2001030505_21v1 2','IoT 디바이스 펌웨어 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030505_21v1','2001030505_21v1 3','IoT 디바이스 고장 수리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030506_21v1','2001030506_21v1 1','IoT 시스템 연동 관리 대상 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030506_21v1','2001030506_21v1 2','IoT 시스템 연동 관리 프로토콜 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030506_21v1','2001030506_21v1 3','IoT 시스템 연동 안정성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030507_21v1','2001030507_21v1 1','IoT 운영 데이터 수집·저장 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030507_21v1','2001030507_21v1 2','IoT 운영 데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030507_21v1','2001030507_21v1 3','IoT 운영 데이터 품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030508_21v1','2001030508_21v1 1','IoT 보안 시스템 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030508_21v1','2001030508_21v1 2','IoT 보안 취약점 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030508_21v1','2001030508_21v1 3','IoT 보안 안정성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030509_21v1','2001030509_21v1 1','IoT 시스템 현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030509_21v1','2001030509_21v1 2','IoT 시스템 변경 내용 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001030509_21v1','2001030509_21v1 3','IoT 시스템 변경 작업 수행 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040101_19v3','2001040101_19v3 1','사업계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040101_19v3','2001040101_19v3 2','제안요청서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040101_19v3','2001040101_19v3 3','사업 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040102_19v3','2001040102_19v3 1','프로젝트 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040102_19v3','2001040102_19v3 2','프로젝트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040102_19v3','2001040102_19v3 3','프로젝트 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040102_19v3','2001040102_19v3 4','통합 변경관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 1','요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 2','범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 3','"작업분류체계(WBS');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 4','범위 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040103_19v3','2001040103_19v3 5','범위 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 1','공정 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 2','선후관계 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 3','공정자원 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 4','일정 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040104_19v3','2001040104_19v3 5','일정진척 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 1','업무범위 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 2','업무규모 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 3','원가 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 4','예산 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040105_19v3','2001040105_19v3 5','예산 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040106_19v3','2001040106_19v3 1','수행조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040106_19v3','2001040106_19v3 2','참여인원 편성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040106_19v3','2001040106_19v3 3','인적자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040107_19v3','2001040107_19v3 1','품질 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040107_19v3','2001040107_19v3 2','품질 보증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040107_19v3','2001040107_19v3 3','품질 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 1','위험관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 2','위험 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 3','위험 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 4','위험 대응방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040108_19v3','2001040108_19v3 5','위험 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 1','의사소통 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 2','정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 3','상황보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 4','정보 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 5','이해관계자 기대치 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040109_19v3','2001040109_19v3 6','이해관계자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 1','구매 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 2','공급자 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 3','계약서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 4','계약이행 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040110_19v3','2001040110_19v3 5','계약 종료하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040111_19v3','2001040111_19v3 1','변경관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040111_19v3','2001040111_19v3 2','변경관리 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040111_19v3','2001040111_19v3 3','변경관리 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040111_19v3','2001040111_19v3 4','변경관리 실행내역 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040112_19v3','2001040112_19v3 1','보안관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040112_19v3','2001040112_19v3 2','보안관리 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040112_19v3','2001040112_19v3 3','보안관리 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040113_19v3','2001040113_19v3 1','네트워크 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040113_19v3','2001040113_19v3 2','SW 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040113_19v3','2001040113_19v3 3','HW 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040113_19v3','2001040113_19v3 4','DB 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040114_19v3','2001040114_19v3 1','성과지표 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040114_19v3','2001040114_19v3 2','성과측정체계 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040114_19v3','2001040114_19v3 3','성과 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040114_19v3','2001040114_19v3 4','성과 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040201_19v4','2001040201_19v4 1','조직품질경영체계 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040201_19v4','2001040201_19v4 2','IT품질정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040201_19v4','2001040201_19v4 3','IT품질정책 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040202_19v4','2001040202_19v4 1','IT표준프로세스개선 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040202_19v4','2001040202_19v4 2','IT표준프로세스수립 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040202_19v4','2001040202_19v4 3','IT표준프로세스 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040202_19v4','2001040202_19v4 4','IT표준프로세스 내재화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040203_19v4','2001040203_19v4 1','IT품질관리대상 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040203_19v4','2001040203_19v4 2','IT품질관리목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040203_19v4','2001040203_19v4 3','IT품질관리전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040203_19v4','2001040203_19v4 4','IT품질관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040204_19v4','2001040204_19v4 1','IT품질교육 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040204_19v4','2001040204_19v4 2','IT품질교육 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040204_19v4','2001040204_19v4 3','IT품질교육성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040205_19v4','2001040205_19v4 1','SW품질평가체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040205_19v4','2001040205_19v4 2','SW품질평가계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040205_19v4','2001040205_19v4 3','SW품질평가 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040205_19v4','2001040205_19v4 4','SW품질성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040207_19v4','2001040207_19v4 1','IT품질요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040207_19v4','2001040207_19v4 2','IT품질보증목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040207_19v4','2001040207_19v4 3','IT품질보증계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040207_19v4','2001040207_19v4 4','IT품질보증계획 공유하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040208_19v4','2001040208_19v4 1','SW제품품질점검 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040208_19v4','2001040208_19v4 2','SW제품품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040208_19v4','2001040208_19v4 3','SW제품품질점검결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040209_19v4','2001040209_19v4 1','IT프로세스이행점검 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040209_19v4','2001040209_19v4 2','IT프로세스이행 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040209_19v4','2001040209_19v4 3','IT프로세스이행점검결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040210_19v4','2001040210_19v4 1','IT시정조치계획 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040210_19v4','2001040210_19v4 2','IT시정조치 추적관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040210_19v4','2001040210_19v4 3','IT시정조치결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040211_19v4','2001040211_19v4 1','활동개선계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040211_19v4','2001040211_19v4 2','개선활동 전개하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040211_19v4','2001040211_19v4 3','개선성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040212_19v4','2001040212_19v4 1','개선사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040212_19v4','2001040212_19v4 2','개선사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040213_19v2','2001040213_19v2 1','IT품질 관리시스템 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040213_19v2','2001040213_19v2 2','IT품질 관리시스템 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040213_19v2','2001040213_19v2 3','IT품질 관리시스템 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040214_19v2','2001040214_19v2 1','IT품질 관리시스템 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040214_19v2','2001040214_19v2 2','IT품질 관리시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040301_19v4','2001040301_19v4 1','사업 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040301_19v4','2001040301_19v4 2','사업 범위 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040301_19v4','2001040301_19v4 3','사업 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040301_19v4','2001040301_19v4 4','사업 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040302_19v4','2001040302_19v4 1','테스트 진단 착수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040302_19v4','2001040302_19v4 2','테스트 진단 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040302_19v4','2001040302_19v4 3','테스트 진단 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040303_21v5','2001040303_21v5 1','테스트 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040303_21v5','2001040303_21v5 2','테스트 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040303_21v5','2001040303_21v5 3','테스트 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040303_21v5','2001040303_21v5 4','테스트 방법론 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040309_21v5','2001040309_21v5 1','테스트 결과 분석');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040309_21v5','2001040309_21v5 2','테스트 결과 평가');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040309_21v5','2001040309_21v5 3','테스트 완료 보고');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040310_21v5','2001040310_21v5 1','자동화 도구 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040310_21v5','2001040310_21v5 2','자동화 도구 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040310_21v5','2001040310_21v5 3','자동화 도구 결과 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040311_21v5','2001040311_21v5 1','테스트 위험요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040311_21v5','2001040311_21v5 2','테스트 베이시스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040312_21v5','2001040312_21v5 1','테스트 요구사항 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040312_21v5','2001040312_21v5 2','테스트 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040313_21v5','2001040313_21v5 1','테스트 설계 방법 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040313_21v5','2001040313_21v5 2','테스트 설계 방법 문서화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040314_21v5','2001040314_21v5 1','테스트 케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040314_21v5','2001040314_21v5 2','테스트 케이스 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040315_21v5','2001040315_21v5 1','단위테스트 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040315_21v5','2001040315_21v5 2','단위테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040315_21v5','2001040315_21v5 3','단위테스트 결과보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040316_21v5','2001040316_21v5 1','통합테스트 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040316_21v5','2001040316_21v5 2','통합테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040316_21v5','2001040316_21v5 3','통합테스트 결과보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040317_21v5','2001040317_21v5 1','시스템테스트 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040317_21v5','2001040317_21v5 2','시스템테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040317_21v5','2001040317_21v5 3','시스템테스트 결과보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040318_21v5','2001040318_21v5 1','인수테스트 환경준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040318_21v5','2001040318_21v5 2','인수테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040318_21v5','2001040318_21v5 3','인수테스트 결과보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040319_21v5','2001040319_21v5 1','테스트 진척 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040319_21v5','2001040319_21v5 2','테스트 결함 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040320_21v5','2001040320_21v5 1','테스트 위험 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040320_21v5','2001040320_21v5 2','테스트 산출물 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040321_21v5','2001040321_21v5 1','테스트 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040321_21v5','2001040321_21v5 2','테스트 데이터 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040321_21v5','2001040321_21v5 3','테스트 도구 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040322_21v5','2001040322_21v5 1','점검 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040322_21v5','2001040322_21v5 2','사전 테스트 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 1','예비조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 2','감리범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 3','일정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 4','인력편성 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 5','점검항목 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 6','관련법령 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040401_19v3','2001040401_19v3 7','감리계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040402_19v3','2001040402_19v3 1','착수회의 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040402_19v3','2001040402_19v3 2','착수회의 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040403_19v3','2001040403_19v3 1','계약문서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040403_19v3','2001040403_19v3 2','사업수행계획 관련문서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040404_19v3','2001040404_19v3 1','과업 범위 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040404_19v3','2001040404_19v3 2','요구사항 정의 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040404_19v3','2001040404_19v3 3','요구정의단계 산출물 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040404_19v3','2001040404_19v3 4','기술적용계획표 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040405_19v3','2001040405_19v3 1','검사기준서 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040405_19v3','2001040405_19v3 2','요구사항 추적 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040405_19v3','2001040405_19v3 3','설계단계 산출물 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040406_19v3','2001040406_19v3 1','과업 이행여부 검증 대상 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040406_19v3','2001040406_19v3 2','과업 이행여부 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040406_19v3','2001040406_19v3 3','기술적용결과표 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040406_19v3','2001040406_19v3 4','종료단계 산출물 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040407_19v3','2001040407_19v3 1','감리수행결과보고서 초안 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040407_19v3','2001040407_19v3 2','감리수행결과보고서 초안 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040408_19v3','2001040408_19v3 1','종료회의 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040408_19v3','2001040408_19v3 2','종료회의 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040409_19v3','2001040409_19v3 1','이견사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040409_19v3','2001040409_19v3 2','이견사항 처리결과 공유하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040409_19v3','2001040409_19v3 3','감리수행결과보고서 통보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040410_19v3','2001040410_19v3 1','시정조치 확인 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040410_19v3','2001040410_19v3 2','시정조치 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040410_19v3','2001040410_19v3 3','시정조치확인보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040410_19v3','2001040410_19v3 4','시정조치확인보고서 제출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040411_19v3','2001040411_19v3 1','감리용역 완료검사 의뢰하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001040411_19v3','2001040411_19v3 2','감리용역 사업 종료하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050101_19v4','2001050101_19v4 1','시장 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050101_19v4','2001050101_19v4 2','자사 역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050101_19v4','2001050101_19v4 3','경쟁사 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050101_19v4','2001050101_19v4 4','관련법 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050102_19v4','2001050102_19v4 1','시장 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050102_19v4','2001050102_19v4 2','영업 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050102_19v4','2001050102_19v4 3','영업 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050103_19v4','2001050103_19v4 1','파이프라인 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050103_19v4','2001050103_19v4 2','고객 사업계획 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050103_19v4','2001050103_19v4 3','고객 기술현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050104_19v4','2001050104_19v4 1','고객 커버리지 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050104_19v4','2001050104_19v4 2','가치 제시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050104_19v4','2001050104_19v4 3','개념 컨셉 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050105_19v4','2001050105_19v4 1','경쟁사 제안 전략 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050105_19v4','2001050105_19v4 2','솔루션 구성 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050105_19v4','2001050105_19v4 3','가격 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050106_19v4','2001050106_19v4 1','제안요청서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050106_19v4','2001050106_19v4 2','제안서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050106_19v4','2001050106_19v4 3','제안서 발표하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050107_19v4','2001050107_19v4 1','기술 협상하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050107_19v4','2001050107_19v4 2','가격 협상하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050107_19v4','2001050107_19v4 3','계약서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050108_19v4','2001050108_19v4 1','사업수행 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050108_19v4','2001050108_19v4 2','유지보수 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050108_19v4','2001050108_19v4 3','후속사업 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050109_19v4','2001050109_19v4 1','협력선 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050109_19v4','2001050109_19v4 2','협력선 역량 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050109_19v4','2001050109_19v4 3','협력선 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050110_19v4','2001050110_19v4 1','채권채무 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050110_19v4','2001050110_19v4 2','영업실적 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050110_19v4','2001050110_19v4 3','영업결과 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050201_19v4','2001050201_19v4 1','시장 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050201_19v4','2001050201_19v4 2','고객 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050201_19v4','2001050201_19v4 3','경쟁사 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050201_19v4','2001050201_19v4 4','자사 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050202_19v3','2001050202_19v3 1','마케팅 목표 우선순위 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050202_19v3','2001050202_19v3 2','마케팅 예산 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050202_19v3','2001050202_19v3 3','재무적 마케팅 지표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050202_19v3','2001050202_19v3 4','비재무적 마케팅 지표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050203_19v4','2001050203_19v4 1','시장 세분화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050203_19v4','2001050203_19v4 2','표적 시장 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050203_19v4','2001050203_19v4 3','시장 포지셔닝하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050204_19v3','2001050204_19v3 1','제품(Product) 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050204_19v3','2001050204_19v3 2','가격(Price) 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050204_19v3','2001050204_19v3 3','유통(Place) 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050204_19v3','2001050204_19v3 4','프로모션(Promotion) 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050205_19v3','2001050205_19v3 1','수명주기 전략 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050205_19v3','2001050205_19v3 2','브랜드-제품 전략 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050205_19v3','2001050205_19v3 3','포트폴리오 전략 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050205_19v3','2001050205_19v3 4','포지셔닝 전략 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050206_19v3','2001050206_19v3 1','제품원가 요인 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050206_19v3','2001050206_19v3 2','가격 변경관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050206_19v3','2001050206_19v3 3','경쟁사 대비 가격 포지셔닝 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050207_19v4','2001050207_19v4 1','유통 실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050207_19v4','2001050207_19v4 2','유통채널 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050207_19v4','2001050207_19v4 3','유통경로 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050208_19v3','2001050208_19v3 1','프로모션 예산 분배하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050208_19v3','2001050208_19v3 2','홍보광고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050208_19v3','2001050208_19v3 3','판촉활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050209_19v4','2001050209_19v4 1','고객관리 활동 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050209_19v4','2001050209_19v4 2','고객 데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050209_19v4','2001050209_19v4 3','기존고객 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050209_19v4','2001050209_19v4 4','신규고객 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050210_19v4','2001050210_19v4 1','성과 데이터 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050210_19v4','2001050210_19v4 2','재무적 성과 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050210_19v4','2001050210_19v4 3','비재무적 성과 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001050210_19v4','2001050210_19v4 4','마케팅 활동 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060101_19v2','2001060101_19v2 1','정보보호 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060101_19v2','2001060101_19v2 2','정보보호 자원 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060101_19v2','2001060101_19v2 3','정보보호 성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060103_19v2','2001060103_19v2 1','정보보호 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060103_19v2','2001060103_19v2 2','정보보호 정책 유지관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060105_19v2','2001060105_19v2 1','위험관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060105_19v2','2001060105_19v2 2','위험 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060105_19v2','2001060105_19v2 3','위험 분석 결과 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060106_19v2','2001060106_19v2 1','정보보호 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060106_19v2','2001060106_19v2 2','정보보호 대상 범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060106_19v2','2001060106_19v2 3','정보보호 중장기 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060106_19v2','2001060106_19v2 4','정보보호 세부 실행 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060108_19v3','2001060108_19v3 1','네트워크 보안솔루션 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060108_19v3','2001060108_19v3 2','네트워크 보안솔루션 운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060108_19v3','2001060108_19v3 3','네트워크 보안 신규 위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060108_19v3','2001060108_19v3 4','네트워크 보안솔루션 업데이트 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060109_19v3','2001060109_19v3 1','애플리케이션 보안솔루션 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060109_19v3','2001060109_19v3 2','애플리케이션 보안솔루션 운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060109_19v3','2001060109_19v3 3','애플리케이션 보안 신규 위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060109_19v3','2001060109_19v3 4','애플리케이션 보안솔루션 업데이트 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060110_19v3','2001060110_19v3 1','시스템 보안솔루션 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060110_19v3','2001060110_19v3 2','시스템 보안솔루션 운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060110_19v3','2001060110_19v3 3','시스템 보안 신규 위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060110_19v3','2001060110_19v3 4','시스템 보안솔루션 업데이트 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060111_19v3','2001060111_19v3 1','정보보호 인식제고 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060111_19v3','2001060111_19v3 2','정보보호 이행 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060111_19v3','2001060111_19v3 3','침해사고 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060111_19v3','2001060111_19v3 4','외부자 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060112_19v3','2001060112_19v3 1','물리 보안솔루션 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060112_19v3','2001060112_19v3 2','물리 보안솔루션 운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060112_19v3','2001060112_19v3 3','물리 보안 신규 위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060113_19v3','2001060113_19v3 1','보안시스템 상태 체크하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060113_19v3','2001060113_19v3 2','정책요청 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060113_19v3','2001060113_19v3 3','보안시스템 가용성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060114_19v3','2001060114_19v3 1','보안성 검토 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060114_19v3','2001060114_19v3 2','보안성 검토 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060114_19v3','2001060114_19v3 3','보안 대책 권고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060115_19v3','2001060115_19v3 1','보안 감사 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060115_19v3','2001060115_19v3 2','보안 감사 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060115_19v3','2001060115_19v3 3','보안 감사 결과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060116_19v2','2001060116_19v2 1','협력사 보안 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060116_19v2','2001060116_19v2 2','협력사 보안 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060116_19v2','2001060116_19v2 3','협력사 보안 감사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060201_19v2','2001060201_19v2 1','보안 전략 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060201_19v2','2001060201_19v2 2','보안 위험 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060201_19v2','2001060201_19v2 3','보안 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060203_19v2','2001060203_19v2 1','보안감사 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060203_19v2','2001060203_19v2 2','보안감사 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060203_19v2','2001060203_19v2 3','보안감사 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060204_19v2','2001060204_19v2 1','정보보호관리체계 인증심사 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060204_19v2','2001060204_19v2 2','정보보호관리체계 인증심사 기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060204_19v2','2001060204_19v2 3','정보보호관리체계 인증심사 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060205_19v2','2001060205_19v2 1','정보보호제품 평가체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060205_19v2','2001060205_19v2 2','정보보호제품 평가기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060205_19v2','2001060205_19v2 3','정보보호제품 평가 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060206_19v2','2001060206_19v2 1','보안현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060206_19v2','2001060206_19v2 2','보안위험 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060206_19v2','2001060206_19v2 3','보안통제 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060207_19v2','2001060207_19v2 1','정보시스템 진단 기준 마련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060207_19v2','2001060207_19v2 2','정보시스템 진단 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060207_19v2','2001060207_19v2 3','정보시스템 대응책 마련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060208_19v2','2001060208_19v2 1','정보보호관리체계 심사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060208_19v2','2001060208_19v2 2','정보보호관리체계 인증 취득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060208_19v2','2001060208_19v2 3','정보보호관리체계 인증 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060209_19v2','2001060209_19v2 1','정보보호제품평가 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060209_19v2','2001060209_19v2 2','정보보호제품인증 취득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060209_19v2','2001060209_19v2 3','정보보호제품인증 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060210_19v2','2001060210_19v2 1','모의해킹 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060210_19v2','2001060210_19v2 2','모의해킹 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060301_19v2','2001060301_19v2 1','보안관제센터 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060301_19v2','2001060301_19v2 2','보안관제센터 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060301_19v2','2001060301_19v2 3','보안관제센터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060302_19v2','2001060302_19v2 1','침해대응 조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060302_19v2','2001060302_19v2 2','침해대응 활동계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060302_19v2','2001060302_19v2 3','침해대응 국제공조 체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060303_19v2','2001060303_19v2 1','증거자료 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060303_19v2','2001060303_19v2 2','디지털포렌식 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060304_19v2','2001060304_19v2 1','디지털포렌식 관련법규 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060304_19v2','2001060304_19v2 2','증거수집기술 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060304_19v2','2001060304_19v2 3','사이버사건 해결하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060305_19v2','2001060305_19v2 1','분석기반 조성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060305_19v2','2001060305_19v2 2','침해사고 원인 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060305_19v2','2001060305_19v2 3','침해사고 사후처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060306_19v2','2001060306_19v2 1','악성코드 분석환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060306_19v2','2001060306_19v2 2','악성코드 분석도구 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060306_19v2','2001060306_19v2 3','악성코드 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060307_19v2','2001060307_19v2 1','보안사고 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060307_19v2','2001060307_19v2 2','보안시스템 로그 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060307_19v2','2001060307_19v2 3','보안로그 상관분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060308_19v2','2001060308_19v2 1','탐지패턴 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060308_19v2','2001060308_19v2 2','정보시스템 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060401_19v2','2001060401_19v2 1','분석 방법론 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060401_19v2','2001060401_19v2 2','분석 결과 심의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060401_19v2','2001060401_19v2 3','최신 기술 동향 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060402_19v2','2001060402_19v2 1','암호알고리즘 특징 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060402_19v2','2001060402_19v2 2','분석도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060402_19v2','2001060402_19v2 3','최신 분석기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060403_19v2','2001060403_19v2 1','테스트베드 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060403_19v2','2001060403_19v2 2','가용성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060403_19v2','2001060403_19v2 3','정책요청 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060404_19v2','2001060404_19v2 1','검증 방법론 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060404_19v2','2001060404_19v2 2','검증결과 심의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060404_19v2','2001060404_19v2 3','최신 검증기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060405_19v2','2001060405_19v2 1','유형별 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060405_19v2','2001060405_19v2 2','검증 도구 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060405_19v2','2001060405_19v2 3','검증 결과 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060406_19v2','2001060406_19v2 1','최신 기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060406_19v2','2001060406_19v2 2','연구 방법론 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060406_19v2','2001060406_19v2 3','개발 방법론 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060407_19v2','2001060407_19v2 1','보안요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060407_19v2','2001060407_19v2 2','알고리즘 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060407_19v2','2001060407_19v2 3','알고리즘 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060408_19v2','2001060408_19v2 1','암호·인증 모듈 요구사항 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060408_19v2','2001060408_19v2 2','암호·인증 모듈 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060408_19v2','2001060408_19v2 3','암호·인증 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060409_19v2','2001060409_19v2 1','개발환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060409_19v2','2001060409_19v2 2','암호·인증 모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060409_19v2','2001060409_19v2 3','단위 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060410_19v2','2001060410_19v2 1','운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060410_19v2','2001060410_19v2 2','운영 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060410_19v2','2001060410_19v2 3','보안신규위협 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060410_19v2','2001060410_19v2 4','보안솔루션 업데이트 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060501_22v2','2001060501_22v2 1','요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060501_22v2','2001060501_22v2 2','필요기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060501_22v2','2001060501_22v2 3','요구사항 사양 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060501_22v2','2001060501_22v2 4','설계 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060502_22v2','2001060502_22v2 1','기본 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060502_22v2','2001060502_22v2 2','구성요소 성능 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060502_22v2','2001060502_22v2 3','구성요소 호환성 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060502_22v2','2001060502_22v2 4','상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060505_22v2','2001060505_22v2 1','알고리즘 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060505_22v2','2001060505_22v2 2','연동 인터페이스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060505_22v2','2001060505_22v2 3','알고리즘 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060506_22v2','2001060506_22v2 1','영상정보시스템 개발 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060506_22v2','2001060506_22v2 2','영상처리 알고리즘 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060506_22v2','2001060506_22v2 3','영상정보처리시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060507_22v2','2001060507_22v2 1','설계서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060507_22v2','2001060507_22v2 2','설치 공정 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060507_22v2','2001060507_22v2 3','영상정보처리시스템 성능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060507_22v2','2001060507_22v2 4','영상정보처리시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060508_22v2','2001060508_22v2 1','영상정보처리시스템 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060508_22v2','2001060508_22v2 2','영상정보처리시스템 안정화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060508_22v2','2001060508_22v2 3','영상정보처리시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060513_22v2','2001060513_22v2 1','알고리즘 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060513_22v2','2001060513_22v2 2','알고리즘 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060513_22v2','2001060513_22v2 3','알고리즘 기능 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060514_22v2','2001060514_22v2 1','영상관제 업무 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060514_22v2','2001060514_22v2 2','영상관제 업무 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060514_22v2','2001060514_22v2 3','영상관제 업무 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060601_19v2','2001060601_19v2 1','생체인식 선행기술 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060601_19v2','2001060601_19v2 2','생체인식 알고리즘 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060601_19v2','2001060601_19v2 3','생체인식 알고리즘 스펙 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060601_19v2','2001060601_19v2 4','생체인식 알고리즘 상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060602_19v2','2001060602_19v2 1','생체인식 모듈 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060602_19v2','2001060602_19v2 2','생체인식 모듈 회로 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060602_19v2','2001060602_19v2 3','생체인식 센서 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060602_19v2','2001060602_19v2 4','생체인식 모듈 펌웨어 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060603_19v2','2001060603_19v2 1','생체인식 서비스 플랫폼 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060603_19v2','2001060603_19v2 2','생체인식 API 관련표준 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060603_19v2','2001060603_19v2 3','생체인식 API 기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060603_19v2','2001060603_19v2 4','생체인식 API 함수 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060604_19v2','2001060604_19v2 1','생체인식 전처리 알고리즘 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060604_19v2','2001060604_19v2 2','생체인식 레퍼런스 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060604_19v2','2001060604_19v2 3','생체인식 알고리즘 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060604_19v2','2001060604_19v2 4','생체인식 알고리즘 성능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060605_19v2','2001060605_19v2 1','생체인식 모듈 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060605_19v2','2001060605_19v2 2','생체인식 센서 모듈 튜닝하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001060605_19v2','2001060605_19v2 3','생체인식 모듈 펌웨어 포팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061002_22v1','2001061002_22v1 1','가명·익명처리 환경구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061002_22v1','2001061002_22v1 2','가명·익명처리 사전준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061002_22v1','2001061002_22v1 3','가명?익명정보 대상선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061003_22v1','2001061003_22v1 1','가명?익명처리 위험관리계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061003_22v1','2001061003_22v1 2','데이터 식별 위험성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061003_22v1','2001061003_22v1 3','처리환경 위험성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061003_22v1','2001061003_22v1 4','가명?익명처리 수준 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061004_22v1','2001061004_22v1 1','가명처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061004_22v1','2001061004_22v1 2','익명처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061004_22v1','2001061004_22v1 3','추가 가명?익명처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061005_22v1','2001061005_22v1 1','가명정보 결합 사전준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061005_22v1','2001061005_22v1 2','가명정보 결합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061005_22v1','2001061005_22v1 3','결합 가명정보 반출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061006_22v1','2001061006_22v1 1','가명?익명처리 적정성 검토 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061006_22v1','2001061006_22v1 2','가명?익명처리 적정성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061006_22v1','2001061006_22v1 3','가명?익명처리 적정성검토 사후조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061007_22v1','2001061007_22v1 1','가명?익명정보처리 기록관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061007_22v1','2001061007_22v1 2','가명정보 안전성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061007_22v1','2001061007_22v1 3','가명?익명정보 재식별 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001061007_22v1','2001061007_22v1 4','가명·익명정보 재식별 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 1','인공지능 플랫폼 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 2','인공지능 플랫폼 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 3','인공지능 플랫폼 구축 범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 4','인공지능 플랫폼 구축 일정 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070101_18v1','2001070101_18v1 5','인공지능 플랫폼 구축 비용 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070102_18v1','2001070102_18v1 1','인공지능 플랫폼 요구사항 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070102_18v1','2001070102_18v1 2','인공지능 플랫폼 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070102_18v1','2001070102_18v1 3','인공지능 플랫폼 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070102_18v1','2001070102_18v1 4','인공지능 플랫폼 요구사항 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070103_18v1','2001070103_18v1 1','인공지능 플랫폼 인프라 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070103_18v1','2001070103_18v1 2','인공지능 플랫폼 기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070103_18v1','2001070103_18v1 3','인공지능 플랫폼 인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070103_18v1','2001070103_18v1 4','인공지능 플랫폼 지식화 구현설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070104_18v1','2001070104_18v1 1','인공지능 플랫폼 하드웨어 환경 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070104_18v1','2001070104_18v1 2','인공지능 플랫폼 소프트웨어 환경 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070104_18v1','2001070104_18v1 3','인공지능 플랫폼 네트워크 환경 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 1','인공지능 학습 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 2','인공지능 추론 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 3','인공지능 인지 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 4','인공지능 모델링 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070105_18v1','2001070105_18v1 5','인공지능 플랫폼 관리 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070106_18v1','2001070106_18v1 1','인공지능 플랫폼 휴먼 머신 인터랙션 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070106_18v1','2001070106_18v1 2','인공지능 플랫폼 내부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070106_18v1','2001070106_18v1 3','인공지능 플랫폼 외부 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070107_18v1','2001070107_18v1 1','인공지능 데이터 수집 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070107_18v1','2001070107_18v1 2','인공지능 데이터 처리 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070107_18v1','2001070107_18v1 3','인공지능 데이터 저장 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070107_18v1','2001070107_18v1 4','인공지능 지식화 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070108_18v1','2001070108_18v1 1','인공지능 플랫폼 단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070108_18v1','2001070108_18v1 2','인공지능 플랫폼 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070108_18v1','2001070108_18v1 3','인공지능 플랫폼 성능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070108_18v1','2001070108_18v1 4','인공지능 플랫폼 인수 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070109_18v1','2001070109_18v1 1','인공지능 플랫폼 품질 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070109_18v1','2001070109_18v1 2','인공지능 플랫폼 품질 보증 활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070109_18v1','2001070109_18v1 3','인공지능 플랫폼 품질 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070202_22v2','2001070202_22v2 1','인공지능 서비스 대상 고객 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070202_22v2','2001070202_22v2 2','인공지능 서비스 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070202_22v2','2001070202_22v2 3','인공지능 서비스 품질목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070202_22v2','2001070202_22v2 4','인공지능 서비스 법?윤리 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070204_22v2','2001070204_22v2 1','인공지능 서비스 모델 구성요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070204_22v2','2001070204_22v2 2','인공지능 서비스 모델 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070204_22v2','2001070204_22v2 3','인공지능 서비스 모델 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070205_22v2','2001070205_22v2 1','인공지능 서비스 시나리오 요소 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070205_22v2','2001070205_22v2 2','인공지능 서비스 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070205_22v2','2001070205_22v2 3','인공지능 서비스 시나리오 타당성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070205_22v2','2001070205_22v2 4','인공지능 서비스 시나리오 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070206_22v2','2001070206_22v2 1','인공지능 서비스 활용방안 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070206_22v2','2001070206_22v2 2','인공지능 서비스 비즈니스모델 활용 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070206_22v2','2001070206_22v2 3','인공지능 서비스 자산화 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 1','인공지능 서비스 추진조직 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 2','인공지능 서비스 인프라 활용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 3','인공지능 서비스 추진일정 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 4','인공지능 서비스 소요예산 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070207_22v2','2001070207_22v2 5','인공지능 서비스 위험관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070208_22v2','2001070208_22v2 1','인공지능 서비스 성과기준 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070208_22v2','2001070208_22v2 2','인공지능 서비스 성과평가 방법 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070208_22v2','2001070208_22v2 3','인공지능 서비스 성과평가 실행 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070208_22v2','2001070208_22v2 4','인공지능 서비스 성과평가 피드백 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070209_22v2','2001070209_22v2 1','인공지능 서비스 기술·시장 환경 분석하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070209_22v2','2001070209_22v2 2','인공지능 서비스 요건 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070209_22v2','2001070209_22v2 3','인공지능 서비스 필요 자원 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 1','인공지능 서비스 데이터 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 2','인공지능 서비스 데이터 확보 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 1','인허가 업무 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 2','정산 내역 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 3','준공 도서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 4','준공검사 준비·결과 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010209_14v2','2002010209_14v2 5','시설물 인계·인수서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 1','구내통신 운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 2','구내통신설비 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 3','구내통신설비 예방점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 4','구내통신설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010210_16v3','2002010210_16v3 5','예비전원설비 등 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 1','구내통신실 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 2','구내교환설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 3','LAN 설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 4','인증제도 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010211_16v1','2002010211_16v1 5','구내통합설비 기술규격 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 1','방송공동수신설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 2','CATV 설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 3','CCTV 설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 4','전관방송설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010212_16v1','2002010212_16v1 5','구내방송통신설비 기술규격 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 1','구내 배관설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 2','구내 배선설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 3','구내 배선반설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 4','홈네트워크설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010213_16v1','2002010213_16v1 5','구내배관배선설비 기술규격 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 1','교환설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 2','전송설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 3','무선설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 4','방송공동수신설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010214_16v1','2002010214_16v1 5','통합배선설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 1','유선선로설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 2','배관설비 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 3','안테나계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 4','전파전파 특성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010215_16v1','2002010215_16v1 5','통합배선 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 1','현장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 2','케이블트레이 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 3','전선관 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 4','덕트 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010216_16v3','2002010216_16v3 5','단자함 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010217_16v3','2002010217_16v3 1','광 케이블 포설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010217_16v3','2002010217_16v3 2','광 케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010217_16v3','2002010217_16v3 3','광 케이블 성단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010217_16v3','2002010217_16v3 4','광 케이블 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010218_16v3','2002010218_16v3 1','일반 케이블 포설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010218_16v3','2002010218_16v3 2','일반 케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010218_16v3','2002010218_16v3 3','일반 케이블 성단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010218_16v3','2002010218_16v3 4','일반 케이블 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010301_22v3','2002010301_22v3 1','시장현황파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010301_22v3','2002010301_22v3 2','타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010301_22v3','2002010301_22v3 3','사업계획서작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010302_22v3','2002010302_22v3 1','구축절차계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010302_22v3','2002010302_22v3 2','옥내기반시설 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010302_22v3','2002010302_22v3 3','옥외선로설비 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010302_22v3','2002010302_22v3 4','부속장비계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010303_22v3','2002010303_22v3 1','기본설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010303_22v3','2002010303_22v3 2','실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010303_22v3','2002010303_22v3 3','제안요청서작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010304_22v3','2002010304_22v3 1','발주계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010304_22v3','2002010304_22v3 2','사업자선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010304_22v3','2002010304_22v3 3','발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010304_22v3','2002010304_22v3 4','검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010305_22v3','2002010305_22v3 1','수급방법파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010305_22v3','2002010305_22v3 2','구축절차파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010305_22v3','2002010305_22v3 3','구축방법검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010305_22v3','2002010305_22v3 4','네트워크설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010306_22v3','2002010306_22v3 1','시험방법계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010306_22v3','2002010306_22v3 2','단위시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010306_22v3','2002010306_22v3 3','종합시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010306_22v3','2002010306_22v3 4','인수시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010307_22v3','2002010307_22v3 1','착공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010307_22v3','2002010307_22v3 2','시공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010307_22v3','2002010307_22v3 3','준공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010308_22v3','2002010308_22v3 1','운용계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010308_22v3','2002010308_22v3 2','운용매뉴얼작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010308_22v3','2002010308_22v3 3','운용교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010309_22v3','2002010309_22v3 1','유지보수계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010309_22v3','2002010309_22v3 2','유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010309_22v3','2002010309_22v3 3','이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010310_22v4','2002010310_22v4 1','관리적보안수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010310_22v4','2002010310_22v4 2','물리적보안수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010310_22v4','2002010310_22v4 3','기술적보안수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010311_22v2','2002010311_22v2 1','인터넷 설비 공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010311_22v2','2002010311_22v2 2','인터넷 분배장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010311_22v2','2002010311_22v2 3','인터넷 종단장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010311_22v2','2002010311_22v2 4','인터넷 설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010312_22v2','2002010312_22v2 1','아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010312_22v2','2002010312_22v2 2','트래픽 예측하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010312_22v2','2002010312_22v2 3','설계도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010312_22v2','2002010312_22v2 4','장비 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 1','스위치 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 2','VLAN 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 3','라우팅 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 4','이중화 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 5','백업·장애복구 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010313_22v2','2002010313_22v2 6','스위치 보안 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 1','구축환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 2','설계도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 3','AP 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 4','PoE 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 5','WLC 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010314_22v2','2002010314_22v2 6','무선랜 보안 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 1','서버용 컴퓨터 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 2','서버 가상화 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 3','Windows Server 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 4','Linux Server 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010315_22v2','2002010315_22v2 5','Cloud기반 서버 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 1','현장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 3','인공지능 서비스 데이터 정제 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 4','인공지능 서비스 데이터 가공 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070210_22v1','2001070210_22v1 5','인공지능 서비스 데이터 검증 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070301_19v1','2001070301_19v1 1','인공지능 모델 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070301_19v1','2001070301_19v1 2','인공지능 모델 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070301_19v1','2001070301_19v1 3','인공지능 후보 모델 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070302_19v1','2001070302_19v1 1','인공지능 모델 기본 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070302_19v1','2001070302_19v1 2','인공지능 모델 통합 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070302_19v1','2001070302_19v1 3','인공지능 모델 설계 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070303_19v1','2001070303_19v1 1','인공지능 데이터 확보 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070303_19v1','2001070303_19v1 2','인공지능 데이터 확보 시스템 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070303_19v1','2001070303_19v1 3','인공지능 내·외부 데이터 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070303_19v1','2001070303_19v1 4','인공지능 데이터 증강하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070304_19v1','2001070304_19v1 1','인공지능 데이터 정제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070304_19v1','2001070304_19v1 2','인공지능 데이터 통합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070304_19v1','2001070304_19v1 3','인공지능 데이터 변환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070304_19v1','2001070304_19v1 4','인공지능 데이터 축소하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070305_19v1','2001070305_19v1 1','인공지능 객체 발견하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070305_19v1','2001070305_19v1 2','인공지능 특징 생성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070305_19v1','2001070305_19v1 3','인공지능 특징 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070305_19v1','2001070305_19v1 4','인공지능 특징 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070306_19v1','2001070306_19v1 1','인공지능 학습 알고리즘 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070306_19v1','2001070306_19v1 2','인공지능 학습 모델 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070306_19v1','2001070306_19v1 3','인공지능 인자 조율하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070306_19v1','2001070306_19v1 4','인공지능 학습하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070307_19v1','2001070307_19v1 1','인공지능 모델 평가 기준 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070307_19v1','2001070307_19v1 2','인공지능 모델 선정기준 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070307_19v1','2001070307_19v1 3','인공지능 학습 결과 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070307_19v1','2001070307_19v1 4','인공지능 최적화 모델 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070308_19v1','2001070308_19v1 1','인공지능 선정모델 구성요소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070308_19v1','2001070308_19v1 2','인공지능 선정모델 배포 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070308_19v1','2001070308_19v1 3','인공지능 선정모델 성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070401_20v1','2001070401_20v1 1','인공지능서비스 운영관리지침 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070401_20v1','2001070401_20v1 2','인공지능서비스 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070401_20v1','2001070401_20v1 3','인공지능서비스 운영조직 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070401_20v1','2001070401_20v1 4','인공지능서비스 운영성과관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070402_20v1','2001070402_20v1 1','인공지능서비스 이용자 이용정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070402_20v1','2001070402_20v1 2','인공지능서비스 과금관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070402_20v1','2001070402_20v1 3','인공지능서비스 이용불만사항(VOC) 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070403_20v1','2001070403_20v1 1','인공지능서비스 고도화 반영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070403_20v1','2001070403_20v1 2','인공지능서비스 운영성과 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070403_20v1','2001070403_20v1 3','인공지능서비스 규제이슈대응 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070403_20v1','2001070403_20v1 4','인공지능서비스 운영매뉴얼 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070404_20v1','2001070404_20v1 1','인공지능서비스 운영자원 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070404_20v1','2001070404_20v1 2','인공지능서비스 운영인터페이스 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070404_20v1','2001070404_20v1 3','인공지능서비스 운영성능 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070404_20v1','2001070404_20v1 4','인공지능서비스 운영모니터링결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070405_20v1','2001070405_20v1 1','인공지능서비스 운영품질지표 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070405_20v1','2001070405_20v1 2','인공지능서비스 운영품질 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070405_20v1','2001070405_20v1 3','인공지능서비스 운영품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070406_20v1','2001070406_20v1 1','인공지능서비스 운영장애 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070406_20v1','2001070406_20v1 2','인공지능서비스 운영장애유형 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070406_20v1','2001070406_20v1 3','인공지능서비스 운영장애 해결하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070406_20v1','2001070406_20v1 4','인공지능서비스 장애처리결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070407_20v1','2001070407_20v1 1','인공지능서비스 이용자관점 운영수준관리체계 정립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070407_20v1','2001070407_20v1 2','인공지능서비스 이용자 관점 운영수준측정대상 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070407_20v1','2001070407_20v1 3','인공지능서비스 이용자관점 운영수준측정지표 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070407_20v1','2001070407_20v1 4','인공지능서비스 이용자관점 운영수준 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070408_20v1','2001070408_20v1 1','인공지능서비스 운영개선사항 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070408_20v1','2001070408_20v1 2','인공지능서비스 운영개선사항 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070408_20v1','2001070408_20v1 3','인공지능서비스 운영개선사항 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070501_20v1','2001070501_20v1 1','인공지능서비스 목표 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070501_20v1','2001070501_20v1 2','인공지능서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070501_20v1','2001070501_20v1 3','인공지능서비스 성과평가 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070502_20v1','2001070502_20v1 1','인공지능서비스 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070502_20v1','2001070502_20v1 2','인공지능서비스 애플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070503_20v1','2001070503_20v1 1','인공지능서비스 플랫폼 적용방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070503_20v1','2001070503_20v1 2','인공지능서비스 모델 적용방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070503_20v1','2001070503_20v1 3','인공지능서비스 데이터 적용방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070503_20v1','2001070503_20v1 4','인공지능서비스 인터페이스 적용방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070504_20v1','2001070504_20v1 1','인공지능서비스 비즈니스로직 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070504_20v1','2001070504_20v1 2','인공지능서비스 플랫폼 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070504_20v1','2001070504_20v1 3','인공지능서비스 모델 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070504_20v1','2001070504_20v1 4','인공지능서비스 인터페이스 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070505_20v1','2001070505_20v1 1','인공지능서비스 특화데이터 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070505_20v1','2001070505_20v1 2','인공지능서비스 모델 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070505_20v1','2001070505_20v1 3','인공지능서비스 모델 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070506_20v1','2001070506_20v1 1','인공지능서비스 사용자 인터페이스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070506_20v1','2001070506_20v1 2','인공지능서비스 시스템 인터페이스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070506_20v1','2001070506_20v1 3','인공지능서비스 인터페이스 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070506_20v1','2001070506_20v1 4','인공지능서비스 인터페이스 사용성 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070507_20v1','2001070507_20v1 1','인공지능서비스 테스트계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070507_20v1','2001070507_20v1 2','인공지능서비스 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070507_20v1','2001070507_20v1 3','인공지능서비스 성능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070507_20v1','2001070507_20v1 4','인공지능서비스 신뢰성 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070508_20v1','2001070508_20v1 1','인공지능서비스 이행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070508_20v1','2001070508_20v1 2','인공지능서비스 운영환경 이행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070508_20v1','2001070508_20v1 3','인공지능서비스 고객 인수테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070601_22v1','2001070601_22v1 1','인공지능 학습데이터 구축 임무 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070601_22v1','2001070601_22v1 2','인공지능 학습데이터 구축 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070601_22v1','2001070601_22v1 3','인공지능 학습데이터 품질 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070602_22v1','2001070602_22v1 1','인공지능 학습데이터 획득 가이드라인 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070602_22v1','2001070602_22v1 2','인공지능 학습데이터 획득 방법 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070603_22v1','2001070603_22v1 1','인공지능 학습데이터 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070603_22v1','2001070603_22v1 2','인공지능 학습데이터 비식별화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070603_22v1','2001070603_22v1 3','인공지능 학습데이터 획득 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070604_22v1','2001070604_22v1 1','인공지능 학습데이터 저장 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070604_22v1','2001070604_22v1 2','인공지능 학습데이터 저장 방식 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070604_22v1','2001070604_22v1 3','인공지능 학습데이터 저장소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 1','인공지능 학습데이터 정제 가이드라인 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 2','인공지능 학습데이터 필터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 3','인공지능 학습데이터 유형 변환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 4','인공지능 학습데이터 클렌징하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070605_22v1','2001070605_22v1 5','인공지능 학습데이터 정제 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070606_22v1','2001070606_22v1 1','인공지능 학습데이터 라벨링 가이드라인 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070606_22v1','2001070606_22v1 2','인공지능 학습데이터 라벨링 가이드라인 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070606_22v1','2001070606_22v1 3','인공지능 학습데이터 라벨링 가이드라인 변경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070606_22v1','2001070606_22v1 4','인공지능 학습데이터 라벨링 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070607_22v1','2001070607_22v1 1','인공지능 학습데이터 라벨링 가이드라인 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070607_22v1','2001070607_22v1 2','인공지능 학습데이터 라벨링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 1','인공지능 학습데이터 가명정보 결합 사전 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 2','인공지능 학습데이터 가명 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 3','인공지능 학습데이터 가명처리 적정성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 4','인공지능 학습데이터 결합 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070608_22v1','2001070608_22v1 5','인공지능 학습데이터 결합 사후 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070609_22v1','2001070609_22v1 1','인공지능 학습데이터 변환 가이드라인 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070609_22v1','2001070609_22v1 2','인공지능 학습데이터 변환 프로그램 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070609_22v1','2001070609_22v1 3','인공지능 학습데이터 변환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001070609_22v1','2001070609_22v1 4','인공지능 학습데이터 변환 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080101_21v2','2001080101_21v2 1','목표 시장 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080101_21v2','2001080101_21v2 2','목표 시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080101_21v2','2001080101_21v2 3','아이템 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080102_21v2','2001080102_21v2 1','요구사항 정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080102_21v2','2001080102_21v2 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080102_21v2','2001080102_21v2 3','요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080102_21v2','2001080102_21v2 4','아키텍처 모델 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080103_21v2','2001080103_21v2 1','블록체인 보상체계 정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080103_21v2','2001080103_21v2 2','블록체인 보상체계 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080103_21v2','2001080103_21v2 3','블록체인 비즈니스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080103_21v2','2001080103_21v2 4','블록체인 비즈니스 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080104_21v2','2001080104_21v2 1','블록 데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080104_21v2','2001080104_21v2 2','합의 알고리즘 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080104_21v2','2001080104_21v2 3','체인 데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080105_21v2','2001080105_21v2 1','단위 모듈 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080105_21v2','2001080105_21v2 2','인터페이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080105_21v2','2001080105_21v2 3','환경변수 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080106_21v2','2001080106_21v2 1','프로토타입 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080106_21v2','2001080106_21v2 2','프로토타입 개발 환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080106_21v2','2001080106_21v2 3','프로토타입 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080106_21v2','2001080106_21v2 4','단위 기능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080107_21v2','2001080107_21v2 1','프로토타입 테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080107_21v2','2001080107_21v2 2','프로토타입 테스트 케이스 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080107_21v2','2001080107_21v2 3','프로토타입 통합 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080108_21v2','2001080108_21v2 1','프로토타입 검증 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080108_21v2','2001080108_21v2 2','프로토타입 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080201_21v2','2001080201_21v2 1','요구사항 정보 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080201_21v2','2001080201_21v2 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080201_21v2','2001080201_21v2 3','요구사항 피드백하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080202_21v2','2001080202_21v2 1','블록체인 네트워크 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080202_21v2','2001080202_21v2 2','블록체인 합의 알고리즘 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080202_21v2','2001080202_21v2 3','블록체인 세부기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080203_21v2','2001080203_21v2 1','응용서비스 기능구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080203_21v2','2001080203_21v2 2','블록체인 비즈니스 기능구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080203_21v2','2001080203_21v2 3','블록체인 기능검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080204_21v2','2001080204_21v2 1','테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080204_21v2','2001080204_21v2 2','테스트 환경 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080204_21v2','2001080204_21v2 3','테스트 결함 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080205_21v2','2001080205_21v2 1','단위 테스트 케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080205_21v2','2001080205_21v2 2','단위 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080206_21v2','2001080206_21v2 1','통합 테스트 케이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080206_21v2','2001080206_21v2 2','통합 테스트 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080207_21v2','2001080207_21v2 1','블록체인 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080207_21v2','2001080207_21v2 2','시험 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080207_21v2','2001080207_21v2 3','블록체인 수정·보완 요구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080208_21v2','2001080208_21v2 1','블록체인 운영환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080208_21v2','2001080208_21v2 2','블록체인 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080208_21v2','2001080208_21v2 3','블록체인 개선 요구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080301_22v2','2001080301_22v2 1','블록체인 산업시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080301_22v2','2001080301_22v2 2','블록체인 사업 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080301_22v2','2001080301_22v2 3','블록체인 제도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080302_22v2','2001080302_22v2 1','블록체인 비즈니스 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080302_22v2','2001080302_22v2 2','블록체인 비즈니스모델 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080302_22v2','2001080302_22v2 3','블록체인 비즈니스모델 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080303_22v2','2001080303_22v2 1','블록체인 기술동향 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080303_22v2','2001080303_22v2 2','블록체인 기술적 요구사항 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080303_22v2','2001080303_22v2 3','블록체인 적용기술 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080304_22v2','2001080304_22v2 1','블록체인 서비스 정보보호 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080304_22v2','2001080304_22v2 2','블록체인 서비스 정보보호 사전점검계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080304_22v2','2001080304_22v2 3','블록체인 서비스 정보보호 운영관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080305_22v2','2001080305_22v2 1','블록체인 서비스 적용?활용 기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080305_22v2','2001080305_22v2 2','블록체인 서비스 적합성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080305_22v2','2001080305_22v2 3','블록체인 서비스 모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080306_22v2','2001080306_22v2 1','블록체인 서비스 구축 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080306_22v2','2001080306_22v2 2','블록체인 서비스 구축 일정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080306_22v2','2001080306_22v2 3','블록체인 서비스 구축 자원계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080307_22v2','2001080307_22v2 1','블록체인 서비스 운영 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080307_22v2','2001080307_22v2 2','블록체인 서비스 수준 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080307_22v2','2001080307_22v2 3','블록체인 서비스 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080308_22v2','2001080308_22v2 1','블록체인 서비스 관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080308_22v2','2001080308_22v2 2','블록체인 서비스 위험관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001080308_22v2','2001080308_22v2 3','블록체인 서비스 품질개선 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090101_20v1','2001090101_20v1 1','스마트물류 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090101_20v1','2001090101_20v1 2','스마트물류체계 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090101_20v1','2001090101_20v1 3','스마트물류체계 도입타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090102_20v1','2001090102_20v1 1','스마트물류체계 목표모델 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090102_20v1','2001090102_20v1 2','스마트물류체계 실행과제 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090102_20v1','2001090102_20v1 3','스마트물류체계 이행로드맵 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 1','스마트물류체계 추진조직 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 2','스마트물류체계 소요예산 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 3','스마트물류체계 추진일정 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 4','스마트물류체계 플랫폼구축 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090103_20v1','2001090103_20v1 5','스마트물류체계 통합관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090104_20v1','2001090104_20v1 1','스마트물류 시설도입계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090104_20v1','2001090104_20v1 2','스마트물류 시설운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090104_20v1','2001090104_20v1 3','스마트물류 시설유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090105_20v1','2001090105_20v1 1','스마트물류 장비도입계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090105_20v1','2001090105_20v1 2','스마트물류 장비운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090105_20v1','2001090105_20v1 3','스마트물류 장비유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090106_20v1','2001090106_20v1 1','스마트물류 소프트웨어도입계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090106_20v1','2001090106_20v1 2','스마트물류 소프트웨어운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090106_20v1','2001090106_20v1 3','스마트물류 소프트웨어유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090107_20v1','2001090107_20v1 1','스마트물류 데이터활용방향 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090107_20v1','2001090107_20v1 2','스마트물류 데이터수집계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090107_20v1','2001090107_20v1 3','스마트물류 데이터분석계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090108_20v1','2001090108_20v1 1','스마트물류체계 표준탐색하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090108_20v1','2001090108_20v1 2','스마트물류체계 표준선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090108_20v1','2001090108_20v1 3','스마트물류체계 표준적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090109_20v1','2001090109_20v1 1','스마트물류체계 성과평가기준 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090109_20v1','2001090109_20v1 2','스마트물류체계 성과평가실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090109_20v1','2001090109_20v1 3','스마트물류체계 성과평가피드백방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 1','스마트물류 플랫폼설계 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 2','내외부환경·자원 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 3','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 4','기술규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090201_20v1','2001090201_20v1 5','설계서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090202_20v1','2001090202_20v1 1','최적화 서비스영역 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090202_20v1','2001090202_20v1 2','최적화 성능목표 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090202_20v1','2001090202_20v1 3','최적화 기술 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090202_20v1','2001090202_20v1 4','최적화 서비스 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090203_20v1','2001090203_20v1 1','요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090203_20v1','2001090203_20v1 2','구축범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090203_20v1','2001090203_20v1 3','적용기술 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090203_20v1','2001090203_20v1 4','솔루션후보 선정평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090204_20v1','2001090204_20v1 1','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090204_20v1','2001090204_20v1 2','네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090204_20v1','2001090204_20v1 3','네트워크 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090205_20v1','2001090205_20v1 1','설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090205_20v1','2001090205_20v1 2','설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090205_20v1','2001090205_20v1 3','설비 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090206_20v1','2001090206_20v1 1','IoT도입 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090206_20v1','2001090206_20v1 2','IoT장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090206_20v1','2001090206_20v1 3','IoT장비 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090207_20v1','2001090207_20v1 1','소프트웨어 상세설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090207_20v1','2001090207_20v1 2','소프트웨어 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090207_20v1','2001090207_20v1 3','소프트웨어 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090208_20v1','2001090208_20v1 1','기능별 데이터 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090208_20v1','2001090208_20v1 2','데이터아키텍처 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090208_20v1','2001090208_20v1 3','데이터베이스시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090208_20v1','2001090208_20v1 4','데이터베이스 운영 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090209_20v1','2001090209_20v1 1','통합테스트 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090209_20v1','2001090209_20v1 2','통합테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090209_20v1','2001090209_20v1 3','시범운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090210_20v1','2001090210_20v1 1','스마트물류 데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090210_20v1','2001090210_20v1 2','최적화대상 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090210_20v1','2001090210_20v1 3','서비스품질 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090210_20v1','2001090210_20v1 4','시스템 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090301_20v1','2001090301_20v1 1','스마트물류 비즈니스환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090301_20v1','2001090301_20v1 2','내부인프라 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090301_20v1','2001090301_20v1 3','플랫폼 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090301_20v1','2001090301_20v1 4','연계시스템 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090302_20v1','2001090302_20v1 1','스마트물류 비즈니스모델 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090302_20v1','2001090302_20v1 2','인적자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090302_20v1','2001090302_20v1 3','시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090302_20v1','2001090302_20v1 4','스마트물류 설비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090303_20v1','2001090303_20v1 1','수요예측 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090303_20v1','2001090303_20v1 2','대응 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090303_20v1','2001090303_20v1 3','물동량변동 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090304_20v1','2001090304_20v1 1','장비운용 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090304_20v1','2001090304_20v1 2','센서 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090304_20v1','2001090304_20v1 3','매핑(Mapping) 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090304_20v1','2001090304_20v1 4','IoT 제어관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090305_20v1','2001090305_20v1 1','지능형 재고관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090305_20v1','2001090305_20v1 2','지능형 하역관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090305_20v1','2001090305_20v1 3','풀필먼트 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090305_20v1','2001090305_20v1 4','특수화물 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090306_20v1','2001090306_20v1 1','실내자율주행로봇 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090306_20v1','2001090306_20v1 2','실외자율주행로봇 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090306_20v1','2001090306_20v1 3','자율주행로봇 관제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090307_20v1','2001090307_20v1 1','어플리케이션 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090307_20v1','2001090307_20v1 2','가시성 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090307_20v1','2001090307_20v1 3','장애 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090307_20v1','2001090307_20v1 4','운용성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090308_20v1','2001090308_20v1 1','DBMS 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090308_20v1','2001090308_20v1 2','기준정보 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090308_20v1','2001090308_20v1 3','실시간 데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090309_20v1','2001090309_20v1 1','기업 연계시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090309_20v1','2001090309_20v1 2','타 비즈니스 연계시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090309_20v1','2001090309_20v1 3','데이터인터페이스(Open API) 개방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090309_20v1','2001090309_20v1 4','공공데이터 통합연계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090310_20v1','2001090310_20v1 1','정보보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090310_20v1','2001090310_20v1 2','스마트물류 작업안전 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001090310_20v1','2001090310_20v1 3','스마트물류 시설장비안전 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100101_20v1','2001100101_20v1 1','디지털트윈 필요성 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100101_20v1','2001100101_20v1 2','디지털트윈 대상 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100101_20v1','2001100101_20v1 3','디지털트윈 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100102_20v1','2001100102_20v1 1','디지털트윈 내부환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100102_20v1','2001100102_20v1 2','디지털트윈 외부환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100102_20v1','2001100102_20v1 3','디지털트윈 기술환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100103_20v1','2001100103_20v1 1','디지털트윈 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100103_20v1','2001100103_20v1 2','디지털트윈 요구사항 명세화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100103_20v1','2001100103_20v1 3','디지털트윈 요구사항 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100103_20v1','2001100103_20v1 4','디지털트윈 구현가능성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100104_20v1','2001100104_20v1 1','디지털트윈 모델 구성요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100104_20v1','2001100104_20v1 2','디지털트윈 모델 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100104_20v1','2001100104_20v1 3','디지털트윈 모델 타당성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100104_20v1','2001100104_20v1 4','디지털트윈 모델 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100105_20v1','2001100105_20v1 1','디지털트윈 모델 활용시나리오 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100105_20v1','2001100105_20v1 2','디지털트윈 모델 활용시나리오 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100105_20v1','2001100105_20v1 3','디지털트윈 모델 활용시나리오 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100106_20v1','2001100106_20v1 1','디지털트윈 구현항목 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100106_20v1','2001100106_20v1 2','디지털트윈 구현체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100106_20v1','2001100106_20v1 3','디지털트윈 인프라계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100107_20v1','2001100107_20v1 1','디지털트윈 운영목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100107_20v1','2001100107_20v1 2','디지털트윈 운영체계 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100107_20v1','2001100107_20v1 3','디지털트윈 성능유지방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100108_20v1','2001100108_20v1 1','디지털트윈 성과지표 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100108_20v1','2001100108_20v1 2','디지털트윈 성과기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100108_20v1','2001100108_20v1 3','디지털트윈 성과평가방법 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100201_22v1','2001100201_22v1 1','디지털트윈 물리객체 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100201_22v1','2001100201_22v1 2','디지털트윈 가상모델 구현 요건 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100201_22v1','2001100201_22v1 3','디지털트윈 알고리즘 적용 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100201_22v1','2001100201_22v1 4','디지털트윈 가상모델 상세설계서 작성하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100202_22v1','2001100202_22v1 1','디지털트윈 상호작용 기능 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100202_22v1','2001100202_22v1 2','디지털트윈 상호작용 기능 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100202_22v1','2001100202_22v1 3','디지털트윈 상호작용 동기화 방안 설계하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100203_22v1','2001100203_22v1 1','디지털트윈 데이터 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100203_22v1','2001100203_22v1 2','디지털트윈 데이터 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100203_22v1','2001100203_22v1 3','디지털트윈 데이터 동기화 유지방안 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100204_22v1','2001100204_22v1 1','레퍼런스 아키텍처 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100204_22v1','2001100204_22v1 2','시스템 아키텍처 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100204_22v1','2001100204_22v1 3','인프라 아키텍처 설계하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100205_22v1','2001100205_22v1 1','디지털트윈 가상모델 검증 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100205_22v1','2001100205_22v1 2','디지털트윈 가상모델 설계 검증 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100205_22v1','2001100205_22v1 3','디지털트윈 가상모델 설계 검증결과 반영하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100206_22v1','2001100206_22v1 1','디지털트윈 모듈 설계 구체화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100206_22v1','2001100206_22v1 2','디지털트윈 구현환경 구체화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100206_22v1','2001100206_22v1 3','디지털트윈 구현계획 구체화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100207_22v1','2001100207_22v1 1','디지털트윈 가상모델 품질검증지표 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100207_22v1','2001100207_22v1 2','디지털트윈 가상모델 최적화 기준 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100207_22v1','2001100207_22v1 3','디지털트윈 가상모델 품질평가 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100301_22v1','2001100301_22v1 1','응용서비스 범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100301_22v1','2001100301_22v1 2','응용서비스 기능 구체화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100301_22v1','2001100301_22v1 3','응용서비스 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100301_22v1','2001100301_22v1 4','응용서비스 기능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100302_22v1','2001100302_22v1 1','물리구조 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100302_22v1','2001100302_22v1 2','가상세계 모델링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100302_22v1','2001100302_22v1 3','가상세계 시각화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100302_22v1','2001100302_22v1 4','데이터 재현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100303_22v1','2001100303_22v1 1','물리객체 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100303_22v1','2001100303_22v1 2','가상객체 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100303_22v1','2001100303_22v1 3','상호작용 동기화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100304_22v1','2001100304_22v1 1','디지털트윈 알고리즘 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100304_22v1','2001100304_22v1 2','디지털트윈 구현 알고리즘 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100304_22v1','2001100304_22v1 3','디지털트윈 알고리즘 안정성 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100305_22v1','2001100305_22v1 1','데이터 수집모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100305_22v1','2001100305_22v1 2','디지털트윈 데이터 분석모델 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100305_22v1','2001100305_22v1 3','디지털트윈 예측모델 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100305_22v1','2001100305_22v1 4','동기화 서비스 지원모듈 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100306_22v1','2001100306_22v1 1','디지털트윈 테스트계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100306_22v1','2001100306_22v1 2','디지털트윈 통합 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100306_22v1','2001100306_22v1 3','디지털트윈 성능 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100306_22v1','2001100306_22v1 4','디지털트윈 안정성 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100307_22v1','2001100307_22v1 1','디지털트윈 가상모델 검증지표 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100307_22v1','2001100307_22v1 2','디지털트윈 가상모델 최적화 기준 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2001100307_22v1','2001100307_22v1 3','디지털트윈 가상모델 품질 통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010101_21v3','2002010101_21v3 1','구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010101_21v3','2002010101_21v3 2','통신망계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010101_21v3','2002010101_21v3 3','망 연동 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010101_21v3','2002010101_21v3 4','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010102_21v3','2002010102_21v3 1','교환설비 기본설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010102_21v3','2002010102_21v3 2','중계설비 기본설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010102_21v3','2002010102_21v3 3','전원설비 기본설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010105_21v3','2002010105_21v3 1','중계설비 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010105_21v3','2002010105_21v3 2','광단국 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010105_21v3','2002010105_21v3 3','광관로 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010105_21v3','2002010105_21v3 4','광케이블 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 1','공사착공 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 2','기초설치공사 및 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 3','케이블 설치공사 및 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 4','교환설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010107_21v3','2002010107_21v3 5','준공 행정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010108_21v3','2002010108_21v3 1','단위시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010108_21v3','2002010108_21v3 2','종합시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010108_21v3','2002010108_21v3 3','망 연동 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010109_21v3','2002010109_21v3 1','착공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010109_21v3','2002010109_21v3 2','시공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010109_21v3','2002010109_21v3 3','준공단계 감리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010110_21v3','2002010110_21v3 1','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010110_21v3','2002010110_21v3 2','구성성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010110_21v3','2002010110_21v3 3','고장통계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010110_21v3','2002010110_21v3 4','예비자원 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010114_21v2','2002010114_21v2 1','실시설계설명서 지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010114_21v2','2002010114_21v2 2','실시설계도면 지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010114_21v2','2002010114_21v2 3','공사비명세서 지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010114_21v2','2002010114_21v2 4','전원설비 실시설계지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010115_21v2','2002010115_21v2 1','공사계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010115_21v2','2002010115_21v2 2','일반시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010115_21v2','2002010115_21v2 3','특별시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010115_21v2','2002010115_21v2 4','예정공정표 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010116_21v2','2002010116_21v2 1','설계도면 기준 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010116_21v2','2002010116_21v2 2','구성도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010116_21v2','2002010116_21v2 3','배치도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010116_21v2','2002010116_21v2 4','평면도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 1','기술계산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 2','수량산출서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 3','단가산출서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 4','일위대가 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010117_21v2','2002010117_21v2 5','공사원가계산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 1','자재원가 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 2','자재 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 3','자재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 4','공사원가 계산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010118_21v3','2002010118_21v3 5','공사업자 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010119_21v1','2002010119_21v1 1','정류기 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010119_21v1','2002010119_21v1 2','축전기 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010119_21v1','2002010119_21v1 3','무정전 전원장치설비 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010119_21v1','2002010119_21v1 4','접지설비 실시설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010120_21v1','2002010120_21v1 1','교환시스템 5G 엔티티(Entity) 설치공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010120_21v1','2002010120_21v1 2','교환시스템 5G 엔티티(Entity) 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010120_21v1','2002010120_21v1 3','교환시스템 5G 엔티티(Entity) 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010120_21v1','2002010120_21v1 4','교환시스템 5G 엔티티(Entity) 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 1','구축 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 2','구축 범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 3','구축 조직구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 4','구축 소요예산 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010201_14v2','2002010201_14v2 5','구축 인허가 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 1','구내통신환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 2','설계보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 3','설계도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 4','설계예산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010202_14v2','2002010202_14v2 5','공사시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010203_16v3','2002010203_16v3 1','제안요청서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010203_16v3','2002010203_16v3 2','제안 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010203_16v3','2002010203_16v3 3','제안서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010203_16v3','2002010203_16v3 4','제안서 발표하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 1','대외업무 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 2','시공상세도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 3','공사 행정업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 4','자재 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010204_16v3','2002010204_16v3 5','공정 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 1','설계도서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 2','설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 3','설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 4','설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010206_14v2','2002010206_14v2 5','설비공사보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 2','시험검사계획 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 3','단위시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 4','종합시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010207_14v2','2002010207_14v2 5','시공품질 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 1','설계단계의 감리업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 2','공사착수단계의 감리업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 3','공사시행단계의 감리업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 4','기성·준공검사 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010208_14v2','2002010208_14v2 5','인계·인수 업무수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 5','고객 컨설팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030309_22v3','2002030309_22v3 1','고장 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030309_22v3','2002030309_22v3 2','고장 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030309_22v3','2002030309_22v3 3','작업자 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030309_22v3','2002030309_22v3 4','고장 수리결과 설명하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 1','고객의 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 2','케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 3','통신 장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 4','컴퓨터통신환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030310_22v3','2002030310_22v3 5','서비스품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030311_22v2','2002030311_22v2 1','보관환경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030311_22v2','2002030311_22v2 2','예비품 리스트 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030311_22v2','2002030311_22v2 3','수리의뢰요구서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030401_14v2','2002030401_14v2 1','서비스 제공능력 구비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030401_14v2','2002030401_14v2 2','인프라자원 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030401_14v2','2002030401_14v2 3','장비재배치 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030401_14v2','2002030401_14v2 4','IP 주소자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030402_14v2','2002030402_14v2 1','서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030402_14v2','2002030402_14v2 2','소요자원 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030402_14v2','2002030402_14v2 3','상품마케팅 촉진하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 1','영업전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 2','영업 활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 3','고객관계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 4','계약서 작성·계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030403_14v2','2002030403_14v2 5','대금 청구·정산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 1','고객의 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 2','케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 3','통신장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 4','통신환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030404_14v2','2002030404_14v2 5','서비스 개통 행정 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 1','서비스현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 2','서비스품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 3','망 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 4','설비 시험·점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030405_14v2','2002030405_14v2 5','망관리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030406_14v2','2002030406_14v2 1','보안 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030406_14v2','2002030406_14v2 2','보안 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030406_14v2','2002030406_14v2 3','보안 장비 원격 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030406_14v2','2002030406_14v2 4','보안현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 1','예방 정비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 2','결함 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 3','기능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 4','장비 예비품 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030407_14v2','2002030407_14v2 5','유지보수 현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 1','장애 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 2','장애 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 3','장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 4','작업자 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030408_14v2','2002030408_14v2 5','고객 응대하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 1','교육 자료 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 2','업무기술 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 3','훈련과정 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 4','훈련과정 실습하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030409_14v2','2002030409_14v2 5','신기술 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030410_14v2','2002030410_14v2 1','시장현황 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030410_14v2','2002030410_14v2 2','타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030410_14v2','2002030410_14v2 3','사업전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030410_14v2','2002030410_14v2 4','실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030501_19v2','2002030501_19v2 1','전보사업 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030501_19v2','2002030501_19v2 2','전보상품 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030501_19v2','2002030501_19v2 3','부가서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030501_19v2','2002030501_19v2 4','전보서비스 대외협력하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030502_19v2','2002030502_19v2 1','시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030502_19v2','2002030502_19v2 2','전보 판매전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030502_19v2','2002030502_19v2 3','서비스 고객 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030502_19v2','2002030502_19v2 4','요금정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030503_19v2','2002030503_19v2 1','전보요금 정산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030503_19v2','2002030503_19v2 2','영업매출 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030503_19v2','2002030503_19v2 3','영업고객 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030503_19v2','2002030503_19v2 4','정보보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 1','전보 콜센터 설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 2','텔레마케팅 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 3','고객 데이터베이스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 4','홈페이지 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030504_19v2','2002030504_19v2 5','전보서비스 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030505_19v2','2002030505_19v2 1','전화로 전보 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030505_19v2','2002030505_19v2 2','팩스로 전보 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030505_19v2','2002030505_19v2 3','인터넷으로 전보 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030505_19v2','2002030505_19v2 4','직접 전보 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030506_19v2','2002030506_19v2 1','전보 송수신 구분하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030506_19v2','2002030506_19v2 2','전보 통신기기 사용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030506_19v2','2002030506_19v2 3','전보 송수신원부 기록하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030507_19v2','2002030507_19v2 1','전보 전송기기 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030507_19v2','2002030507_19v2 2','전보 전송기기 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030507_19v2','2002030507_19v2 3','전보 전송기기 이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030508_19v2','2002030508_19v2 1','전보유형 구분하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030508_19v2','2002030508_19v2 2','지역 구분하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030508_19v2','2002030508_19v2 3','배달방법 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030508_19v2','2002030508_19v2 4','전보 배달하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030511_19v2','2002030511_19v2 1','전보서비스 인력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030511_19v2','2002030511_19v2 2','전보서비스 재무관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030511_19v2','2002030511_19v2 3','전보서비스 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030511_19v2','2002030511_19v2 4','전보서비스 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030601_17v2','2002030601_17v2 1','서비스 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030601_17v2','2002030601_17v2 2','서비스 방향 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030601_17v2','2002030601_17v2 3','서비스 기획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030605_17v2','2002030605_17v2 1','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030605_17v2','2002030605_17v2 2','예방 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030605_17v2','2002030605_17v2 3','서비스 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030611_17v1','2002030611_17v1 1','서비스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030611_17v1','2002030611_17v1 2','서비스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030611_17v1','2002030611_17v1 3','플랫폼 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030612_17v1','2002030612_17v1 1','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030612_17v1','2002030612_17v1 2','서비스 품질 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030612_17v1','2002030612_17v1 3','서비스 품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030613_17v1','2002030613_17v1 1','보안관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030613_17v1','2002030613_17v1 2','접근통제 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030613_17v1','2002030613_17v1 3','취약점 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 2','굴착 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 3','맨홀(수공) 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 4','관로 부설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010316_22v2','2002010316_22v2 5','관로 교량 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010317_22v2','2002010317_22v2 1','현장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010317_22v2','2002010317_22v2 2','통신주 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010317_22v2','2002010317_22v2 3','지지철물 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010317_22v2','2002010317_22v2 4','조가선 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010318_22v2','2002010318_22v2 1','현장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010318_22v2','2002010318_22v2 2','기초대 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010318_22v2','2002010318_22v2 3','구조물 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010318_22v2','2002010318_22v2 4','함체 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010401_21v2','2002010401_21v2 1','이동통신구내설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010401_21v2','2002010401_21v2 2','이동통신구내설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010401_21v2','2002010401_21v2 3','이동통신구내설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010401_21v2','2002010401_21v2 4','이동통신구내설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 1','방송공동수신설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 2','전파환경 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 3','방송공동수신설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 4','방송공동수신설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010402_21v2','2002010402_21v2 5','방송공동수신설비 사용전검사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010403_21v2','2002010403_21v2 1','영상정보처리기기(CCTV)설비 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010403_21v2','2002010403_21v2 2','영상정보처리기기(CCTV)설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010403_21v2','2002010403_21v2 3','영상정보처리기기(CCTV)설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 1','방범·방재·경비보안설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 2','방범설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 3','방재설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 4','경비보안설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 5','출입통제시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010404_21v2','2002010404_21v2 6','방범ㆍ방재ㆍ보안설비ㆍ출입통제시스템 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010405_21v2','2002010405_21v2 1','방송·음향설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010405_21v2','2002010405_21v2 2','방송·음향설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010405_21v2','2002010405_21v2 3','방송·음향설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 1','홈네트워크설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 2','홈네트워크설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 3','IoT설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 4','홈네트워크설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010406_21v2','2002010406_21v2 5','IoT설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 1','구내전화설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 2','구내 아날로그 교환설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 3','구내 디지털 교환설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 4','구내 아날로그 전화설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010407_21v2','2002010407_21v2 5','구내 디지털 전화설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010408_21v2','2002010408_21v2 1','EMP방호설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010408_21v2','2002010408_21v2 2','EMP방호설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010408_21v2','2002010408_21v2 3','EMP방호설비 성능측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 1','주차관제설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 2','요금관제설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 3','신호관제설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 4','유도관제설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010409_21v2','2002010409_21v2 5','주차관제설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010410_21v2','2002010410_21v2 1','빌딩안내설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010410_21v2','2002010410_21v2 2','빌딩안내설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010410_21v2','2002010410_21v2 3','빌딩안내설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010411_21v2','2002010411_21v2 1','정보통신전용 전원·접지설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010411_21v2','2002010411_21v2 2','정보통신전용 전원·접지설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010411_21v2','2002010411_21v2 3','정보통신전용 전원·접지설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010412_21v1','2002010412_21v1 1','주배선반 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010412_21v1','2002010412_21v1 2','시스템랙 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010412_21v1','2002010412_21v1 3','단자함 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010413_21v1','2002010413_21v1 1','지능형 영상감시설비 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010413_21v1','2002010413_21v1 2','지능형 영상감시설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010413_21v1','2002010413_21v1 3','승강기 영상감시설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010413_21v1','2002010413_21v1 4','지능형 영상감시설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010414_21v1','2002010414_21v1 1','영상표출시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010414_21v1','2002010414_21v1 2','저장·분배장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010414_21v1','2002010414_21v1 3','영상모니터링설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010415_21v1','2002010415_21v1 1','xEMS설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010415_21v1','2002010415_21v1 2','xEMS설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010415_21v1','2002010415_21v1 3','xEMS설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010416_21v1','2002010416_21v1 1','구내통신설비 유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010416_21v1','2002010416_21v1 2','구내통신설비 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010416_21v1','2002010416_21v1 3','유지보수 결과보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010501_17v1','2002010501_17v1 1','요구사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010501_17v1','2002010501_17v1 2','환경요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010501_17v1','2002010501_17v1 3','기술사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010501_17v1','2002010501_17v1 4','소요예산 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010502_17v1','2002010502_17v1 1','구축 목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010502_17v1','2002010502_17v1 2','구축 범위 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010502_17v1','2002010502_17v1 3','구축 일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010502_17v1','2002010502_17v1 4','구축 원가 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010503_17v1','2002010503_17v1 1','설계 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010503_17v1','2002010503_17v1 2','기본설계서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010503_17v1','2002010503_17v1 3','실시설계서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010504_17v1','2002010504_17v1 1','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010504_17v1','2002010504_17v1 2','구축 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010504_17v1','2002010504_17v1 3','준공서류 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010505_17v1','2002010505_17v1 1','감리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010505_17v1','2002010505_17v1 2','설계도서 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010505_17v1','2002010505_17v1 3','구축 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010506_17v1','2002010506_17v1 1','운영 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010506_17v1','2002010506_17v1 2','운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010506_17v1','2002010506_17v1 3','관리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010507_17v1','2002010507_17v1 1','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010507_17v1','2002010507_17v1 2','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010507_17v1','2002010507_17v1 3','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010508_17v1','2002010508_17v1 1','관리적 보안 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010508_17v1','2002010508_17v1 2','물리적 보안 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010508_17v1','2002010508_17v1 3','기술적 보안 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010509_17v1','2002010509_17v1 1','유지보수 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010509_17v1','2002010509_17v1 2','유지보수 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010509_17v1','2002010509_17v1 3','유지보수 인력 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010601_18v1','2002010601_18v1 1','철도전송설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010601_18v1','2002010601_18v1 2','철도전송설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010601_18v1','2002010601_18v1 3','철도전송설비 시운전개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010602_18v1','2002010602_18v1 1','선로변통합인터페이스통신설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010602_18v1','2002010602_18v1 2','선로변통합인터페이스통신설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010602_18v1','2002010602_18v1 3','선로변통합인터페이스통신설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010602_18v1','2002010602_18v1 4','선로변통합인터페이스통신설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010603_18v1','2002010603_18v1 1','열차무선설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010603_18v1','2002010603_18v1 2','열차무선설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010603_18v1','2002010603_18v1 3','열차무선설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010603_18v1','2002010603_18v1 4','열차무선설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010604_18v1','2002010604_18v1 1','철도영상감시설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010604_18v1','2002010604_18v1 2','철도영상감시설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010604_18v1','2002010604_18v1 3','철도영상감시설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010604_18v1','2002010604_18v1 4','철도영상감시설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010605_18v1','2002010605_18v1 1','철도정보통신망설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010605_18v1','2002010605_18v1 2','철도정보통신망설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010605_18v1','2002010605_18v1 3','철도정보통신망설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010605_18v1','2002010605_18v1 4','철도정보통신망설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010606_18v1','2002010606_18v1 1','열차행선안내설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010606_18v1','2002010606_18v1 2','열차행선안내설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010606_18v1','2002010606_18v1 3','열차행선안내설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010606_18v1','2002010606_18v1 4','열차행선안내설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010607_18v1','2002010607_18v1 1','철도재난방송수신설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010607_18v1','2002010607_18v1 2','철도재난방송수신설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010607_18v1','2002010607_18v1 3','철도재난방송수신설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010607_18v1','2002010607_18v1 4','철도재난방송수신설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010608_18v1','2002010608_18v1 1','역무자동화설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010608_18v1','2002010608_18v1 2','역무자동화설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010608_18v1','2002010608_18v1 3','역무자동화설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010608_18v1','2002010608_18v1 4','역무자동화설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010609_18v1','2002010609_18v1 1','철도관제전화설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010609_18v1','2002010609_18v1 2','철도관제전화설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010609_18v1','2002010609_18v1 3','철도관제전화설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010609_18v1','2002010609_18v1 4','철도관제전화설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010610_18v1','2002010610_18v1 1','철도자동안내방송설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010610_18v1','2002010610_18v1 2','철도자동안내방송설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010610_18v1','2002010610_18v1 3','철도자동안내방송설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010610_18v1','2002010610_18v1 4','철도자동안내방송설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010701_18v1','2002010701_18v1 1','교통신호제어설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010701_18v1','2002010701_18v1 2','교통신호제어설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010701_18v1','2002010701_18v1 3','교통신호제어설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010701_18v1','2002010701_18v1 4','교통신호제어설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010702_18v1','2002010702_18v1 1','도로전광판설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010702_18v1','2002010702_18v1 2','도로전광판설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010702_18v1','2002010702_18v1 3','도로전광판설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010702_18v1','2002010702_18v1 4','도로전광판설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010703_18v1','2002010703_18v1 1','교통관제설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010703_18v1','2002010703_18v1 2','교통관제설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010703_18v1','2002010703_18v1 3','교통관제설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010703_18v1','2002010703_18v1 4','교통관제설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010704_18v1','2002010704_18v1 1','교통정보망설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010704_18v1','2002010704_18v1 2','교통정보망설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010704_18v1','2002010704_18v1 3','교통정보망설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010704_18v1','2002010704_18v1 4','교통정보망설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010705_18v1','2002010705_18v1 1','교통상황감시설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010705_18v1','2002010705_18v1 2','교통상황감시설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010705_18v1','2002010705_18v1 3','교통상황감시설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010705_18v1','2002010705_18v1 4','교통상황감시설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010706_18v1','2002010706_18v1 1','차량번호인식설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010706_18v1','2002010706_18v1 2','차량번호인식설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010706_18v1','2002010706_18v1 3','차량번호인식설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010706_18v1','2002010706_18v1 4','차량번호인식설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010707_18v1','2002010707_18v1 1','교통영상정보처리설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010707_18v1','2002010707_18v1 2','교통영상정보처리설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010707_18v1','2002010707_18v1 3','교통영상정보처리설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010707_18v1','2002010707_18v1 4','교통영상정보처리설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010708_18v1','2002010708_18v1 1','과적차량단속설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010708_18v1','2002010708_18v1 2','과적차량단속설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010708_18v1','2002010708_18v1 3','과적차량단속설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010708_18v1','2002010708_18v1 4','과적차량단속설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010709_18v1','2002010709_18v1 1','요금징수설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010709_18v1','2002010709_18v1 2','요금징수설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010709_18v1','2002010709_18v1 3','요금징수설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010709_18v1','2002010709_18v1 4','요금징수설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010710_18v1','2002010710_18v1 1','버스정보시스템(BIS)설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010710_18v1','2002010710_18v1 2','버스정보시스템(BIS) 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010710_18v1','2002010710_18v1 3','버스정보시스템(BIS) 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010710_18v1','2002010710_18v1 4','버스정보시스템(BIS)개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010711_18v1','2002010711_18v1 1','보행자안내설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010711_18v1','2002010711_18v1 2','보행자안내설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010711_18v1','2002010711_18v1 3','보행자안내설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010801_18v1','2002010801_18v1 1','레이더시스템 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010801_18v1','2002010801_18v1 2','레이더시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010801_18v1','2002010801_18v1 3','레이더시스템 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010801_18v1','2002010801_18v1 4','레이더시스템 준공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010802_18v1','2002010802_18v1 1','해상무선통신 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010802_18v1','2002010802_18v1 2','해상무선통신설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010802_18v1','2002010802_18v1 3','해상무선통신설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010802_18v1','2002010802_18v1 4','해상무선통신설비 준공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010803_18v1','2002010803_18v1 1','선박교통관제 전송설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010803_18v1','2002010803_18v1 2','선박교통관제 전송설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010803_18v1','2002010803_18v1 3','선박교통관제 전송설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010803_18v1','2002010803_18v1 4','선박교통관제 전송설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010804_18v1','2002010804_18v1 1','해상용등부표 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010804_18v1','2002010804_18v1 2','해상용등부표설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010804_18v1','2002010804_18v1 3','해상용등부표설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010804_18v1','2002010804_18v1 4','해상용등부표설비 준공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010805_18v1','2002010805_18v1 1','선박자동식별장치 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010805_18v1','2002010805_18v1 2','선박자동식별장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010805_18v1','2002010805_18v1 3','선박자동식별장치 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010805_18v1','2002010805_18v1 4','선박자동식별장치 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010806_18v1','2002010806_18v1 1','위성항법보정시스템 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010806_18v1','2002010806_18v1 2','위성항법보정시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010806_18v1','2002010806_18v1 3','위성항법보정시스템 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010806_18v1','2002010806_18v1 4','위성항법보정시스템 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010807_18v1','2002010807_18v1 1','해사위성통신장비 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010807_18v1','2002010807_18v1 2','해사위성통신장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010807_18v1','2002010807_18v1 3','해사위성통신장비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010807_18v1','2002010807_18v1 4','해사위성통신장비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010808_18v1','2002010808_18v1 1','자동조타장치 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010808_18v1','2002010808_18v1 2','자동조타장치설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010808_18v1','2002010808_18v1 3','자동조타장치설비 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010808_18v1','2002010808_18v1 4','자동조타장치설비 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010809_18v1','2002010809_18v1 1','항해자료기록장치 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010809_18v1','2002010809_18v1 2','항해자료기록장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010809_18v1','2002010809_18v1 3','항해자료기록장치 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010809_18v1','2002010809_18v1 4','항해자료기록장치 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010810_18v1','2002010810_18v1 1','기상시설 공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010810_18v1','2002010810_18v1 2','기상시설 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010810_18v1','2002010810_18v1 3','기상시설 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010810_18v1','2002010810_18v1 4','기상시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010811_18v1','2002010811_18v1 1','선박어로 설비공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010811_18v1','2002010811_18v1 2','선박어로설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010811_18v1','2002010811_18v1 3','선박어로설비 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010811_18v1','2002010811_18v1 4','선박어로설비 준공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010901_18v1','2002010901_18v1 1','계기착륙시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010901_18v1','2002010901_18v1 2','계기착륙시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010901_18v1','2002010901_18v1 3','계기착륙시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010901_18v1','2002010901_18v1 4','계기착륙시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010902_18v1','2002010902_18v1 1','자동종속감시시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010902_18v1','2002010902_18v1 2','자동종속감시시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010902_18v1','2002010902_18v1 3','자동종속감시시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010902_18v1','2002010902_18v1 4','자동종속감시시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010903_18v1','2002010903_18v1 1','레이더시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010903_18v1','2002010903_18v1 2','레이더시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010903_18v1','2002010903_18v1 3','레이더시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010903_18v1','2002010903_18v1 4','레이더시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010904_18v1','2002010904_18v1 1','레이더자료자동처리시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010904_18v1','2002010904_18v1 2','레이더자료자동처리시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010904_18v1','2002010904_18v1 3','레이더자료자동처리시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010904_18v1','2002010904_18v1 4','레이더자료자동처리시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010905_18v1','2002010905_18v1 1','거리측정·전방향표지시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010905_18v1','2002010905_18v1 2','거리측정·전방향표지시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010905_18v1','2002010905_18v1 3','거리측정·전방향표지시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010905_18v1','2002010905_18v1 4','거리측정·전방향표지시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010906_18v1','2002010906_18v1 1','항공고정통신시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010906_18v1','2002010906_18v1 2','항공고정통신시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010906_18v1','2002010906_18v1 3','항공고정통신시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010906_18v1','2002010906_18v1 4','항공고정통신시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010907_18v1','2002010907_18v1 1','단거리·단파이동통신시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010907_18v1','2002010907_18v1 2','단거리·단파이동통신시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010907_18v1','2002010907_18v1 3','단거리·단파이동통신시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010907_18v1','2002010907_18v1 4','단거리·단파이동통신시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010908_18v1','2002010908_18v1 1','음성통신제어시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010908_18v1','2002010908_18v1 2','음성통신제어시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010908_18v1','2002010908_18v1 3','음성통신제어시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010908_18v1','2002010908_18v1 4','음성통신제어시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010909_18v1','2002010909_18v1 1','초단파디지털이동통신시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010909_18v1','2002010909_18v1 2','초단파디지털이동통신시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010909_18v1','2002010909_18v1 3','초단파디지털이동통신시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010909_18v1','2002010909_18v1 4','초단파디지털이동통신시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010910_18v1','2002010910_18v1 1','공항정보방송시설공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010910_18v1','2002010910_18v1 2','공항정보방송시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010910_18v1','2002010910_18v1 3','공항정보방송시설 시운전하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002010910_18v1','2002010910_18v1 4','공항정보방송시설 개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011001_19v1','2002011001_19v1 1','클라우드 플랫폼 하드웨어 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011001_19v1','2002011001_19v1 2','클라우드 플랫폼 가상화 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011001_19v1','2002011001_19v1 3','클라우드 플랫폼 서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011002_19v1','2002011002_19v1 1','하드웨어 플랫폼 구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011002_19v1','2002011002_19v1 2','소프트웨어 플랫폼 구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011002_19v1','2002011002_19v1 3','클라우드 플랫폼 서비스 구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011003_19v1','2002011003_19v1 1','클라우드 플랫폼 하드웨어 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011003_19v1','2002011003_19v1 2','클라우드 플랫폼 소프트웨어 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011003_19v1','2002011003_19v1 3','클라우드 플랫폼 서비스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011004_19v1','2002011004_19v1 1','하드웨어 인프라 설계도서 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011004_19v1','2002011004_19v1 2','하드웨어 인프라 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011004_19v1','2002011004_19v1 3','하드웨어 인프라 구축 완료도서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011005_19v1','2002011005_19v1 1','가상화 인프라 환경 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011005_19v1','2002011005_19v1 2','가상화 인프라 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011005_19v1','2002011005_19v1 3','가상머신 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011005_19v1','2002011005_19v1 4','가상화 인프라 자원 운영 관리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011006_19v1','2002011006_19v1 1','백업/복구 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011006_19v1','2002011006_19v1 2','백업/복구 시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011006_19v1','2002011006_19v1 3','백업/복구 시스템 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011007_19v1','2002011007_19v1 1','클라우드 보안정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011007_19v1','2002011007_19v1 2','클라우드 보안 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011007_19v1','2002011007_19v1 3','클라우드 보안 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011008_19v1','2002011008_19v1 1','시험계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011008_19v1','2002011008_19v1 2','단위테스트 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011008_19v1','2002011008_19v1 3','통합테스트 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011009_19v1','2002011009_19v1 1','하드웨어 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011009_19v1','2002011009_19v1 2','소프트웨어 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002011009_19v1','2002011009_19v1 3','클라우드 서비스 품질성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020101_14v2','2002020101_14v2 1','요구사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020101_14v2','2002020101_14v2 2','환경요소 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020101_14v2','2002020101_14v2 3','기술사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020101_14v2','2002020101_14v2 4','소요예산 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020102_14v2','2002020102_14v2 1','구축범위 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020102_14v2','2002020102_14v2 2','기술사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020102_14v2','2002020102_14v2 3','공정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020102_14v2','2002020102_14v2 4','품질관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020103_14v2','2002020103_14v2 1','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020103_14v2','2002020103_14v2 2','수용용량 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020103_14v2','2002020103_14v2 3','설계도서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020103_14v2','2002020103_14v2 4','무선통신시스템 보호대책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020104_14v2','2002020104_14v2 1','장비규격 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020104_14v2','2002020104_14v2 2','구축장비 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020104_14v2','2002020104_14v2 3','발주장비 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020106_14v2','2002020106_14v2 1','단위 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020106_14v2','2002020106_14v2 2','통합 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020106_14v2','2002020106_14v2 3','준공 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020106_14v2','2002020106_14v2 4','인수 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020107_14v2','2002020107_14v2 1','관련규정 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020107_14v2','2002020107_14v2 2','설계도서 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020107_14v2','2002020107_14v2 3','시공 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020108_14v2','2002020108_14v2 1','요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020108_14v2','2002020108_14v2 2','최적화방안 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020108_14v2','2002020108_14v2 3','최적화계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020108_14v2','2002020108_14v2 4','최적화 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020109_14v2','2002020109_14v2 1','인수인계내역 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020109_14v2','2002020109_14v2 2','기술이전 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020109_14v2','2002020109_14v2 3','운용매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020109_14v2','2002020109_14v2 4','장비 인수인계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020110_14v2','2002020110_14v2 1','하자계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020110_14v2','2002020110_14v2 2','하자 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020110_14v2','2002020110_14v2 3','장애관리 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020111_16v1','2002020111_16v1 1','급전선 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020111_16v1','2002020111_16v1 2','안테나 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020111_16v1','2002020111_16v1 3','무선중계설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020111_16v1','2002020111_16v1 4','고정무선설비 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020112_16v3','2002020112_16v3 1','설치계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020112_16v3','2002020112_16v3 2','통신장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020112_16v3','2002020112_16v3 3','안테나 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020112_16v3','2002020112_16v3 4','부대설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020113_16v3','2002020113_16v3 1','백홀망 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020113_16v3','2002020113_16v3 2','기지국 장비 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020113_16v3','2002020113_16v3 3','기지국 장비 연동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 1','타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 2','기술적 대안 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 3','설계지침 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 4','기본설계도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020114_16v1','2002020114_16v1 5','기본설계서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020115_16v1','2002020115_16v1 1','공사설명서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020115_16v1','2002020115_16v1 2','일반시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020115_16v1','2002020115_16v1 3','특별시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020115_16v1','2002020115_16v1 4','예정공정표 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020116_16v1','2002020116_16v1 1','공종별 배치도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020116_16v1','2002020116_16v1 2','공종별 계통도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020116_16v1','2002020116_16v1 3','공종별 평면도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020116_16v1','2002020116_16v1 4','공종별 상세도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 1','공사원가계산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 2','자재명세표 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 3','수량산출서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 4','산출기초 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020117_16v1','2002020117_16v1 5','기술계산서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020201_22v3','2002020201_22v3 1','요구사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020201_22v3','2002020201_22v3 2','환경요소 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020201_22v3','2002020201_22v3 3','기술사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 1','구축범위 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 2','구축일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 3','구축원가 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 4','인력계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020202_22v3','2002020202_22v3 5','이해관계자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 1','업무수행계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 2','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 3','세부기술규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 4','설계도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020203_22v3','2002020203_22v3 5','설계보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020204_22v3','2002020204_22v3 1','자재설비 설계검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020204_22v3','2002020204_22v3 2','제안요청서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020204_22v3','2002020204_22v3 3','시공업체 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020206_22v3','2002020206_22v3 1','구축 상면 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020206_22v3','2002020206_22v3 2','환경설비 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020206_22v3','2002020206_22v3 3','전원설비 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020206_22v3','2002020206_22v3 4','보안설비 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020208_22v3','2002020208_22v3 1','시험 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020208_22v3','2002020208_22v3 2','단위 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020208_22v3','2002020208_22v3 3','통합 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020208_22v3','2002020208_22v3 4','평가·보완하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 1','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 2','자재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 3','구축업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 4','감리보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020209_22v3','2002020209_22v3 5','안전관리 지도하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020210_22v3','2002020210_22v3 1','유지관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020210_22v3','2002020210_22v3 2','전송시스템 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020210_22v3','2002020210_22v3 3','점검결과 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020212_22v2','2002020212_22v2 1','무선통신 표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020212_22v2','2002020212_22v2 2','유선통신 표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020212_22v2','2002020212_22v2 3','설계공사 표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020212_22v2','2002020212_22v2 4','구내 방송통신 표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 1','설계 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 2','자재 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 3','자재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 4','구축 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020214_22v3','2002020214_22v3 5','준공서류 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020215_22v1','2002020215_22v1 1','전송망 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020215_22v1','2002020215_22v1 2','전송시스템 전송용량산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020215_22v1','2002020215_22v1 3','전송망 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020301_21v3','2002020301_21v3 1','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020301_21v3','2002020301_21v3 2','경제성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020301_21v3','2002020301_21v3 3','구축일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020301_21v3','2002020301_21v3 4','예산계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020302_21v3','2002020302_21v3 1','전파환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020302_21v3','2002020302_21v3 2','망기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020302_21v3','2002020302_21v3 3','개략공사비 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020302_21v3','2002020302_21v3 4','일반시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 1','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 2','무선망 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 3','장비규격서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 4','설계도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020303_21v3','2002020303_21v3 5','특별시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020304_21v3','2002020304_21v3 1','장비규격 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020304_21v3','2002020304_21v3 2','구축장비 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020304_21v3','2002020304_21v3 3','발주장비 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020306_21v3','2002020306_21v3 1','단위 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020306_21v3','2002020306_21v3 2','통합 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020306_21v3','2002020306_21v3 3','준공 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020307_21v3','2002020307_21v3 1','감리 대가 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020307_21v3','2002020307_21v3 2','법규 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020307_21v3','2002020307_21v3 3','설계 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020307_21v3','2002020307_21v3 4','시공 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020308_21v3','2002020308_21v3 1','전파기술기준 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020308_21v3','2002020308_21v3 2','무선국 개설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020308_21v3','2002020308_21v3 3','전자파장해 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020309_14v2','2002020309_14v2 1','망운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020309_14v2','2002020309_14v2 2','망품질계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020309_14v2','2002020309_14v2 3','망운용인력 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020310_21v3','2002020310_21v3 1','유지보수계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020310_21v3','2002020310_21v3 2','장애방지대책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020310_21v3','2002020310_21v3 3','유지보수인력 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020310_21v3','2002020310_21v3 4','장비장애 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020311_21v2','2002020311_21v2 1','서비스 구역 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020311_21v2','2002020311_21v2 2','전파환경 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020311_21v2','2002020311_21v2 3','전파환경 측정 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020312_21v2','2002020312_21v2 1','급전선 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020312_21v2','2002020312_21v2 2','안테나 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020312_21v2','2002020312_21v2 3','철탑 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020312_21v2','2002020312_21v2 4','안테나계 기술 규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 1','무선중계설비 설계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 2','고정무선설비 설계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 3','이동통신설비 설계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 4','위성통신설비 설계 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020313_21v2','2002020313_21v2 5','무선통신설비 기술규격 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020314_21v4','2002020314_21v4 1','현장파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020314_21v4','2002020314_21v4 2','반입장비 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020314_21v4','2002020314_21v4 3','공사비산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020314_21v4','2002020314_21v4 4','구축일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 1','설치계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 2','중계기 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 3','케이블 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 4','안테나 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020315_21v4','2002020315_21v4 5','부대장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 1','5G 액세스 장비 설치 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 2','5G 액세스 장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 3','5G 액세스 장비 케이블 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 4','부대설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020316_21v1','2002020316_21v1 5','설치 장비 성능 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020401_18v2','2002020401_18v2 1','요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020401_18v2','2002020401_18v2 2','타당성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020401_18v2','2002020401_18v2 3','시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020401_18v2','2002020401_18v2 4','전파환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 1','공사 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 2','안테나 시설 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 3','위성송수신장치 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 4','전송장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 5','전원시설 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020402_18v2','2002020402_18v2 6','준공처리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 1','감리행정 업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 2','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 3','시공 감리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 4','공정관리 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020403_18v2','2002020403_18v2 5','시공품질 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020404_18v2','2002020404_18v2 1','위성체 제어하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020404_18v2','2002020404_18v2 2','위성체 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020404_18v2','2002020404_18v2 3','위성체상태 정보감시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020404_18v2','2002020404_18v2 4','긴급 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020406_18v2','2002020406_18v2 1','지구국 장비 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020406_18v2','2002020406_18v2 2','기반 시설 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020406_18v2','2002020406_18v2 3','긴급 복구 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020407_18v2','2002020407_18v2 1','인·허가 사항 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020407_18v2','2002020407_18v2 2','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020407_18v2','2002020407_18v2 3','사업목표 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020407_18v2','2002020407_18v2 4','사업비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 1','위성 송수신장치 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 2','안테나시설 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 3','전송장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 4','전원시설 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020408_18v1','2002020408_18v1 5','지구국 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020409_18v1','2002020409_18v1 1','운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020409_18v1','2002020409_18v1 2','중계기 자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020409_18v1','2002020409_18v1 3','중계기 운용상태 감시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020409_18v1','2002020409_18v1 4','중계기 장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020501_22v3','2002020501_22v3 1','IoT 융합서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020501_22v3','2002020501_22v3 2','IoT통신망 기능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020501_22v3','2002020501_22v3 3','IoT통신망 성능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020501_22v3','2002020501_22v3 4','IoT통신망 구성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020502_22v3','2002020502_22v3 1','IoT통신망 표준 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020502_22v3','2002020502_22v3 2','IoT통신망 기술기준 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020502_22v3','2002020502_22v3 3','IoT통신망 기술규격 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 1','공정 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 2','품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 3','공사비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 4','안전 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020503_22v3','2002020503_22v3 5','감리행정업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020504_22v3','2002020504_22v3 1','무선전력전송기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020504_22v3','2002020504_22v3 2','전원시설 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020504_22v3','2002020504_22v3 3','통신접지 기술 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020504_22v3','2002020504_22v3 4','기술분석보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020505_22v3','2002020505_22v3 1','LPWAN 디바이스 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020505_22v3','2002020505_22v3 2','LPWAN 백엔드 네트워크 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020505_22v3','2002020505_22v3 3','LPWAN 백홀 네트워크 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020505_22v3','2002020505_22v3 4','LPWAN 기술분석보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020506_22v3','2002020506_22v3 1','네트워크 환경분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020506_22v3','2002020506_22v3 2','기본 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020506_22v3','2002020506_22v3 3','실시 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020506_22v3','2002020506_22v3 4','설계설명서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020507_22v3','2002020507_22v3 1','LPWAN 디바이스 네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020507_22v3','2002020507_22v3 2','LPWAN 백엔드 네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020507_22v3','2002020507_22v3 3','LPWAN 백홀 네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020507_22v3','2002020507_22v3 4','LPWAN 부대설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020508_22v3','2002020508_22v3 1','LPWAN 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020508_22v3','2002020508_22v3 2','LPWAN 디바이스 네트워크 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020508_22v3','2002020508_22v3 3','LPWAN 백엔드 네트워크 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020508_22v3','2002020508_22v3 4','LPWAN 백홀 네트워크 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020509_22v3','2002020509_22v3 1','LoWPAN 디바이스 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020509_22v3','2002020509_22v3 2','LoWPAN 근거리통신망 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020509_22v3','2002020509_22v3 3','LoWPAN 기술분석보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020510_22v3','2002020510_22v3 1','디바이스 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020510_22v3','2002020510_22v3 2','백홀 연동방식 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020510_22v3','2002020510_22v3 3','실시 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020510_22v3','2002020510_22v3 4','설계설명서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020511_22v3','2002020511_22v3 1','LoWPAN 디바이스 시스템 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020511_22v3','2002020511_22v3 2','LoWPAN 근거리 통신망 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020511_22v3','2002020511_22v3 3','LoWPAN 부대설비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020512_22v3','2002020512_22v3 1','LoWPAN 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020512_22v3','2002020512_22v3 2','LoWPAN 디바이스 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020512_22v3','2002020512_22v3 3','LoWPAN 근거리 통신망 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020512_22v3','2002020512_22v3 4','LoWPAN 부대설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020513_22v1','2002020513_22v1 1','IoT통신망 보안관리 대상 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020513_22v1','2002020513_22v1 2','디바이스 네트워크 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020513_22v1','2002020513_22v1 3','백엔드 네트워크 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020513_22v1','2002020513_22v1 4','백홀 네트워크 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020601_18v1','2002020601_18v1 1','사업 타당성 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020601_18v1','2002020601_18v1 2','사업계획서 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020601_18v1','2002020601_18v1 3','제안요청서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020601_18v1','2002020601_18v1 4','발주 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 1','공통기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 2','비상상황 단계별 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 3','장애 시 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 4','대체통신수단 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020602_18v1','2002020602_18v1 5','표준운영절차 훈련 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020603_18v1','2002020603_18v1 1','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020603_18v1','2002020603_18v1 2','기본 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020603_18v1','2002020603_18v1 3','상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020603_18v1','2002020603_18v1 4','공사시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020604_18v1','2002020604_18v1 1','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020604_18v1','2002020604_18v1 2','시공계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020604_18v1','2002020604_18v1 3','시설 공사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020604_18v1','2002020604_18v1 4','준공서류 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020605_18v1','2002020605_18v1 1','공공안전통신망 운용관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020605_18v1','2002020605_18v1 2','PS-LTE 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020605_18v1','2002020605_18v1 3','LTE-M. 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020605_18v1','2002020605_18v1 4','LTE-R 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020606_18v1','2002020606_18v1 1','정보보안관리 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020606_18v1','2002020606_18v1 2','정보보안관리 체계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020606_18v1','2002020606_18v1 3','정보보안관리 시스템 예방 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020607_18v1','2002020607_18v1 1','시험계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020607_18v1','2002020607_18v1 2','시험 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020607_18v1','2002020607_18v1 3','시험보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020608_18v1','2002020608_18v1 1','유지보수 현황 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020608_18v1','2002020608_18v1 2','유지보수 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020608_18v1','2002020608_18v1 3','운용설비상태 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020608_18v1','2002020608_18v1 4','점검결과 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020609_18v1','2002020609_18v1 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020609_18v1','2002020609_18v1 2','품질관리 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020609_18v1','2002020609_18v1 3','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020610_18v1','2002020610_18v1 1','서비스 플랫폼 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020610_18v1','2002020610_18v1 2','서비스 플랫폼 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002020610_18v1','2002020610_18v1 3','서비스 플랫폼 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 1','수요조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 2','수요분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 3','서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 4','서비스 홍보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030101_13v1','2002030101_13v1 5','서비스 컨설팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030102_16v2','2002030102_16v2 1','서비스 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030102_16v2','2002030102_16v2 2','현장작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030102_16v2','2002030102_16v2 3','안전관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030102_16v2','2002030102_16v2 4','서비스개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030103_13v1','2002030103_13v1 1','운용시설 운용계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030103_13v1','2002030103_13v1 2','운용시설 정비점검계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030103_13v1','2002030103_13v1 3','운용요원 인력계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030103_13v1','2002030103_13v1 4','운용시설 대개체 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030104_16v2','2002030104_16v2 1','통화품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030104_16v2','2002030104_16v2 2','접속품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030104_16v2','2002030104_16v2 3','성능시험 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030104_16v2','2002030104_16v2 4','품질·성능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030105_16v2','2002030105_16v2 1','교환기 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030105_16v2','2002030105_16v2 2','식별번호 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030105_16v2','2002030105_16v2 3','트래픽 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030105_16v2','2002030105_16v2 4','실내환경 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030106_16v2','2002030106_16v2 1','업무 이관받기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030106_16v2','2002030106_16v2 2','고장점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030106_16v2','2002030106_16v2 3','고장처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030106_16v2','2002030106_16v2 4','고장이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030107_13v1','2002030107_13v1 1','현장 정기점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030107_13v1','2002030107_13v1 2','선로·설비관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030107_13v1','2002030107_13v1 3','기반설비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030107_13v1','2002030107_13v1 4','자재관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030108_13v1','2002030108_13v1 1','요금정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030108_13v1','2002030108_13v1 2','요금통계 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030108_13v1','2002030108_13v1 3','사용요금 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030108_13v1','2002030108_13v1 4','사용요금 청구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 1','고객 상담하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 2','전산시스템 조작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 3','고객정보 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 4','만족도 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030109_13v1','2002030109_13v1 5','상담직원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030110_13v1','2002030110_13v1 1','고객 상담하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030110_13v1','2002030110_13v1 2','전산시스템 조작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030110_13v1','2002030110_13v1 3','고객정보 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030110_13v1','2002030110_13v1 4','고객만족도 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 1','사업계획 목표수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 2','사업계획 조직구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 3','사업계획 예산수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 4','사업계획 실행ㆍ조정ㆍ통제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030201_13v1','2002030201_13v1 5','사업계획 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 1','시장동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 2','사업타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 3','가격정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 4','신상품 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030202_13v1','2002030202_13v1 5','마케팅전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 1','영업전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 2','영업 활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 3','고객관계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 4','계약서 작성ㆍ계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030203_13v1','2002030203_13v1 5','대금 청구ㆍ정산하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030204_13v1','2002030204_13v1 1','제안 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030204_13v1','2002030204_13v1 2','제안서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030204_13v1','2002030204_13v1 3','제안서 발표하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 1','고객의 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 2','케이블 접속하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 3','통신장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 4','통신환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030205_13v1','2002030205_13v1 5','서비스 개통 행정 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 1','서비스현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 2','서비스품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 3','망 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 4','설비 시험ㆍ점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030206_13v1','2002030206_13v1 5','망관리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030207_13v1','2002030207_13v1 1','보안 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030207_13v1','2002030207_13v1 2','보안 환경 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030207_13v1','2002030207_13v1 3','보안 장비 원격 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030207_13v1','2002030207_13v1 4','보안현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 1','예방 정비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 2','결함 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 3','기능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 4','장비 예비품 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030208_16v2','2002030208_16v2 5','유지보수 현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 1','장애 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 2','장애 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 3','장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 4','작업자 할당하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030209_16v2','2002030209_16v2 5','고객 응대하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 1','교육 자료 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 2','업무기술 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 3','훈련과정 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 4','훈련과정 실습하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030210_13v1','2002030210_13v1 5','신기술 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 1','시장조사 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 2','고객 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 3','영업목표 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 4','가격정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030301_22v2','2002030301_22v2 5','홍보ㆍ판매전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030302_22v2','2002030302_22v2 1','점검정비 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030302_22v2','2002030302_22v2 2','긴급복구 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030302_22v2','2002030302_22v2 3','투입요원 산출ㆍ배치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030302_22v2','2002030302_22v2 4','교육훈련 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030303_22v2','2002030303_22v2 1','시스템 운용상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030303_22v2','2002030303_22v2 2','시스템 수요 산정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030303_22v2','2002030303_22v2 3','시스템 재배치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030303_22v2','2002030303_22v2 4','시스템 신·증설 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030304_22v2','2002030304_22v2 1','경로 상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030304_22v2','2002030304_22v2 2','경로 트래픽 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030304_22v2','2002030304_22v2 3','IP 주소자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030304_22v2','2002030304_22v2 4','우회경로 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030305_22v2','2002030305_22v2 1','소프트웨어 형상 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030305_22v2','2002030305_22v2 2','소프트웨어 기능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030305_22v2','2002030305_22v2 3','소프트웨어 기능 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030305_22v2','2002030305_22v2 4','소프트웨어 운용상태 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030306_22v3','2002030306_22v3 1','점검 리스트 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030306_22v3','2002030306_22v3 2','시스템 모니터링 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030306_22v3','2002030306_22v3 3','결과 분석 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030306_22v3','2002030306_22v3 4','점검결과보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030307_22v3','2002030307_22v3 1','시스템 메시지 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030307_22v3','2002030307_22v3 2','장애 구간 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030307_22v3','2002030307_22v3 3','장애 원인 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030307_22v3','2002030307_22v3 4','장애 결과보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 1','현장 방문하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 2','선로 현장 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 3','고장 수리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030308_22v3','2002030308_22v3 4','고장 원인 설명하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030613_17v1','2002030613_17v1 4','보안사고 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030614_17v1','2002030614_17v1 1','교육훈련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030614_17v1','2002030614_17v1 2','현장 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030614_17v1','2002030614_17v1 3','문제점 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030615_17v1','2002030615_17v1 1','고객불만 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030615_17v1','2002030615_17v1 2','고객 상담하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030615_17v1','2002030615_17v1 3','사후 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030616_17v2','2002030616_17v2 1','기능 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030616_17v2','2002030616_17v2 2','성능 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030616_17v2','2002030616_17v2 3','연동 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 1','사용자 실태조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 2','사용자 실태분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 3','서비스 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 4','서비스 타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030701_14v2','2002030701_14v2 5','서비스 확정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030702_14v2','2002030702_14v2 1','서비스 사용환경 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030702_14v2','2002030702_14v2 2','서비스 사용환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030702_14v2','2002030702_14v2 3','서비스 사용환경 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030703_14v2','2002030703_14v2 1','마케팅 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030703_14v2','2002030703_14v2 2','마케팅 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030703_14v2','2002030703_14v2 3','마케팅 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030703_14v2','2002030703_14v2 4','마케팅 결과분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030704_14v2','2002030704_14v2 1','과금정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030704_14v2','2002030704_14v2 2','실행전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030704_14v2','2002030704_14v2 3','운영방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030704_14v2','2002030704_14v2 4','실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030705_14v2','2002030705_14v2 1','개통계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030705_14v2','2002030705_14v2 2','개통 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030705_14v2','2002030705_14v2 3','개통결과 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030706_14v2','2002030706_14v2 1','운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030706_14v2','2002030706_14v2 2','서비스 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030706_14v2','2002030706_14v2 3','운영결과 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030707_14v2','2002030707_14v2 1','품질점검기준 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030707_14v2','2002030707_14v2 2','품질점검계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030707_14v2','2002030707_14v2 3','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030707_14v2','2002030707_14v2 4','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030708_14v2','2002030708_14v2 1','청구관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030708_14v2','2002030708_14v2 2','수납관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030708_14v2','2002030708_14v2 3','미납과오 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030708_14v2','2002030708_14v2 4','정산관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 1','장애대응 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 2','장애예방 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 3','장애 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 4','장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030709_14v2','2002030709_14v2 5','장애 리포팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030710_14v2','2002030710_14v2 1','고객지원 관리방안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030710_14v2','2002030710_14v2 2','고객요구사항 접수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030710_14v2','2002030710_14v2 3','고객요구사항 해결하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030710_14v2','2002030710_14v2 4','고객요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030801_20v3','2002030801_20v3 1','콘텐츠네트워크동향 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030801_20v3','2002030801_20v3 2','네트워크요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030801_20v3','2002030801_20v3 3','서비스네트워크별 전략수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030802_20v3','2002030802_20v3 1','영업 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030802_20v3','2002030802_20v3 2','수주 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030802_20v3','2002030802_20v3 3','계약 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030803_20v3','2002030803_20v3 1','고객요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030803_20v3','2002030803_20v3 2','고객불만 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030803_20v3','2002030803_20v3 3','고객불만 예방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030804_20v3','2002030804_20v3 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030804_20v3','2002030804_20v3 2','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030804_20v3','2002030804_20v3 3','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030805_20v3','2002030805_20v3 1','시스템환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030805_20v3','2002030805_20v3 2','서비스요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030805_20v3','2002030805_20v3 3','시스템요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030806_20v3','2002030806_20v3 1','서비스네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030806_20v3','2002030806_20v3 2','서비스시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030806_20v3','2002030806_20v3 3','애플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030807_20v3','2002030807_20v3 1','서비스네트워크 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030807_20v3','2002030807_20v3 2','서비스시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030807_20v3','2002030807_20v3 3','애플리케이션 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030808_20v3','2002030808_20v3 1','서비스운영현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030808_20v3','2002030808_20v3 2','서비스인프라 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030808_20v3','2002030808_20v3 3','망관리시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030809_20v3','2002030809_20v3 1','사전예방 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030809_20v3','2002030809_20v3 2','작업관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030809_20v3','2002030809_20v3 3','장애관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030810_20v3','2002030810_20v3 1','보안정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030810_20v3','2002030810_20v3 2','보안환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030810_20v3','2002030810_20v3 3','보안현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 1','시장 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 2','타당성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 3','비즈니스 모델 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 4','서비스 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 5','원가분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 6','가격정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 7','고객만족도 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 8','망발전 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030901_13v1','2002030901_13v1 9','개선전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 1','현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 3','서비스 모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 4','평가모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 5','서비스 운영 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030902_13v1','2002030902_13v1 6','보안모델 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 1','서비스 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 2','서비스 인프라 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 3','서비스 개발 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 4','서비스 수준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 5','고객관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030903_13v1','2002030903_13v1 6','위험관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 1','마케팅 시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 2','실행전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 3','서비스 촉진 정책수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 4','제품 공급정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 5','가격 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030904_13v1','2002030904_13v1 6','서비스 유통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 1','전파 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 2','음영지역 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 3','서비스 규정 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010105_14v1','2003010105_14v1 3','음향 편집 작업 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010106_14v1','2003010106_14v1 1','조명시스템 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010106_14v1','2003010106_14v1 2','조명시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010106_14v1','2003010106_14v1 3','조명시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010107_14v1','2003010107_14v1 1','카메라 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010107_14v1','2003010107_14v1 2','카메라 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010107_14v1','2003010107_14v1 3','카메라 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010108_14v1','2003010108_14v1 1','녹화 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010108_14v1','2003010108_14v1 2','녹화장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010108_14v1','2003010108_14v1 3','녹화장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010109_14v1','2003010109_14v1 1','중계방송시스템 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010109_14v1','2003010109_14v1 2','중계방송시스템 운용 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010109_14v1','2003010109_14v1 3','중계방송시스템 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010109_14v1','2003010109_14v1 4','중계방송시스템 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010110_14v1','2003010110_14v1 1','차량 유지관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010110_14v1','2003010110_14v1 2','내외부 특장 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010110_14v1','2003010110_14v1 3','발전차 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010111_14v1','2003010111_14v1 1','헬기 중계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010111_14v1','2003010111_14v1 2','위성(SNG) 중계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010111_14v1','2003010111_14v1 3','차세대 중계망 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010201_14v1','2003010201_14v1 1','제작·송출 워크플로우 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010201_14v1','2003010201_14v1 2','품질관리 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010201_14v1','2003010201_14v1 3','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010201_14v1','2003010201_14v1 4','품질관리 예산 편성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010202_14v1','2003010202_14v1 1','영상신호규격 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010202_14v1','2003010202_14v1 2','영상품질기준 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010202_14v1','2003010202_14v1 3','영상신호 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010202_14v1','2003010202_14v1 4','영상 색보정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010203_14v1','2003010203_14v1 1','음향신호규격 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010203_14v1','2003010203_14v1 2','음향품질기준 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010203_14v1','2003010203_14v1 3','음향신호 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010203_14v1','2003010203_14v1 4','음향 마스터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010204_14v1','2003010204_14v1 1','데이터신호규격 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010204_14v1','2003010204_14v1 2','데이터신호 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010204_14v1','2003010204_14v1 3','데이터신호 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010204_14v1','2003010204_14v1 4','트래픽 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010205_14v1','2003010205_14v1 1','저장매체별 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010205_14v1','2003010205_14v1 2','네트워크 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010205_14v1','2003010205_14v1 3','정보보안정책 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010205_14v1','2003010205_14v1 4','콘텐츠저장물 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010206_14v1','2003010206_14v1 1','코덱별 특성 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010206_14v1','2003010206_14v1 2','코덱 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010206_14v1','2003010206_14v1 3','코덱 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010207_14v1','2003010207_14v1 1','영상제작시스템 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010207_14v1','2003010207_14v1 2','음향제작시스템 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010207_14v1','2003010207_14v1 3','네트워크장비 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010207_14v1','2003010207_14v1 4','측정장비 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010208_14v1','2003010208_14v1 1','영상신호 분배·송출품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010208_14v1','2003010208_14v1 2','음향신호 분배·송출품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010208_14v1','2003010208_14v1 3','다중화신호 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010209_14v1','2003010209_14v1 1','종합품질관리 항목 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010209_14v1','2003010209_14v1 2','종합품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010209_14v1','2003010209_14v1 3','방송품질관리인력 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010210_14v1','2003010210_14v1 1','품질관리관련 법령 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010210_14v1','2003010210_14v1 2','국내외 기술표준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010210_14v1','2003010210_14v1 3','자체품질기준 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020101_17v2','2003020101_17v2 1','라디오 방송 미래 미디어 기술적용 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020101_17v2','2003020101_17v2 2','라디오 방송 기술 부문 운용 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020101_17v2','2003020101_17v2 3','"라디오 방송망 기획(송중계소 구축');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020102_17v2','2003020102_17v2 1','라디오 방송 기술 표준 및 정책 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020102_17v2','2003020102_17v2 2','"라디오 기술 인력 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020102_17v2','2003020102_17v2 3','무선국 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020102_17v2','2003020102_17v2 4','라디오 방송회선 신규청약 및 해지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020103_17v2','2003020103_17v2 1','음악 프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020103_17v2','2003020103_17v2 2','생방송 프로그램 제작(뉴스포함)하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020103_17v2','2003020103_17v2 3','드라마 프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020103_17v2','2003020103_17v2 4','"시사');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020104_17v2','2003020104_17v2 1','중계차 관리/운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020104_17v2','2003020104_17v2 2','공개 방송 제작(실내외 포함)하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020104_17v2','2003020104_17v2 3','스포츠 중계방송 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020104_17v2','2003020104_17v2 4','"라디오 중계생방송 제작(프로그램 내 꼭지연결');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020105_17v2','2003020105_17v2 1','보이는 라디오 제작(동영상 제작 및 생방송 포함) 및 전송하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020105_17v2','2003020105_17v2 2','"IT 방송 서비스 기술 지원 (인터넷 플레이어');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020105_17v2','2003020105_17v2 3','"멀티미디어 장비 운용/관리(시스템');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020105_17v2','2003020105_17v2 4','양방향 데이터 시스템 운용/관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 1','라디오 방송 송출 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 2','"라디오 방송 운행 스케쥴 운용(PC기반 확인');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 3','라디오 방송 송출 품질관리 및 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 4','"송출 리스크 관리(주조');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020106_17v2','2003020106_17v2 5','재해·재난방송 송출 시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020107_17v2','2003020107_17v2 1','송신 설비 관리 및 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020107_17v2','2003020107_17v2 2','방송 전송망 관리 및 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020107_17v2','2003020107_17v2 3','원격제어시설 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020107_17v2','2003020107_17v2 4','전력 설비 및 기계 설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020108_17v2','2003020108_17v2 1','"지역 상하행망');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020108_17v2','2003020108_17v2 2','IT 방송 서비스망 관리 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020108_17v2','2003020108_17v2 3','유무선 통합서비스 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020108_17v2','2003020108_17v2 4','R 커버리지 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020109_17v2','2003020109_17v2 1','"방송 시설 및 장비 유지 보수');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020109_17v2','2003020109_17v2 2','"방송 시스템 설계');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020109_17v2','2003020109_17v2 3','파일기반 시스템 설계 및 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020110_17v2','2003020110_17v2 1','미래 기술 연구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020110_17v2','2003020110_17v2 2','방송 장비 연구/개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020110_17v2','2003020110_17v2 3','개발 기술/장비 현장 적용 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 1','차세대 방송기술 환경 대응전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 4','서비스 교육 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 5','서비스 데스크 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 6','서비스 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030905_16v2','2002030905_16v2 7','서비스 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 1','무선망 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 2','서비스 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 3','무선망 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 4','유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 5','디지털 콘텐츠 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030906_13v1','2002030906_13v1 6','서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 1','표준 동향 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 2','표준 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 3','표준 제안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 4','표준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 5','표준 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030907_13v1','2002030907_13v1 6','표준 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 1','서비스 취약점 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 2','정보보호 관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 3','인프라 보안관리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 4','무선 보안관리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 5','운용 콘텐츠 보안관리 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 6','개인정보 보호하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030908_13v1','2002030908_13v1 7','서비스 보안 인증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 1','컴플라이언스 식별하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 2','컴플라이언스 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 3','컴플라이언스 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 4','컴플라이언스 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 5','지식재산권 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030909_13v1','2002030909_13v1 6','분쟁 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 1','개통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 2','장비 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 3','긴급 장애복구 이행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 4','고객지원 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 5','서비스 유지보수 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 6','품질 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002030910_16v2','2002030910_16v2 7','이동기지국 실시간 지원업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031008_19v2','2002031008_19v2 1','정기점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031008_19v2','2002031008_19v2 2','상시점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031008_19v2','2002031008_19v2 3','장비상태 판단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031009_19v2','2002031009_19v2 1','보안관리계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031009_19v2','2002031009_19v2 2','보안관리체계 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031009_19v2','2002031009_19v2 3','보안업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031009_19v2','2002031009_19v2 4','보안감사 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031011_19v2','2002031011_19v2 1','서비스 현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031011_19v2','2002031011_19v2 2','서비스 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031011_19v2','2002031011_19v2 3','시스템 구조 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031011_19v2','2002031011_19v2 4','시스템 성능 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031012_19v2','2002031012_19v2 1','교환설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031012_19v2','2002031012_19v2 2','전송설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031012_19v2','2002031012_19v2 3','기지국설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031012_19v2','2002031012_19v2 4','부대설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031013_19v2','2002031013_19v2 1','교환설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031013_19v2','2002031013_19v2 2','전송설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031013_19v2','2002031013_19v2 3','기지국설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031013_19v2','2002031013_19v2 4','부대설비 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031014_19v2','2002031014_19v2 1','상황관제 운영절차 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031014_19v2','2002031014_19v2 2','모니터링 직무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031014_19v2','2002031014_19v2 3','상황관제 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031101_19v2','2002031101_19v2 1','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031101_19v2','2002031101_19v2 2','서비스 기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031101_19v2','2002031101_19v2 3','서비스 추진계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031102_19v2','2002031102_19v2 1','서비스 체계 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031102_19v2','2002031102_19v2 2','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031102_19v2','2002031102_19v2 3','서비스 시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031102_19v2','2002031102_19v2 4','어플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 1','전파 모델 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 2','통화량 예측하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 3','셀 영역 설계기준 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 4','기지국 최대출력 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031103_19v2','2002031103_19v2 5','기지국 용량 산출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031104_19v2','2002031104_19v2 1','네트워크 운용지침서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031104_19v2','2002031104_19v2 2','네트워크 서비스 라이프사이클 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031104_19v2','2002031104_19v2 3','네트워크 운용 인프라 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031104_19v2','2002031104_19v2 4','네트워크 운용 문제 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031105_19v2','2002031105_19v2 1','네트워크 유지보수 지침서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031105_19v2','2002031105_19v2 2','네트워크 통신 회선 유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031105_19v2','2002031105_19v2 3','네트워크 서버 시스템 유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031105_19v2','2002031105_19v2 4','네트워크 유지보수 문제 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031106_19v2','2002031106_19v2 1','네트워크 최적화 요구사항 정의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031106_19v2','2002031106_19v2 2','네트워크 최적화 방안 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031106_19v2','2002031106_19v2 3','네트워크 최적화 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031107_19v2','2002031107_19v2 1','서비스 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031107_19v2','2002031107_19v2 2','서비스품질(QoS) 매뉴얼 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031107_19v2','2002031107_19v2 3','사용자 서비스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031108_19v2','2002031108_19v2 1','서비스 장애발생 요인 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031108_19v2','2002031108_19v2 2','서비스 장애 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031108_19v2','2002031108_19v2 3','서비스 장애복구 지침서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031109_19v2','2002031109_19v2 1','서비스 개선방안 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031109_19v2','2002031109_19v2 2','서비스 개선정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031110_19v2','2002031110_19v2 1','시장조사분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031110_19v2','2002031110_19v2 2','마케팅 전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031110_19v2','2002031110_19v2 3','고객관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031201_19v2','2002031201_19v2 1','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031201_19v2','2002031201_19v2 2','서비스 제공 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031201_19v2','2002031201_19v2 3','서비스 망구성 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031201_19v2','2002031201_19v2 4','관련규정 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031202_19v2','2002031202_19v2 1','위성통신서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031202_19v2','2002031202_19v2 2','위성통신망 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031202_19v2','2002031202_19v2 3','위성통신시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031208_19v2','2002031208_19v2 1','접근통제 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031208_19v2','2002031208_19v2 2','네트워크 접속 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031208_19v2','2002031208_19v2 3','보안사고 대응 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031211_19v1','2002031211_19v1 1','성능시험계획서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031211_19v1','2002031211_19v1 2','시험항목 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031211_19v1','2002031211_19v1 3','성능시험 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031211_19v1','2002031211_19v1 4','성능시험 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031212_19v2','2002031212_19v2 1','위성통신설비 기능검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031212_19v2','2002031212_19v2 2','전파품질 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031212_19v2','2002031212_19v2 3','부대설비 적합성 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031212_19v2','2002031212_19v2 4','연동성 검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031213_19v1','2002031213_19v1 1','유지보수 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031213_19v1','2002031213_19v1 2','위성통신시스템 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031213_19v1','2002031213_19v1 3','위성통신시스템 장애 복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031214_19v2','2002031214_19v2 1','과금 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031214_19v2','2002031214_19v2 2','가입자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031214_19v2','2002031214_19v2 3','교육 훈련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031214_19v2','2002031214_19v2 4','현장 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031215_19v2','2002031215_19v2 1','품질관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031215_19v2','2002031215_19v2 2','서비스 품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031215_19v2','2002031215_19v2 3','품질문서 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031303_19v2','2002031303_19v2 1','디바이스개발 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031303_19v2','2002031303_19v2 2','디바이스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031303_19v2','2002031303_19v2 3','디바이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031303_19v2','2002031303_19v2 4','디바이스 기능·성능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031304_19v2','2002031304_19v2 1','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031304_19v2','2002031304_19v2 2','서비스 플랫폼 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031304_19v2','2002031304_19v2 3','서비스 플랫폼 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031304_19v2','2002031304_19v2 4','플랫폼 기능·성능 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031308_19v2','2002031308_19v2 1','서비스품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031308_19v2','2002031308_19v2 2','서비스 품질 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031308_19v2','2002031308_19v2 3','서비스 품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031309_19v2','2002031309_19v2 1','서비스시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031309_19v2','2002031309_19v2 2','서비스수요 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031309_19v2','2002031309_19v2 3','서비스성과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031309_19v2','2002031309_19v2 4','서비스데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031311_19v2','2002031311_19v2 1','요구 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031311_19v2','2002031311_19v2 2','서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031311_19v2','2002031311_19v2 3','프로세스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031311_19v2','2002031311_19v2 4','데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031312_19v1','2002031312_19v1 1','네트워크 개발요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031312_19v1','2002031312_19v1 2','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031312_19v1','2002031312_19v1 3','네트워크 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031312_19v1','2002031312_19v1 4','네트워크 최적화 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 1','소프트웨어 요구 사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 2','소프트웨어 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 3','소프트웨어 통합 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 4','소프트웨어 인터페이스 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 5','소프트웨어 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031313_19v1','2002031313_19v1 6','소프트웨어 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031314_19v2','2002031314_19v2 1','정보시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031314_19v2','2002031314_19v2 2','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031314_19v2','2002031314_19v2 3','운용요원 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031314_19v2','2002031314_19v2 4','정보시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031315_19v2','2002031315_19v2 1','서비스 운영상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031315_19v2','2002031315_19v2 2','서비스 예방점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031315_19v2','2002031315_19v2 3','서비스 장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031315_19v2','2002031315_19v2 4','서비스 이용자 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031316_19v1','2002031316_19v1 1','보안 관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031316_19v1','2002031316_19v1 2','보안 취약점 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031316_19v1','2002031316_19v1 3','보안 사고 대응하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 1','이용자접촉 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 2','이용자요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 3','이용자요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 4','이용자요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031401_19v2','2002031401_19v2 5','신청요구개통 지시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031403_19v2','2002031403_19v2 1','품질점검계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031403_19v2','2002031403_19v2 2','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031403_19v2','2002031403_19v2 3','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031404_19v2','2002031404_19v2 1','장애현황 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031404_19v2','2002031404_19v2 2','장애 처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031404_19v2','2002031404_19v2 3','장애보고 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031404_19v2','2002031404_19v2 4','사전점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031405_19v2','2002031405_19v2 1','이용자요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031405_19v2','2002031405_19v2 2','이용자불만 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031405_19v2','2002031405_19v2 3','이용자불만 예방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031407_19v2','2002031407_19v2 1','기반설비 관리 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031407_19v2','2002031407_19v2 2','기반설비 자원 확보하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031407_19v2','2002031407_19v2 3','장비재배치 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031407_19v2','2002031407_19v2 4','IP 주소자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031408_19v2','2002031408_19v2 1','시장현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031408_19v2','2002031408_19v2 2','서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031408_19v2','2002031408_19v2 3','사업전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031408_19v2','2002031408_19v2 4','상품마케팅 촉진하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031410_19v2','2002031410_19v2 1','청구 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031410_19v2','2002031410_19v2 2','수납 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031410_19v2','2002031410_19v2 3','미납과오 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031410_19v2','2002031410_19v2 4','정산 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 1','개통계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 2','개통 지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 3','개통 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 4','개통결과 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031411_19v2','2002031411_19v2 5','개통품질 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031501_19v2','2002031501_19v2 1','환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031501_19v2','2002031501_19v2 2','상품 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031501_19v2','2002031501_19v2 3','마케팅 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 1','서비스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 2','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 3','시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 4','콘텐츠 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031502_19v2','2002031502_19v2 5','애플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 1','네트워크 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 2','시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 3','콘텐츠 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 4','애플리케이션 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031503_19v2','2002031503_19v2 5','단말기 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031504_19v2','2002031504_19v2 1','수주 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031504_19v2','2002031504_19v2 2','계약 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031504_19v2','2002031504_19v2 3','고객유지 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031504_19v2','2002031504_19v2 4','수납 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031505_19v2','2002031505_19v2 1','고객회선 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031505_19v2','2002031505_19v2 2','단말기 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031505_19v2','2002031505_19v2 3','개통 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031505_19v2','2002031505_19v2 4','단말기 재고관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031506_19v2','2002031506_19v2 1','서버 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031506_19v2','2002031506_19v2 2','통신회선 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031506_19v2','2002031506_19v2 3','서비스 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031506_19v2','2002031506_19v2 4','단말기 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 1','서버 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 2','통신회선 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 3','서비스 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 4','단말기 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031507_19v2','2002031507_19v2 5','고장이력 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031508_19v2','2002031508_19v2 1','서버인프라 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031508_19v2','2002031508_19v2 2','백업·복구 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031508_19v2','2002031508_19v2 3','보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031508_19v2','2002031508_19v2 4','네트워크 사용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031509_19v2','2002031509_19v2 1','콜센터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031509_19v2','2002031509_19v2 2','장애 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031509_19v2','2002031509_19v2 3','서비스 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031510_19v2','2002031510_19v2 1','서버운용자 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031510_19v2','2002031510_19v2 2','개통기사 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 1','서비스 기획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 2','서비스 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 3','서비스 네트워크 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 4','서비스 운영관리 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031601_19v2','2002031601_19v2 5','서비스 데이터베이스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031602_19v2','2002031602_19v2 1','서비스 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031602_19v2','2002031602_19v2 2','서비스 요건 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031602_19v2','2002031602_19v2 3','서비스 마케팅 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031602_19v2','2002031602_19v2 4','서비스 마케팅 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 1','서비스기획 적정성 평가하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 2','사전 대응 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 3','프로세스 체계수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 4','수행평가 계획 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031603_19v2','2002031603_19v2 5','프로젝트 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 1','서비스 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 2','하드웨어 시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 3','시스템 소프트웨어 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 4','전원 시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031604_19v2','2002031604_19v2 5','완료보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031605_19v2','2002031605_19v2 1','하드웨어 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031605_19v2','2002031605_19v2 2','소프트웨어 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031605_19v2','2002031605_19v2 3','망 연결하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031605_19v2','2002031605_19v2 4','설치 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031606_19v2','2002031606_19v2 1','물리적 기능시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031606_19v2','2002031606_19v2 2','부분적 성능시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031606_19v2','2002031606_19v2 3','종합 성능시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031606_19v2','2002031606_19v2 4','문서화 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031607_19v2','2002031607_19v2 1','서비스 개통 시나리오 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031607_19v2','2002031607_19v2 2','서비스 개통 환경구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031607_19v2','2002031607_19v2 3','서비스 개통시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031607_19v2','2002031607_19v2 4','서비스 개통 확인인증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 1','서비스 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 2','고객 요청처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 3','장애 대응조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 4','서비스 변경적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031608_19v2','2002031608_19v2 5','서비스 운용 보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031609_19v2','2002031609_19v2 1','시스템 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031609_19v2','2002031609_19v2 2','시스템 구성 및 복구 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031609_19v2','2002031609_19v2 3','시스템 장애관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031609_19v2','2002031609_19v2 4','시스템 보안관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031701_13v1','2002031701_13v1 1','자료조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031701_13v1','2002031701_13v1 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031701_13v1','2002031701_13v1 3','기술 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031701_13v1','2002031701_13v1 4','추진전략 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031702_13v1','2002031702_13v1 1','시장현황 자료 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031702_13v1','2002031702_13v1 2','시장현황 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031702_13v1','2002031702_13v1 3','상품화 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031702_13v1','2002031702_13v1 4','마케팅 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 1','개발방법 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 2','개발 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 3','개발 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 4','시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031703_13v1','2002031703_13v1 5','시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031704_13v1','2002031704_13v1 1','시스템 구매 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031704_13v1','2002031704_13v1 2','시스템 계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031704_13v1','2002031704_13v1 3','시스템 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031705_13v1','2002031705_13v1 1','현장조사 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031705_13v1','2002031705_13v1 2','시공 설계 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031705_13v1','2002031705_13v1 3','시공 공정관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031705_13v1','2002031705_13v1 4','전파환경 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 1','서비스 운용규정 정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 2','서비스 운용교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 3','서비스 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 4','서비스 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031706_13v1','2002031706_13v1 5','서비스 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031707_13v1','2002031707_13v1 1','유지보수 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031707_13v1','2002031707_13v1 2','유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031707_13v1','2002031707_13v1 3','이력관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031708_16v2','2002031708_16v2 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031708_16v2','2002031708_16v2 2','데이터 신뢰도 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031708_16v2','2002031708_16v2 3','고객만족도 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031708_16v2','2002031708_16v2 4','시스템 환경개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031709_13v1','2002031709_13v1 1','서비스 방침 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031709_13v1','2002031709_13v1 2','제품기술  교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031709_13v1','2002031709_13v1 3','상담예절 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 1','시스템 보안취약점 진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 2','정보보호 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 3','서비스 보안대책 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 4','서비스 콘텐츠 보안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031710_13v1','2002031710_13v1 5','개인정보 보호하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 1','서비스 플랫폼 동향분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 2','서비스 플랫폼 요구분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 3','서비스 플랫폼 전략수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 4','서비스 플랫폼 영업관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031801_16v1','2002031801_16v1 5','서비스 플랫폼 고객관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 1','서비스시스템 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 2','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 3','서비스 네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 4','서비스시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031802_16v1','2002031802_16v1 5','애플리케이션 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031803_16v1','2002031803_16v1 1','전산장비 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031803_16v1','2002031803_16v1 2','업무 프로그램 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031803_16v1','2002031803_16v1 3','특정프로그램 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031803_16v1','2002031803_16v1 4','플랫폼 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031804_16v1','2002031804_16v1 1','품질성능 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031804_16v1','2002031804_16v1 2','운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031804_16v1','2002031804_16v1 3','유지보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031804_16v1','2002031804_16v1 4','품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031805_16v1','2002031805_16v1 1','보안관리 행정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031805_16v1','2002031805_16v1 2','시스템 보안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031805_16v1','2002031805_16v1 3','플랫폼 보안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031805_16v1','2002031805_16v1 4','보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031806_16v1','2002031806_16v1 1','마케팅 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031806_16v1','2002031806_16v1 2','소비자 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031806_16v1','2002031806_16v1 3','미디어 플랫폼 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031806_16v1','2002031806_16v1 4','콘텐츠 크리에이티브 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 1','고객 발굴하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 2','제안서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 3','프레젠테이션하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 4','고객사 협상하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031807_16v1','2002031807_16v1 5','고객사 계약하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031808_16v1','2002031808_16v1 1','디지털미디어 특성 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031808_16v1','2002031808_16v1 2','디지털미디어 수용자 행태 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031808_16v1','2002031808_16v1 3','디지털미디어 상품 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031808_16v1','2002031808_16v1 4','신규 미디어와 미디어 상품 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031809_16v1','2002031809_16v1 1','예산목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031809_16v1','2002031809_16v1 2','실제 소요예산 책정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031809_16v1','2002031809_16v1 3','사업예산 배분하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031809_16v1','2002031809_16v1 4','예산견적서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 1','트리플(triple) 미디어 목표 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 2','트리플(triple) 미디어 믹스 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 3','트리플(triple) 미디어 스케쥴 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 4','트리플(triple) 미디어 비히클 효율 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031810_16v1','2002031810_16v1 5','트리플(triple) 미디어 구매 집행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031811_16v1','2002031811_16v1 1','콘텐츠 제작 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031811_16v1','2002031811_16v1 2','콘텐츠 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031811_16v1','2002031811_16v1 3','콘텐츠 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031811_16v1','2002031811_16v1 4','콘텐츠 편집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031812_16v1','2002031812_16v1 1','미디어 운영 프로세스 시스템 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031812_16v1','2002031812_16v1 2','미디어 운영 시스템 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031812_16v1','2002031812_16v1 3','미디어 운영 관계사와 소통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031812_16v1','2002031812_16v1 4','미디어 운영 보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031813_16v1','2002031813_16v1 1','콘텐츠의 확산 핵심타깃 도출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031813_16v1','2002031813_16v1 2','확산전략 구조화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031813_16v1','2002031813_16v1 3','확산프로모션 기획 실행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031813_16v1','2002031813_16v1 4','디지털확산미디어 마케팅 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031814_16v1','2002031814_16v1 1','성과분석 기준 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031814_16v1','2002031814_16v1 2','미디어 산출 보고서 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031814_16v1','2002031814_16v1 3','성과데이터 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031815_16v1','2002031815_16v1 1','성과 보고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031815_16v1','2002031815_16v1 2','수정기획안 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031815_16v1','2002031815_16v1 3','추가 이행과제 제안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031815_16v1','2002031815_16v1 4','고객 사후관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031901_17v1','2002031901_17v1 1','환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031901_17v1','2002031901_17v1 2','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031901_17v1','2002031901_17v1 3','전략기획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031902_17v1','2002031902_17v1 1','실감형콘텐츠 라이선스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031902_17v1','2002031902_17v1 2','실감형콘텐츠 구매 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031902_17v1','2002031902_17v1 3','실감형통신서비스 마케팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031903_17v1','2002031903_17v1 1','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031903_17v1','2002031903_17v1 2','서비스 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031903_17v1','2002031903_17v1 3','서비스 네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031903_17v1','2002031903_17v1 4','서비스 서브 시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031904_17v1','2002031904_17v1 1','구축 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031904_17v1','2002031904_17v1 2','공정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031904_17v1','2002031904_17v1 3','서비스 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031905_17v1','2002031905_17v1 1','운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031905_17v1','2002031905_17v1 2','시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031905_17v1','2002031905_17v1 3','운용보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031906_17v1','2002031906_17v1 1','정보보안계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031906_17v1','2002031906_17v1 2','정보보안 문제 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031906_17v1','2002031906_17v1 3','정보보안 예방활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031907_17v1','2002031907_17v1 1','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031907_17v1','2002031907_17v1 2','품질점검 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031907_17v1','2002031907_17v1 3','품질 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031907_17v1','2002031907_17v1 4','품질 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031908_17v1','2002031908_17v1 1','유지보수업무 계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031908_17v1','2002031908_17v1 2','서비스 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031908_17v1','2002031908_17v1 3','처리보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031909_17v1','2002031909_17v1 1','고객요구사항 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031909_17v1','2002031909_17v1 2','고객불만 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031909_17v1','2002031909_17v1 3','고객불만 예방하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031910_17v1','2002031910_17v1 1','단말기 개통관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031910_17v1','2002031910_17v1 2','단말기 개통작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031910_17v1','2002031910_17v1 3','단말기 개통확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002031910_17v1','2002031910_17v1 4','단말기 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040102_22v2','2002040102_22v2 1','가상현실 기반 시스템 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040102_22v2','2002040102_22v2 2','가상현실 기반 시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040102_22v2','2002040102_22v2 3','가상현실 기반 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040104_22v2','2002040104_22v2 1','영상 스티칭하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040104_22v2','2002040104_22v2 2','컬러그레이딩 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040104_22v2','2002040104_22v2 3','영상객체요소 병합하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040107_22v2','2002040107_22v2 1','음악 소스 후반 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040107_22v2','2002040107_22v2 2','음향 소스 후반 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040107_22v2','2002040107_22v2 3','오디오 소스 상호작용 프로그래밍하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 1','알고리즘 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 2','콘텐츠 리소스 적용 프로그래밍하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 3','인공지능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 4','가상현실 기능요소 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040108_22v2','2002040108_22v2 5','가상현실 플랫폼 응용프로그래밍하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040109_22v2','2002040109_22v2 1','백엔드 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040109_22v2','2002040109_22v2 2','프런트엔드 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040109_22v2','2002040109_22v2 3','"클라이언트 서버(C2S');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040109_22v2','2002040109_22v2 4','"피어 투 피어(P2P');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040110_22v2','2002040110_22v2 1','아카이빙 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040110_22v2','2002040110_22v2 2','저작권 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040110_22v2','2002040110_22v2 3','가상현실 콘텐츠 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040110_22v2','2002040110_22v2 4','가상현실 콘텐츠 유지보수하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040111_22v1','2002040111_22v1 1','UI/UX 시스템 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040111_22v1','2002040111_22v1 2','UI/UX 시스템 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040111_22v1','2002040111_22v1 3','UI/UX 시스템 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040112_22v2','2002040112_22v2 1','가상현실 콘텐츠 콘셉트 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040112_22v2','2002040112_22v2 2','프로젝트 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040112_22v2','2002040112_22v2 3','가상현실 서비스 기획하기 ');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040113_22v2','2002040113_22v2 1','가상현실 요소 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040113_22v2','2002040113_22v2 2','가상현실 영상 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040113_22v2','2002040113_22v2 3','가상현실 CG 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040113_22v2','2002040113_22v2 4','가상현실 음향 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 1','3D 모델링 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 2','텍스쳐 맵 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 3','3D 애니메이션 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 4','3D 이펙트 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040114_22v2','2002040114_22v2 5','모션캡처와 볼륨메트릭 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040201_22v2','2002040201_22v2 1','실감콘텐츠 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040201_22v2','2002040201_22v2 2','실감콘텐츠 촬영콘셉트 제안하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040201_22v2','2002040201_22v2 3','실감콘텐츠 촬용내용 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040201_22v2','2002040201_22v2 4','실감콘텐츠 촬영기획안 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040203_22v2','2002040203_22v2 1','포토그래매트리 촬영 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040203_22v2','2002040203_22v2 2','레이저스캔 촬영 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040203_22v2','2002040203_22v2 3','360도 VR 촬영 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040204_22v2','2002040204_22v2 1','포토그래매트리 촬영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040204_22v2','2002040204_22v2 2','레이저스캔 촬영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040204_22v2','2002040204_22v2 3','360도 VR 촬영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040205_22v2','2002040205_22v2 1','포토그래매트리 촬영장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040205_22v2','2002040205_22v2 2','레이저스캔 촬영장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040205_22v2','2002040205_22v2 3','360도 VR 촬영장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040206_22v2','2002040206_22v2 1','포토그래매트리 촬영장비 세팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040206_22v2','2002040206_22v2 2','포토그래매트리 촬영장비 사전점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040206_22v2','2002040206_22v2 3','포토그래매트리 촬영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040206_22v2','2002040206_22v2 4','포토그래매트리 디지털이미지 전환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040207_22v2','2002040207_22v2 1','레이저스캔 장비 세팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040207_22v2','2002040207_22v2 2','레이저스캔 사전점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040207_22v2','2002040207_22v2 3','레이저스캔하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040207_22v2','2002040207_22v2 4','레이저스캔 디지털이미지 전환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040208_22v2','2002040208_22v2 1','360도 VR 촬영장비 세팅하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040208_22v2','2002040208_22v2 2','360도 VR 촬영 사전점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040208_22v2','2002040208_22v2 3','360도 VR 촬영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040208_22v2','2002040208_22v2 4','360도 VR 촬영데이터 전환하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040210_22v2','2002040210_22v2 1','실감콘텐츠 최적화작업 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040210_22v2','2002040210_22v2 2','실감콘텐츠 최적화작업 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040301_22v2','2002040301_22v2 1','콘텐츠 기획 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040301_22v2','2002040301_22v2 2','콘텐츠 개발 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040301_22v2','2002040301_22v2 3','콘텐츠 서비스 운영 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040302_22v2','2002040302_22v2 1','증강현실 UI/UX 콘셉트 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040302_22v2','2002040302_22v2 2','증강현실 UI/UX 시나리오 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040302_22v2','2002040302_22v2 3','증강현실 UI/UX 사용성 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040306_22v2','2002040306_22v2 1','엔진환경 기반 리소스 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040306_22v2','2002040306_22v2 2','디바이스 기반 리소스 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040306_22v2','2002040306_22v2 3','플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040307_22v2','2002040307_22v2 1','증강현실 콘텐츠 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040307_22v2','2002040307_22v2 2','증강현실 콘텐츠 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040307_22v2','2002040307_22v2 3','증강현실 콘텐츠 품질검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040307_22v2','2002040307_22v2 4','증강현실 콘텐츠 인도하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040308_22v2','2002040308_22v2 1','네트워크 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040308_22v2','2002040308_22v2 2','콘텐츠 서버 기능 구현하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040309_22v2','2002040309_22v2 1','증강현실 콘텐츠 데이터베이스 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040309_22v2','2002040309_22v2 2','객체 데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040310_22v1','2002040310_22v1 1','증강현실 제작 리소스 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040310_22v1','2002040310_22v1 2','증강현실 제작 리소스 개발 발주하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040310_22v1','2002040310_22v1 3','증강현실 제작 리소스 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040311_22v1','2002040311_22v1 1','증강현실 실시간 서비스 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040311_22v1','2002040311_22v1 2','증강현실 실시간 서비스 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2002040311_22v1','2002040311_22v1 3','증강현실 실시간 서비스 송출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010101_14v1','2003010101_14v1 1','중계방송 기술정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010101_14v1','2003010101_14v1 2','중계방송 자원 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010101_14v1','2003010101_14v1 3','중계방송 제작지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010101_14v1','2003010101_14v1 4','중계방송 대내외 협력하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010102_14v1','2003010102_14v1 1','중계방송시스템 구축 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010102_14v1','2003010102_14v1 2','중계방송시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010102_14v1','2003010102_14v1 3','중계방송시스템 품질유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010103_14v1','2003010103_14v1 1','중계전송망 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010103_14v1','2003010103_14v1 2','중계전송망 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010103_14v1','2003010103_14v1 3','중계전송망 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010104_14v1','2003010104_14v1 1','영상제작시스템 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010104_14v1','2003010104_14v1 2','영상제작시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010104_14v1','2003010104_14v1 3','영상 편집 작업 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010104_14v1','2003010104_14v1 4','버츄얼 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010105_14v1','2003010105_14v1 1','음향제작시스템 운용계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003010105_14v1','2003010105_14v1 2','음향제작시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 2','방송기술 운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 3','"방송망 기획하기 (방송망');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 4','방송기술인력 운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 5','방송장비 구매 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020201_17v2','2003020201_17v2 6','방송시설 및 장비 운영 표준안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020202_13v1','2003020202_13v1 1','프로그램 제작기술 총괄하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020202_13v1','2003020202_13v1 2','프로그램 특성에 적합한 제작기술 요소 결합 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020202_13v1','2003020202_13v1 3','프로그램 특성에 적합한 영상 스위칭 업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020202_13v1','2003020202_13v1 4','방송 제작 품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 1','안정적인 생방송 진행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 2','방송시스템을 최적의 상태로 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 3','영상장비의 세팅과 조정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 4','프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020203_17v2','2003020203_17v2 5','가상현실 프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 1','프로그램 제작 협의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 2','"음향시스템 설계');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 3','생방송 음향제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 4','"녹음');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020204_17v2','2003020204_17v2 5','"음향품질 관리');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 1','프로그램 제작 협의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 2','"조명 디자인 플랜 작성');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 3','조명 시뮬레이션 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 4','프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 5','조명 품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020205_13v1','2003020205_13v1 6','조명 시스템 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 1','프로그램 제작 협의하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 2','"프로그램 믹싱 (영상');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 3','"프로그램 마스터링 (영상');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 4','"칼라 코렉션');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020206_13v1','2003020206_13v1 5','NPS 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020207_17v2','2003020207_17v2 1','중계방송 기획 및 계획수립 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020207_17v2','2003020207_17v2 2','회선망 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020207_17v2','2003020207_17v2 3','"프로그램 녹화');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020207_17v2','2003020207_17v2 4','"중계차');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020208_17v2','2003020208_17v2 1','TV방송 운행 스케줄 운용하기 (APC 운용)');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020208_17v2','2003020208_17v2 2','"TV 송출장비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020208_17v2','2003020208_17v2 3','"송출사고 예방');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020208_17v2','2003020208_17v2 4','"TV방송 송출품질관리');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020209_17v2','2003020209_17v2 1','방송 송출망·중계망 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020209_17v2','2003020209_17v2 2','지역방송국 상하행망 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020209_17v2','2003020209_17v2 3','사내 분배망 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 1','송신장비 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 2','안테나 및 급전계통 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 3','전력 및 기계설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 4','방송 회선 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 5','원격제어 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020210_17v2','2003020210_17v2 6','방송송신 영역관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 1','국내외 기술 동향 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 2','기술 기준 및 신호 규격 이해하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 3','프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 4','송출 및 송신 시설 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020211_17v1','2003020211_17v1 5','부가서비스 기획 및 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020301_17v2','2003020301_17v2 1','DMB 방송국 재허가 자료 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020301_17v2','2003020301_17v2 2','DMB 방송채널 구성 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020302_13v1','2003020302_13v1 1','DMB 서비스 구성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020302_13v1','2003020302_13v1 2','DMB 표준화 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020302_13v1','2003020302_13v1 3','DMB 서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020302_13v1','2003020302_13v1 4','DMB 서비스 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 1','수신단말 인증신청하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 2','인증시스템 및 표준스트림 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 3','인증 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 4','인증서 취득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020303_17v2','2003020303_17v2 5','호환성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 1','데이터 수신하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 2','데이터 가공하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 3','테이터 전송하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 4','데이터 ON-Air 수신 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020304_17v2','2003020304_17v2 5','양방향 서비스 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020305_17v2','2003020305_17v2 1','APC운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020305_17v2','2003020305_17v2 2','편성운행 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020305_17v2','2003020305_17v2 3','광고운행 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020306_17v2','2003020306_17v2 1','Encoder 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020306_17v2','2003020306_17v2 2','MUX 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020306_17v2','2003020306_17v2 3','TPEG 시스템 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020307_17v2','2003020307_17v2 1','방송소재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020307_17v2','2003020307_17v2 2','방송본 보존 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020307_17v2','2003020307_17v2 3','방송신호  검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020308_17v2','2003020308_17v2 1','송중계기 원격 감시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020308_17v2','2003020308_17v2 2','송중계기 원격 제어하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020308_17v2','2003020308_17v2 3','송중계기 원격 조치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020309_17v2','2003020309_17v2 1','무선국 허가 받기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020309_17v2','2003020309_17v2 2','무선국 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020309_17v2','2003020309_17v2 3','무선국  검사 받기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020309_17v2','2003020309_17v2 4','무선국 유지업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020310_17v2','2003020310_17v2 1','송중계소 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020310_17v2','2003020310_17v2 2','DMBR 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020310_17v2','2003020310_17v2 3','난시청 해소 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020310_17v2','2003020310_17v2 4','STL 구성 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020311_17v2','2003020311_17v2 1','송신기 운용상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020311_17v2','2003020311_17v2 2','송신기 장애 대처하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020311_17v2','2003020311_17v2 3','SFN 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020401_17v2','2003020401_17v2 1','기술 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020401_17v2','2003020401_17v2 2','기술정책수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020401_17v2','2003020401_17v2 3','신규장비도입 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020401_17v2','2003020401_17v2 4','평가보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020402_17v2','2003020402_17v2 1','제작관련 기술부분 총괄하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020402_17v2','2003020402_17v2 2','제작프로그램 특성 이해하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020402_17v2','2003020402_17v2 3','비디오 스위쳐 조작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020403_17v2','2003020403_17v2 1','"영상 관련 장비 점검');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020403_17v2','2003020403_17v2 2','화질 관찰하며 영상레벨 조정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020403_17v2','2003020403_17v2 3','영상 관련 장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020404_17v2','2003020404_17v2 1','"음향관련 장비 점검');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020404_17v2','2003020404_17v2 2','음향 관찰 측정하며 최적으로 유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020404_17v2','2003020404_17v2 3','음향관련 장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020405_17v2','2003020405_17v2 1','"조명관련 장비 점검');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020405_17v2','2003020405_17v2 2','"조도');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020405_17v2','2003020405_17v2 3','조명장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020406_17v2','2003020406_17v2 1','중계방송위한 현장답사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020406_17v2','2003020406_17v2 2','"중계방송에 적합한 방송회선선택');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020406_17v2','2003020406_17v2 3','중계시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020407_17v2','2003020407_17v2 1','"편집장비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020407_17v2','2003020407_17v2 2','프로그램 종합편집(마스터링)하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020407_17v2','2003020407_17v2 3','칼라 콜렉션 작업하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020408_17v2','2003020408_17v2 1','문자 자막기 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020408_17v2','2003020408_17v2 2','그래픽영상프로그램 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020408_17v2','2003020408_17v2 3','가상 스튜디오 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020409_17v2','2003020409_17v2 1','"방송 네트워크  운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020409_17v2','2003020409_17v2 2','"아카이브 시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020409_17v2','2003020409_17v2 3','"네트워크 기반 제작 시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020410_17v2','2003020410_17v2 1','"송출 장비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020410_17v2','2003020410_17v2 2','자동 송출제어 프로그램 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020410_17v2','2003020410_17v2 3','송수신 망 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020410_17v2','2003020410_17v2 4','신호품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020411_17v2','2003020411_17v2 1','방송장비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020411_17v2','2003020411_17v2 2','방송장비 수리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020411_17v2','2003020411_17v2 3','"장비 Test');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020412_17v2','2003020412_17v2 1','국내외 방송시장 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020412_17v2','2003020412_17v2 2','기술전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020412_17v2','2003020412_17v2 3','방송관련 기술규제 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020412_17v2','2003020412_17v2 4','기술운용 타당성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020413_17v2','2003020413_17v2 1','일정관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020413_17v2','2003020413_17v2 2','품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020414_17v2','2003020414_17v2 1','24시간 시스템 관제하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020414_17v2','2003020414_17v2 2','장비별 장애 처리절차 기술 습득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020414_17v2','2003020414_17v2 3','방송 설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020414_17v2','2003020414_17v2 4','재난방송 설비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 1','단말기 운영현황 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 2','기술요소 분석서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 3','서비스 요구사항 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 4','소프트웨어 운영체제 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020415_17v2','2003020415_17v2 5','최종품질 정의서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020416_17v2','2003020416_17v2 1','단말기 시험환경 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020416_17v2','2003020416_17v2 2','TEST BED H/E 운영 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020416_17v2','2003020416_17v2 3','소프트웨어 품질 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020416_17v2','2003020416_17v2 4','하드웨어 품질 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 1','기술동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 2','네트워크 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 3','보안시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 4','투자계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 5','신규도입장비 기술 특성 검증하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 6','IP주소 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020417_17v2','2003020417_17v2 7','네트워크 관제 정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020418_17v2','2003020418_17v2 1','공정관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020418_17v2','2003020418_17v2 2','테스트 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020418_17v2','2003020418_17v2 3','단위 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020418_17v2','2003020418_17v2 4','통합테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020419_17v2','2003020419_17v2 1','트래픽 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020419_17v2','2003020419_17v2 2','장비 모니터링하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020419_17v2','2003020419_17v2 3','점검일지 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020419_17v2','2003020419_17v2 4','장애처리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 1','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 2','설계도서 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 3','행정업무 수행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 4','공정 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 5','표준 시공법으로 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 6','품질관리 계획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 7','안전관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020420_17v2','2003020420_17v2 8','준공검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 1','전송선로 설비 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 2','전송선로설비 설계변경 시 수정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 3','설계 입력/출력하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 4','망 관리 시스템(NMS) 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020421_17v2','2003020421_17v2 5','품질지표관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020422_17v2','2003020422_17v2 1','자재 구매하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020422_17v2','2003020422_17v2 2','자재 입출고하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020422_17v2','2003020422_17v2 3','자재 검수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020422_17v2','2003020422_17v2 4','자재 현황 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020423_17v2','2003020423_17v2 1','신규(이전) 인입선 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020423_17v2','2003020423_17v2 2','해지 인입선 철거하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020423_17v2','2003020423_17v2 3','신호 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020423_17v2','2003020423_17v2 4','단말기 작동상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020424_17v2','2003020424_17v2 1','가입자 단말기 입력 신호 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020424_17v2','2003020424_17v2 2','단말기 작동상태 점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020424_17v2','2003020424_17v2 3','불량 단말기 교체하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 1','미디어환경대응전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 2','운영계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 3','투자계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 4','신규서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020501_14v1','2003020501_14v1 5','기술기준표준안 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 1','실시간 송출시스템 설계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 2','VOD/CDN 설계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 3','제어시스템 설계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 4','네트워크 설계구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020502_14v1','2003020502_14v1 5','단말기 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020503_16v2','2003020503_16v2 1','방송회선 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020503_16v2','2003020503_16v2 2','방송신호 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020503_16v2','2003020503_16v2 3','압축다중화 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020504_16v2','2003020504_16v2 1','콘텐츠 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020504_16v2','2003020504_16v2 2','인제스트 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020504_16v2','2003020504_16v2 3','콘텐츠 압축 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020505_14v1','2003020505_14v1 1','콘텐츠 배포하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020505_14v1','2003020505_14v1 2','QoS 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020505_14v1','2003020505_14v1 3','세션트래픽 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020506_16v2','2003020506_16v2 1','양방향 데이터방송플랫폼 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020506_16v2','2003020506_16v2 2','연동형 데이터서비스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020506_16v2','2003020506_16v2 3','독립형 데이터서비스 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020507_16v2','2003020507_16v2 1','실시간 서비스네트워크 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020507_16v2','2003020507_16v2 2','스트리밍서비스네트워크 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020507_16v2','2003020507_16v2 3','네트워크 보안 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 1','프로그램정보 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 2','채널제어시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 3','EPG 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 4','인증시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020508_14v1','2003020508_14v1 5','서비스통계 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020509_16v2','2003020509_16v2 1','서비스품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020509_16v2','2003020509_16v2 2','플랫폼 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020509_16v2','2003020509_16v2 3','시스템 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020509_16v2','2003020509_16v2 4','시스템 보안운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020510_14v1','2003020510_14v1 1','실시간채널암호화 인증관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020510_14v1','2003020510_14v1 2','스트리밍서비스암호화 인증관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020510_14v1','2003020510_14v1 3','콘텐츠암호화 인증관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020510_14v1','2003020510_14v1 4','가입자권한 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020511_14v1','2003020511_14v1 1','실시간광고 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020511_14v1','2003020511_14v1 2','VOD광고 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020511_14v1','2003020511_14v1 3','OAP 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020512_14v1','2003020512_14v1 1','단말H/W 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020512_14v1','2003020512_14v1 2','단말S/W 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020512_14v1','2003020512_14v1 3','통합단말 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020513_14v1','2003020513_14v1 1','인입네트워크 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020513_14v1','2003020513_14v1 2','인입네트워크 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020513_14v1','2003020513_14v1 3','단말기 설치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020513_14v1','2003020513_14v1 4','단말기 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020514_14v1','2003020514_14v1 1','응용서비스S/W 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020514_14v1','2003020514_14v1 2','응용서비스S/W 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003020514_14v1','2003020514_14v1 3','응용서비스S/W 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030101_17v2','2003030101_17v2 1','서비스 기술 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030101_17v2','2003030101_17v2 2','서비스 기술 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030101_17v2','2003030101_17v2 3','서비스 기술 실행계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030102_17v2','2003030102_17v2 1','시스템 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030102_17v2','2003030102_17v2 2','시스템 구조 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030102_17v2','2003030102_17v2 3','시스템 상세 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030103_17v2','2003030103_17v2 1','시스템 구축 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030103_17v2','2003030103_17v2 2','시스템 구축 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030103_17v2','2003030103_17v2 3','시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030104_17v2','2003030104_17v2 1','콘텐츠 시장 수요조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030104_17v2','2003030104_17v2 2','콘텐츠 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030104_17v2','2003030104_17v2 3','"콘텐츠 제작');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030104_17v2','2003030104_17v2 4','"콘텐츠 관리하기 (저작권');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030105_17v2','2003030105_17v2 1','송출 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030105_17v2','2003030105_17v2 2','통합망 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030105_17v2','2003030105_17v2 3','유무선 전송 시스템 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030105_17v2','2003030105_17v2 4','시스템 기능지원하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030106_17v2','2003030106_17v2 1','장비관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030106_17v2','2003030106_17v2 2','서비스 품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030106_17v2','2003030106_17v2 3','망구성 최적화 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030107_17v2','2003030107_17v2 1','기술 기준 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030107_17v2','2003030107_17v2 2','신호품질 보존하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030107_17v2','2003030107_17v2 3','중계분배기 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030108_17v2','2003030108_17v2 1','단말기기 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030108_17v2','2003030108_17v2 2','단말기기 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030108_17v2','2003030108_17v2 3','단말기기 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030108_17v2','2003030108_17v2 4','단말기기 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030109_17v2','2003030109_17v2 1','응용서비스 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030109_17v2','2003030109_17v2 2','응용서비스 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030109_17v2','2003030109_17v2 3','응용서비스 품질관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030109_17v2','2003030109_17v2 4','응용서비스 유지보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030110_17v2','2003030110_17v2 1','예방점검하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030110_17v2','2003030110_17v2 2','장애진단하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030110_17v2','2003030110_17v2 3','장애복구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030111_17v2','2003030111_17v2 1','정보보안계획수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030111_17v2','2003030111_17v2 2','정보보안 문제 개선하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030111_17v2','2003030111_17v2 3','정보보안 예방활동 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030201_22v2','2003030201_22v2 1','신규 서비스  정책 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030201_22v2','2003030201_22v2 2','기술 환경 분석 및 대응책 마련하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030201_22v2','2003030201_22v2 3','신규 도입장비 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030201_22v2','2003030201_22v2 4','표준화 활동 및 대외 협력활동하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030203_22v3','2003030203_22v3 1','조명 관련 기기 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030203_22v3','2003030203_22v3 2','음향 관련기기 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030203_22v3','2003030203_22v3 3','영상 관련기기 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030203_22v3','2003030203_22v3 4','중계(차)시스템 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030204_22v2','2003030204_22v2 1','영상편집 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030204_22v2','2003030204_22v2 2','NPS 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030204_22v2','2003030204_22v2 3','음향편집 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030205_22v2','2003030205_22v2 1','문자발생기 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030205_22v2','2003030205_22v2 2','영상그래픽 장비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030205_22v2','2003030205_22v2 3','가상 스튜디오 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030206_22v3','2003030206_22v3 1','스토리지 시스템 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030206_22v3','2003030206_22v3 2','콘텐츠 관리시스템 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030206_22v3','2003030206_22v3 3','아카이빙 시스템 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 1','지상파 방송송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 2','케이블 방송송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 3','IPTV 방송송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 4','위성 방송송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 5','부가서비스 솔루션 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030207_22v3','2003030207_22v3 6','OTT 송출시스템 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 1','위성 송/수신설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 2','광 송/수신설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 3','무선 송/수신설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 4','IP 송/수신 설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 5','송신소 설비 운용 및 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030208_22v3','2003030208_22v3 6','HFC 송/수신 설비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030209_22v3','2003030209_22v3 1','신호품질 유지관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030209_22v3','2003030209_22v3 2','콘텐츠 품질 유지 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030209_22v3','2003030209_22v3 3','신호품질 기술기준 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030210_22v2','2003030210_22v2 1','유지보수 항목 정의 (Check List 정의 확정 및 운용)');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030210_22v2','2003030210_22v2 2','연간 유지보수 검토 및 계약');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030210_22v2','2003030210_22v2 3','정기적 점검/보수/수정 시행 및 관리');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030212_22v3','2003030212_22v3 1','시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030212_22v3','2003030212_22v3 2','방송시스템 및 기반설비 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030212_22v3','2003030212_22v3 3','방송시스템 세팅 및 테스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030212_22v3','2003030212_22v3 4','방송시스템 운영 교육 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030301_22v2','2003030301_22v2 1','방송서비스 요구 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030301_22v2','2003030301_22v2 2','방송기술 정보화전략 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030301_22v2','2003030301_22v2 3','정보시스템 환경 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030301_22v2','2003030301_22v2 4','정보시스템 구축 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030303_13v1','2003030303_13v1 1','제작지원 정보시스템 운영 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030303_13v1','2003030303_13v1 2','제작지원 정보시스템 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030303_13v1','2003030303_13v1 3','제작지원 정보시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 1','사전 편집소재 획득하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 2','영상 순서편집 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 3','효과편집 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 4','"종합편집');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 5','영상소재 라이프사이클 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030304_22v3','2003030304_22v3 6','영상편집장비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 1','"녹음');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 2','음향순서 편집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 3','"음향효과합성');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 4','"음향더빙');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 5','음향소재 라이프사이클 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030305_22v3','2003030305_22v3 6','음향편집장비 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030306_13v1','2003030306_13v1 1','송출 정보시스템 운영기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030306_13v1','2003030306_13v1 2','송출 정보시스템 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030306_13v1','2003030306_13v1 3','송출 정보시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030307_13v1','2003030307_13v1 1','송신 시스템 운영기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030307_13v1','2003030307_13v1 2','송신 정보시스템 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030307_13v1','2003030307_13v1 3','송신 정보시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030308_22v2','2003030308_22v2 1','아카이브 콘텐츠 인제스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030308_22v2','2003030308_22v2 2','아카이브 다큐멘트 메타데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030308_22v2','2003030308_22v2 3','"아카이브 자산관리');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030308_22v2','2003030308_22v2 4','아카이브 라이브러리 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 1','미디어 인제스트하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 2','미디어 자산 검색하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 3','메타데이터 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 4','미디어 자산 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030309_22v3','2003030309_22v3 5','MAM 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030310_22v2','2003030310_22v2 1','네트워크 성능관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030310_22v2','2003030310_22v2 2','네트워크 장애관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030310_22v2','2003030310_22v2 3','네트워크 구성관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030311_22v2','2003030311_22v2 1','서버/스토리지 시스템 운영기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030311_22v2','2003030311_22v2 2','서버/스토리지 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030311_22v2','2003030311_22v2 3','서버/스토리지 시스템 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030312_22v2','2003030312_22v2 1','데이터베이스 시스템 운영기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030312_22v2','2003030312_22v2 2','데이터베이스 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030312_22v2','2003030312_22v2 3','데이터베이스 백업 및 복구 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030312_22v2','2003030312_22v2 4','데이터베이스 튜닝하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030314_22v3','2003030314_22v3 1','정보시스템 구축  사업 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030314_22v3','2003030314_22v3 2','서비스 요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030314_22v3','2003030314_22v3 3','정보시스템 구축 방안 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030315_22v3','2003030315_22v3 1','정보시스템  설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030315_22v3','2003030315_22v3 2','정보시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030401_13v1','2003030401_13v1 1','방송기술 정책계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030401_13v1','2003030401_13v1 2','방송장비 구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030401_13v1','2003030401_13v1 3','기술인력 관리운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030401_13v1','2003030401_13v1 4','기술 관련 대내외 협력하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030402_13v1','2003030402_13v1 1','방송장비 자산관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030402_13v1','2003030402_13v1 2','방송 시스템 유지 보수 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030402_13v1','2003030402_13v1 3','기술인력 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030403_13v1','2003030403_13v1 1','방송기술 동향 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030403_13v1','2003030403_13v1 2','선행기술 연구하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030403_13v1','2003030403_13v1 3','방송기술 표준화하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030403_13v1','2003030403_13v1 4','방송장비 개발하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030404_13v1','2003030404_13v1 1','스튜디오 방송장비 운용관리하기(부조종실 포함)');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030404_13v1','2003030404_13v1 2','생방송 프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030404_13v1','2003030404_13v1 3','녹화 방송 프로그램 제작하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030404_13v1','2003030404_13v1 4','"Post Production 제작하기(종합 편성');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030406_13v1','2003030406_13v1 1','"중계 프로그램 제작');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030406_13v1','2003030406_13v1 2','중계 방송망 운용 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030406_13v1','2003030406_13v1 3','"중계 방송장비 운용');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030407_13v1','2003030407_13v1 1','방송프로그램 송출하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030407_13v1','2003030407_13v1 2','방송 분배망 운용관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030407_13v1','2003030407_13v1 3','송출시설 운용기기 유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030408_13v1','2003030408_13v1 1','방송 제작 시스템 시설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030408_13v1','2003030408_13v1 2','방송 송출 시스템 시설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030408_13v1','2003030408_13v1 3','방송 송신 시스템 시설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030409_13v1','2003030409_13v1 1','"방송장비 유지 보수');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030409_13v1','2003030409_13v1 2','"장비 성능 검수');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030409_13v1','2003030409_13v1 3','"방송기재');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030410_13v1','2003030410_13v1 1','중단파 방송망 관리운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030410_13v1','2003030410_13v1 2','TV/FM 방송망 관리운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030410_13v1','2003030410_13v1 3','유무선 링크 관리운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030411_16v2','2003030411_16v2 1','파일기반 방송 시스템 시설하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030411_16v2','2003030411_16v2 2','IT기반 방송 네트워크 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030412_16v2','2003030412_16v2 1','인터넷 서비스 플랫폼 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030412_16v2','2003030412_16v2 2','방송 네트워크 보안 기술 적용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030501_17v2','2003030501_17v2 1','사업환경 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030501_17v2','2003030501_17v2 2','사업분야 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030501_17v2','2003030501_17v2 3','사업 타당성 검토하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030501_17v2','2003030501_17v2 4','사업 일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030502_17v2','2003030502_17v2 1','발주부서 요구사항 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030502_17v2','2003030502_17v2 2','시공계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030502_17v2','2003030502_17v2 3','공사 시행 방법 결정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030503_17v2','2003030503_17v2 1','현장 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030503_17v2','2003030503_17v2 2','시스템 구성도 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030503_17v2','2003030503_17v2 3','결과 보고서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030504_17v2','2003030504_17v2 1','현장 실사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030504_17v2','2003030504_17v2 2','설계도면 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030504_17v2','2003030504_17v2 3','공사 내역서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030504_17v2','2003030504_17v2 4','공사시방서 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030505_17v2','2003030505_17v2 1','장비 시장 조사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030505_17v2','2003030505_17v2 2','장비 BMT 실시하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030505_17v2','2003030505_17v2 3','장비 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030505_17v2','2003030505_17v2 4','장비 구매하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030505_17v2','2003030505_17v2 5','장비 구매 검수·검사하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030506_17v2','2003030506_17v2 1','공사업체 선정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030506_17v2','2003030506_17v2 2','공정계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030506_17v2','2003030506_17v2 3','공사 시행하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030506_17v2','2003030506_17v2 4','공사 자재 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030506_17v2','2003030506_17v2 5','공사 감독하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030507_17v2','2003030507_17v2 1','방송장비내역 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030507_17v2','2003030507_17v2 2','방송장비 시공상태 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030507_17v2','2003030507_17v2 3','방송장비 성능 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030508_17v2','2003030508_17v2 1','시스템 운용 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030508_17v2','2003030508_17v2 2','동작 환경 설정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030508_17v2','2003030508_17v2 3','적정 신호규격 유지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030508_17v2','2003030508_17v2 4','측정장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030508_17v2','2003030508_17v2 5','운용자 교육하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030509_17v2','2003030509_17v2 1','적정 인력 배치하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030509_17v2','2003030509_17v2 2','시스템 숙지하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030509_17v2','2003030509_17v2 3','전송신호 품질 확인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030509_17v2','2003030509_17v2 4','장비 보수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030509_17v2','2003030509_17v2 5','A/S 업체 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030510_17v2','2003030510_17v2 1','품질 운용기준 작성하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030510_17v2','2003030510_17v2 2','시스템품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030510_17v2','2003030510_17v2 3','방송품질 측정하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030510_17v2','2003030510_17v2 4','실시간 장비 운용상태 모니터링 하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030601_19v1','2003030601_19v1 1','시장 동향 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030601_19v1','2003030601_19v1 2','채널 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030601_19v1','2003030601_19v1 3','콘텐츠 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030602_19v1','2003030602_19v1 1','콘텐츠 제작 준비하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030602_19v1','2003030602_19v1 2','영상 촬영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030602_19v1','2003030602_19v1 3','오디오 클립 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030602_19v1','2003030602_19v1 4','편집 프로그램 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030602_19v1','2003030602_19v1 5','1인 미디어 제작·전송장비 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030603_19v1','2003030603_19v1 1','그래픽디자인 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030603_19v1','2003030603_19v1 2','로고 아이덴티티 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030603_19v1','2003030603_19v1 3','비디오 그래픽 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030603_19v1','2003030603_19v1 4','그래픽 프로그램 활용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030604_19v1','2003030604_19v1 1','기술기준 파악하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030604_19v1','2003030604_19v1 2','송출 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030604_19v1','2003030604_19v1 3','라이브 (생방송) 장비 운용하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030604_19v1','2003030604_19v1 4','송출 품질 관리하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030605_19v1','2003030605_19v1 1','채널운영 계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030605_19v1','2003030605_19v1 2','채널 디자인하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030605_19v1','2003030605_19v1 3','채널 관리 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030605_19v1','2003030605_19v1 4','메타데이터 관리 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030605_19v1','2003030605_19v1 5','통계데이터 분석 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030606_19v1','2003030606_19v1 1','소셜콘텐츠 시장분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030606_19v1','2003030606_19v1 2','소셜플랫폼별 통계자료 수집하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030606_19v1','2003030606_19v1 3','통계자료 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030607_19v1','2003030607_19v1 1','채널별 마케팅 기획하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030607_19v1','2003030607_19v1 2','채널별 유통하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030607_19v1','2003030607_19v1 3','채널별 마케팅효과 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030608_19v1','2003030608_19v1 1','요구사항 분석하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030608_19v1','2003030608_19v1 2','시스템 구축계획 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030608_19v1','2003030608_19v1 3','시스템 구축범위 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030608_19v1','2003030608_19v1 4','시스템 구축일정 수립하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030609_19v1','2003030609_19v1 1','시스템 설계하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030609_19v1','2003030609_19v1 2','시스템 구축하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030609_19v1','2003030609_19v1 3','장비 성능 시험하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030610_19v1','2003030610_19v1 1','미디어 자산관리 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030610_19v1','2003030610_19v1 2','파일 배포시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030610_19v1','2003030610_19v1 3','플랫폼 업로드 시스템 운영하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030611_19v1','2003030611_19v1 1','윤리강령 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030611_19v1','2003030611_19v1 2','저작권 규정 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030611_19v1','2003030611_19v1 3','개인정보보호 규정 준수하기');
Insert into C##LMS.ABILITY (SUBJECT_CODE,ABILITY_NUM,ABILITY) values ('2003030611_19v1','2003030611_19v1 4','미디어 리터러시 확인하기');
REM INSERTING into C##LMS.ARTICLE
SET DEFINE OFF;
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','“미니 디스플레이를 반짝이로” 어도비, 지능형 드레스 공개','어도비의 한 연구원이 버튼 하나만 누르면 색상과 패턴이 바뀌는 지능형 칵테일 드레스를 선보였다.  어도비 연구원 크리스틴 디어크는 평범해 보이는 스팽글 장식의 칵테일 드레스를 입고 어도비 MAX 컨퍼런스 무대에 등장했다. 그리고 갑자기 드레...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/311031');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','블로그 | ‘공개 프로필’ 강요하는 기업 프라이버시 정책 유감','"개인정보 관리 정책이 변경됐습니다"라는 메일을 받으면 바로 확인해 보는가? 아마도 거의 대부분 그렇지 않을 것이다. 필자 역시 마찬가지다. 그동안 즉시 열어 읽어본 적이 없다. 그런데 최근 패트리온(Patreon)에서 보내온 이메일은 달랐다. 다른 ...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/310123');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','새로운 전기 맞은 컴퓨터 비전의 구체적 사용례 살펴보기','1950년대 최초의 컴퓨터 비전 사용례는 타이핑된 텍스트와 손으로 쓴 텍스트를 분석하는 것이었다. 초기 상용 애플리케이션은 광학 문자 인식, 이미지 분할, 물체 감지 등 단일 이미지에 중점을 두었다. 얼굴 인식에 대한 선구적인 연구는 1960년대에 시...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/308887');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','부푼 기대의 정점에 선 생성형 AI, 환멸 단계 들어서나 : 가트너 하이프 사이클','가트너의 이론에 따르면, 모든 신기술은 초기에 급격히 상승한 후 부푼 기대치가 정점에 도달한 후 가파른 내리막길을 따라 환멸의 골짜기로 떨어진다. 이런 추락에서 살아남은 기술만이 서서히 현장에서 생산적인 용도로 발전한다.   이 ''부푼 기...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/308773');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','“노트북의 미래를 바꾼다” 인텔 ‘메테오 레이크’ 특징 6가지','인텔의 14세대 모바일 프로세서인 코드명 ''메테오 레이크(Meteor Lake)''는 인텔이 수년간 출시했던 칩과 근본적으로 다르다. 인텔이 공개한 메테오 레이크 관련 정보 중 특히 주목해야 할 내용을 정리했다. 참고로 인텔 CEO 팻 겔싱어는 최근 열...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/308527');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','산업용 메타버스에 승부를 거는 제조 기업들…디지털 트윈, 가상현실 기술에 적극적','많은 제조기업이 산업용 메타버스의 구성 요소가 될 다양한 기술에 투자하고 있지만, 완전히 상호 연결된 몰입형 환경이라는 최종 목표를 실현하는 데는 시간이 더 걸릴 것으로 보인다.   메타버스 개념은 최근 몇 년 동안 주로 3D 인터넷의 발...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/308449');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','글로벌 칼럼 | 스마트폰이 PC를 대체할까? 힌트는 ‘더블 탭’ 제스처','오늘날 스마트폰의 성능은 PC를 위협할 정도다. 예를 들어 아이폰 12의 성능은 11테라플롭으로, 1980년대 슈퍼컴퓨터인 크레이 2보다 5,000배 이상 강력하다. 3년 전 된 스마트폰의 성능이 이 정도다. 삼성도 최신 스마트폰이 PC보다 빠르다고 ...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/307711');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','“프로그래밍 가능한 멀티코어 CPU” 데이터 처리 장치(DPU)가 부상한다','AI와 보안, 네트워킹 애플리케이션에 더 높은 시스템 성능이 필요해지면서 대기업 환경에서 데이터 처리 장치(Data Processing Unit, DPU)가 빠르게 확산하고 있다. 기존의 DPU 발전은 대부분 하이퍼스케일러를 대상으로 했지만 앞으로는 ...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/307279');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','블로그 | 애플이 아이폰 15 발표 행사에서 언급하지 않은 8가지','애플이 아이폰 15와 아이폰 15 프로를 공개했다. 새로운 애플 워치 시리즈 9과 애플 워치 울트라 2로 발표했다. 하지만 이번 행사에서 새로운 소식이 알려지지 않은 제품도 많았다. 애플 신제품 발표를 목 빠지게 기다렸지만 애플이 언급하지 않은 제품이...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/307177');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','"카메라로 운전자 생체 정보 확인" AI 이용한 운전석 탐지 시스템','심장 박동? 맥박? 음주? 조만간 인공지능이 운전자의 중요한 신체 매개변수를 확인해 도로 안전을 개선할 것으로 보인다.  유럽 최대의 응용과학연구소인 프라운호퍼 연구소는 자동차 주행의 안전성을 높이는 AI 알고리즘을 개발했다. 이 기술은 광...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/306085');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','“바보 같지만 흥미롭네” MS, ‘AI 백팩’ 특허 출원','AI 기능이 들어간 스마트 스피커와 휴대폰, TV가 넘쳐난다. 심지어 자동차도 있다. 그렇다면 백팩은 어떨까? 마이크로소프트가 이 새로운 영역에 AI를 접목하려 하고 있다.   네오윈(Neowin)에 따르면, 마이크로소프트는 지난 5월 2...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/305653');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','글로벌 칼럼 | 정치에 생성형 AI의 자리가 있을까','최근 공화당 전국 토론회(Republican National Debate)는 흥미진진했다. 이번에는 뻔한 논쟁거리가 아닌 실질적인 이슈를 다뤘기 때문이다. 필자의 관심을 끈 부분은 전 뉴저지 주지사인 크리스 크리스티가 비벡 라마스와미를 향해 챗GPT ...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/305233');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','글로벌 칼럼 | 과대광고가 가장 심한 네트워크 기술 5가지와 대처법','유망한 네트워크 기술의 매력이 검증되지 않은 아이디어를 채택해야 한다는 압박감으로 인해 퇴색될 수 있다. 필자가 만난 기업 IT 책임자 중 3/4은 경영진의 선입견이 네트워크 및 IT 운영을 유지하는 데 있어 ''심각한 문제''라고 답했다.  ...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/305173');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','"AI가 이끌어 올 미래를 예측해 보다" Future of AI & Data 2023 9월 21일 개최','IT월드와 CIO 코리아가 공동으로 주최하며, "AI로 진화하는 데이터 및 분석 전략"을 주제로 한 Future of AI & Data 2023가 9월 21일 개최된다. 비즈니스 이니셔티브에 데이터를 활용하고자 하는 수요가 전 산업에 걸쳐 지...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/305155');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','“100초 움직임 데이터만으로 사용자 특정” VR 헤드셋 시대, 프라이버시가 위험하다','가상현실(VR) 헤드셋에서 수집한 머리와 손 움직임 데이터가 지문 혹은 안면 인식만큼이나 개인을 식별하는 데 효과적인 것으로 나타났다. 몰입적인 가상환경을 활용할 때 사용자 프라이버시가 침해될 가능성이 크다는 우려가 나오고 있다. UC 버클리대에서 진...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/303817');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','“산업용 프로세서 ARM 독주 막아라” 퀄컴 등 5개 업체, ‘RISC-V’ 합작사 만든다','스마트폰과 자동차 등에 사용하는 반도체를 만드는 업체 5곳이 오픈소스 RISC-V 아키텍처를 개선하는 설계 전문 업체를 공동으로 설립한다. ARM 기술에 대한 의존도를 줄이기 위해서다.   퀄컴과 로버트 보쉬(Robert Bosch), 인...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/302323');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','“SSD 병목의 궁극적 해결”⋯‘광자’ PCIe 새 규격 만든다','PC에 사용할 새 SSD를 검색하거나 구매한 경험이 있다면, SSD의 한계를 알고 있을 것이다. 즉 종종 PC의 PCI 익스프레스 버스 때문에 PC가 멈춘 것 같은 느낌을 받거나 상당한 발열이 발생한다. 현재 관련 업계가 이 PCI 익스프레스 문제의 ...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/302089');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('미래기술','더 강력한 생성형 AI 규제가 필요한 이유 “결국 업체가 아닌 기업이 책임지기 때문”','생성형 인공지능(AI)의 개인정보 보호, 보안 및 편향성 문제에 대응하기 위한 법안이 잇달아 제정되는 가운데, 전문가들은 문제 발생 시 솔루션 공급업체가 아닌 해당 기업이 책임을 질 수 있다고 경고한다.   AI 제작자와 사용자의 ...','https://www.itworld.co.kr/t/65212/%EB%AF%B8%EB%9E%98%EA%B8%B0%EC%88%A0/301735');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','에이수스, NUC 제품군 인수 위한 인텔과 협약 체결','에이수스 코리아가 지난 10월 2일 인텔 NUC(Next Unit of Computing) 제품군 인수를 위해 인텔과 협약을 체결했다고 밝혔다. 이번 협약을 통해 에이수스는 10세대부터 13세대까지 인텔 NUC 제품군의 제조·판매를 시작하게 ...','https://www.itworld.co.kr/t/63417/IoT/309445');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','와이즈스톤, AIoT 국제전시회서 AI·데이터 시험인증 서비스 소개','와이즈스톤이 ‘2023 AIoT 국제전시회’에서 데이터 품질인증과 AI+(에이아이플러스) 인증을 소개한다고 밝혔다. 이번 행사는 10월 11일부터 사흘간 서울 코엑스에서 개최된다.   와이즈스톤은 과학기술정보통신부가 지정한 데이터 품질인증...','https://www.itworld.co.kr/t/63417/IoT/308857');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','“레거시 인프라의 보안 공백을 메워라” 5가지 IoT 보안 문제와 효과적인 해결 방안','기업 네트워크와 연결된 IoT 기기의 양이 폭증하면서, 사이버보안 위협 역시 가파른 상승세를 타고 있다. 사이버보안 위협과 공급망 문제, 칩 부족, 지정학적 불안정성은 모두 IoT가 여러 애널리스트의 예측보다 훨씬 느리게 성장한 주요 원인이었다. &n...','https://www.itworld.co.kr/t/63417/IoT/308587');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','산업용 메타버스에 승부를 거는 제조 기업들…디지털 트윈, 가상현실 기술에 적극적','많은 제조기업이 산업용 메타버스의 구성 요소가 될 다양한 기술에 투자하고 있지만, 완전히 상호 연결된 몰입형 환경이라는 최종 목표를 실현하는 데는 시간이 더 걸릴 것으로 보인다.   메타버스 개념은 최근 몇 년 동안 주로 3D 인터넷의 발...','https://www.itworld.co.kr/t/63417/IoT/308449');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','레드햇, 인텔과 협력해 제조 현장에 오픈소스 자동화 제공한다','레드햇이 인텔과 협력해 설계한 새로운 산업용 엣지 플랫폼을 공개하고, 제조산업 현장의 제어 시스템 구축 및 운영에 보다 현대적인 접근 방식을 제공할 것이라고 9월 20일 발표했다. 레드햇의 새로운 엣지 플랫폼은 표준 IT 기술과 실시간 데이터 인사이...','https://www.itworld.co.kr/t/63417/IoT/308119');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','에이수스, 최신 에이수스 IoT GPU 모듈 ‘MXM-M23A 시리즈’ 출시','에이수스 코리아가 IIoT, IoRT, IoMT, 스마트시티, 모바일 로봇 등 다양한 산업 분야에서 AI와 그래픽 솔루션을 쉽게 구축할 수 있는 에이수스 IoT GPU 모듈 ‘MXM-M23A 시리즈’를 출시했다고 9월 12일 밝혔다.   ...','https://www.itworld.co.kr/t/63417/IoT/306985');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','시그니파이, 영국 런던 템스강에 커넥티드 조명 설치하는 프로젝트 진행 중','시그니파이(구 필립스라이팅)가 영국 런던 템스강에 IoT 기반 커넥티드 조명을 설치하는 ‘일루미네이티드 리버(Illuminated River)’ 프로젝트가 성황리에 진행되고 있다고 9월 12일 밝혔다. ‘일루미네이티드 리버’는 영국 런던을 대표하는 ...','https://www.itworld.co.kr/t/63417/IoT/306943');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','에이수스, 엣지 AI 컴퓨터 ‘에이수스 IoT PE4000G’ 출시…"최대 200W GPU 지원"','에이수스 코리아가 최신 13세대, 12세대 인텔 코어 프로세서로 구동되며, 최대 200W GPU를 지원하는 엣지 AI 컴퓨터 ‘에이수스 IoT PE4000G’를 출시했다고 밝혔다. 회사에 따르면 PE4000G는 최신 13세대, 12세대 인텔...','https://www.itworld.co.kr/t/63417/IoT/305845');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','에이수스, Arm 기반 SBC ‘에이수스 IoT 틴커 보드 3N’ 출시','에이수스 코리아가 Arm 기반의 SBC(Single-Board Computer) ''에이수스 IoT 틴커 보드(Tinker Board) 3N 시리즈''를 출시했다. 회사에 따르면 NUC(Next Unit of Computing) 크기의 SBC 시리즈는 ...','https://www.itworld.co.kr/t/63417/IoT/304423');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','“제조기업의 DX 지원” 유라, 스마트팩토리 솔루션 4종 출시','유라가 국내 제조업에 최적화된 제품 관리 및 설계 솔루션 등을 클라우드 SaaS 형태로 공급해 국내 제조기업의 제품 개발과 제조 운영 시스템 혁신을 효율적으로 지원해 나갈 것이라고 8월 22일 밝혔다. 유라는 빅데이터 기반 제조 프로세스 최적화, 생...','https://www.itworld.co.kr/t/63417/IoT/304201');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','에이수스, 엔비디아 젯슨 오린 기반 초소형 컴퓨터 ‘에이수스 IoT PE1100N’ 출시','에이수스 코리아가 차세대 엔비디아 젯슨 오린(Jetson Orin) 시리즈를 기반으로 엣지 AI 추론을 위한 초소형 컴퓨터인 ‘에이수스 IoT PE1100N’을 출시했다고 8월 8일 밝혔다. PE1100N은 효율적인 Arm 프로세서와 내장형 엔비디아...','https://www.itworld.co.kr/t/63417/IoT/302575');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','샤오미, ‘레드미 워치 3’ 외 신제품 3종 출시','샤오미가 ‘레드미 워치 3’과 ‘레드미 버즈 4 액티브’, ‘샤오미 다기능 플래시 라이트’ 3종을 7월 27일 국내 출시한다고 밝혔다. 더불어 8월 8일에는 합리적인 가격의 ‘레드미 워치 3 액티브’를 출시할 예정이라고 밝혔다. 회사에 따르면 레드미...','https://www.itworld.co.kr/t/63417/IoT/300769');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','“픽업 트럭을 초대형 도트 프린트로” 이색 라즈베리 파이 프로젝트 화제','많은 이들이 라즈베리 파이(Raspberry Pi) 컴퓨팅 보드를 좋아한다. 저렴한 데다 다양한 방식으로 활용할 수 있어 놀랍도록 창의적이고 멋진 프로젝트가 계속 등장하고 있다. 이런 가운데 주목할 만한 최신 라즈베리 파이 프로젝트가 또 나왔다. ''역...','https://www.itworld.co.kr/t/63417/IoT/296719');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','LG CNS-하니웰, 스마트팩토리 사업 협력… "LG CNS ‘팩토바’에 하니웰 공정제어솔루션 결합"','LG CNS가 미국 하니웰과 손잡고 스마트팩토리의 생산 효율과 보안성을 한층 높인다고 6월 7일 밝혔다.  LG CNS와 하니웰이 스마트팩토리 사업 경쟁력 강화를 위한 업무협약을 체결했다. 양사는 이번 협약을 통해 ▲국내외 스마트팩토리 구축...','https://www.itworld.co.kr/t/63417/IoT/293401');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','“산업용 프로세서 ARM 독주 막아라” 퀄컴 등 5개 업체, ‘RISC-V’ 합작사 만든다','스마트폰과 자동차 등에 사용하는 반도체를 만드는 업체 5곳이 오픈소스 RISC-V 아키텍처를 개선하는 설계 전문 업체를 공동으로 설립한다. ARM 기술에 대한 의존도를 줄이기 위해서다.   퀄컴과 로버트 보쉬(Robert Bosch), 인...','https://www.itworld.co.kr/t/63417/IoT/302323');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','“2세대 에어태그, 비전 프로 생태계에서 주연급 역할 할 전망”','애플 전문 애널리스트 밍치 쿠오가 트위터에 따르면 2세대 에어태그(AirTag)가 비전 프로 생태계에서 중요한 역할을 할 전망이다.    밍치 쿠오는 지난 2022년 6월 많은 주목을 받지 못했던 에어태그의 판매량이 조금씩 늘어...','https://www.itworld.co.kr/t/63417/IoT/302209');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','“고급 예측 분석으로 시작하라” SAS의 스마트 팩토리 고도화 전략','AI는 제조산업의 디지털 트랜스포메이션을 위한 핵심 기술이다. 산업통상자원부는 IT 활용도에 따라 스마트 팩토리를 4단계로 구분했는데, 제조의 전 과정이 통합되고 맞춤형 생산이 가능한 고도화 단계는 AI 기술이 필수적이다. 제조업의 혁신을 상징하는 ‘...','https://www.itworld.co.kr/t/63417/IoT/291967');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('IoT','PTC, 새로운 개념의 산업용 메타버스 공개…공간 컴퓨팅 개발 성과 강조','PLM 전문업체 PTC가 공간 컴퓨팅 분야에서 수년간의 개발 끝에 보스턴에서 열린 라이브웍스 사내 전시회에서 산업 환경에서의 메타버스에 대한 자사의 해석을 발표했다. PTC의 목표는 디지털 세계와 물리적 세계를 혼합해 엔지니어링, 제조 및 현장 서비스...','https://www.itworld.co.kr/t/63417/IoT/291745');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','글로벌 칼럼 | ‘사춘기’ 엣지 컴퓨팅이 더 성숙해지려면','엣지 컴퓨팅은 점점 더 커지는 실시간 데이터 처리에 대한 요구를 해결하는 혁신적인 대안으로 등장했다. 네트워크에서 데이터가 생성되는 곳에서 더 가까운 장소, 즉 엣지에서 데이터를 처리하는 방법으로 지연시간과 대역폭 부담을 획기적으로 줄인다. 여기까지가...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/311216');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','"98%의 CEO, AI 및 ML 도입하면 즉각적인 효과 있을 것" 워크데이','워크데이가 인공지능(AI)과 머신러닝(ML)이 미래에 어떻게 영향을 미칠지 살펴보는 최신 글로벌 연구 결과를 발표했다.  총 2,355명의 비즈니스 리더를 대상으로 실시한 설문조사 결과를 담은 이번 보고서에 따르면 리더들은 신뢰와 데...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/311136');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“미니 디스플레이를 반짝이로” 어도비, 지능형 드레스 공개','어도비의 한 연구원이 버튼 하나만 누르면 색상과 패턴이 바뀌는 지능형 칵테일 드레스를 선보였다.  어도비 연구원 크리스틴 디어크는 평범해 보이는 스팽글 장식의 칵테일 드레스를 입고 어도비 MAX 컨퍼런스 무대에 등장했다. 그리고 갑자기 드레...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/311031');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“제로 트러스트 구현 기업, 3년 사이 3배가량 증가” 옥타 보고서','최근 옥타가 발행한 ‘2023년 제로 트러스트 보안 현황(The State of Zero Trust Security 2023)’ 보고서에 따르면, 제로 트러스트 이니셔티브를 구현한 전 세계 기업의 비율이 2021년 24%에서 2023년 61%로 지난 ...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/310866');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“2024년 전 세계 IT 지출, 전년 대비 8% 성장할 전망” 가트너','가트너가 2024년 전 세계 IT 지출이 2023년보다 8% 증가한 총 5조 700억 달러에 이를 것이라는 전망을 발표했다. 가트너에 따르면 생성형 AI가 IT 지출에 미치는 직접적 영향은 아직 크지 않지만, 광범위한 AI 투자가 전반적인 IT 지출 ...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/310806');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“전 세계 CIO의 45%, 디지털 딜리버리 공동 주도하기 시작” 가트너 발표','가트너가 전 세계 2,400명 이상의 CIO 및 기술 경영진을 대상으로 실시한 디지털 딜리버리(Digital Delivery) 관련 설문조사 결과를 발표했다. 이번 설문조사에 따르면 CIO의 45%가 분야별 고위 경영진(CxO) 동료와 협력해 IT 및...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/310706');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','‘.AI’ 도메인 분쟁 사례 전년 대비 350% 급증…CSC 보고서','포브스 글로벌 2000대 기업 중 거의 절반이 제3자가 등록한 ‘.AI’ 도메인에 대한 통제권을 갖고 있지 않은 것으로 파악돼 주의가 요구된다.   보안 업체 CSC가 최근 발행한 ‘2023년 도메인 보안 보고서(2023 Domain Se...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/310666');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“생성형 AI 확산과 관련 있다는 데...” 스택 오버플로우, 직원 약 28% 해고','개발자를 위한 질의응답 포털 스택 오버플로우가 인력의 약 3분의 1을 해고하고, 이를 생성형 AI 기반 코딩 비서(마이크로소프트 코파일럿, 아마존 코드위스퍼러, 구글 바드 등)로 대체하고 있다.  스택 오버플로우의 CEO 프라샨트 찬드라세카...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/310646');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','가트너, ''2024년 기업이 주목해야 할 10대 전략 기술 트렌드'' 발표','가트너가 ‘2024년 기업들이 주목해야 할 10대 전략 기술 트렌드’를 가트너 IT 심포지엄/엑스포에서 발표했다. 가트너 수석 VP 애널리스트 겸 리서치 책임자 크리스 하워드는 “IT 리더를 비롯한 경영진은 전략 기술 트렌드의 영향과 이점을 ...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/310576');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','글로벌 칼럼 | 적의 교본을 이용하는 구글과 마이크로소프트의 “내로남불”','미국 법무부가 구글을 상대로 제기한 반독점 소송은 25년 전 마이크로소프트에 제기한 소송과 유사하다. 두 경우 모두 정부는 두 회사가 독점력을 이용해 경쟁업체를 죽이고 지배적인 시장 점유율을 유지해 수십억 달러의 이익을 챙겼다고 주장했다.  ...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/310309');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“생성형 AI에 대한 두려움, 사이버보안 예산 증가에 일조” IBM 보고서','최근 IBM이 발표한 연구에 따르면, 많은 CISO가 AI 도입이 새로운 유형의 사이버 공격으로 이어질 것을 우려하고 있었다. 이로 인해 AI에 대한 사이버보안 예산이 증가하고 있는 것으로 나타났다.    IBM은 생성형 AI가 ...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/310177');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“전문성보다는 유연성” 2023년 하반기 인기 네트워킹 기술','오늘날의 네트워크 엔지니어는 유연성과 적응력을 갖추고, 새로운 코드형 인프라 패러다임을 이해하며, 클라우드, 보안, AI의 최신 개발 동향을 파악해야 한다. 기업은 단일 솔루션 업체의 기술에만 국한된 사람을 원하지 않는다. 다양한 기술 역량을 갖추고 ...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/310105');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“금융업 노린 피싱 공격서 MS·아메리칸 익스프레스 사칭 인기”','최근 트러스트웨이브 스파이더랩(Trustwave SpiderLabs)이 발표한 ‘2023년 금융 서비스 부문 위협 지(2023 Financial Services Sector Threat Landscape)’ 보고서에 따르면, 마이크로소프트와 아메리칸 ...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/309967');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','오픈 AI와 마이크로소프트가 자체 칩을 만들려는 이유','생성형 AI에 대한 수요가 증가함에 따라 마이크로소프트와 구글, AWS와 같은 클라우드 서비스 업체와 오픈AI와 같은 LLM 업체 모두 AI 워크로드를 위한 자체 칩 개발을 추진하고 있다.   특히 오픈AI와 마이크로소프트 같은 일부 업체...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/309889');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','글로벌 칼럼 | AR 글래스의 대중화를 이끌 단 하나의 열쇠','최근 오픈AI는 AI 챗봇에 텍스트 프롬프트 대신 사진을 사용할 수 있는 기능을 포함한 새로운 ChatGPT 기능을 발표했다. 오픈AI는 “여행지 랜드마크 사진을 찍고 흥미로운 이야기를 들을 수 있다. 집에서는 냉장고와 팬트리 사진을 찍어 저녁 식사...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/309757');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“출근 도장만 찍고 일은 집에서” 사무실 복귀 흐름 속 새로운 업무 트렌드','사무실 출근이 다시 의무가 되면서 많은 직원이 출근 도장을 찍고 몇 시간 커피 타임을 가진 뒤 집으로 돌아가 업무를 한다는 연구 조사가 발표됐다. 일명 ‘커피 배지(Coffee Badge)’라고 불리는 새로운 업무 트렌드는 화상회의 솔루션 업체 아울 ...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/309685');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','“딥페이크로 학습 효과 개선” 영국 연구팀, 페이크포워드 실험으로 증명','딥페이크, 즉 사람의 얼굴이나 신체를 디지털 기술로 변형해 다른 사람처럼 보이도록 만든 동영상은 평판이 나쁘다. 비교적 간단한 방법으로 허위 정보와 명예훼손, 심지어 악의적인 음란물 콘텐츠의 유포까지 가능하기 때문이다. 하지만 영국 바스 대학교의 연...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/309673');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('글로벌 트렌드','생성형 AI 시범 도입 기업 6개월새 3배 증가…가장 적극적인 분야는 ‘SW개발’','최근 가트너가 1,400명 이상의 경영진을 대상으로 실시한 설문조사에 따르면, 생성형 AI를 시범 도입하는 기업이 6개월 사이 3배 이상 증가했다. 프로덕션 단계에 도입한 기업도 2배 이상 증가한 것으로 조사됐다.   설문조사 결과 45%...','https://www.itworld.co.kr/t/55049/%EA%B8%80%EB%A1%9C%EB%B2%8C+%ED%8A%B8%EB%A0%8C%EB%93%9C/309589');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','“더 정교한 자바스크립트” 하이퍼스크립트의 이해','프로그래밍 언어 진화 계보를 보면 하이퍼카드(HyperCard)라는 흥미로운 가지가 있다. 연령대에 따라서는 하이퍼카드를 사용한 프로그래밍을 직접 배운 사람도 있을 것이다. 하이퍼스크립트(Hyperscript)는 하이퍼카드의 일부 장점, 특히 단순함과...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/310996');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','"잡아먹지 않는다" 개발자가 SQL에 겁먹을 필요 없는 7가지 이유','SQL(Structured Query Language)은 1970년대 초 발명된 이후 데이터베이스와의 상호작용을 관리하는 기본 수단으로 쓰이고 있다. 스택 오버플로우에 따르면 SQL은 여전히 상위 5개 프로그래밍 언어 중 하나이고 개발자의 약 50%가...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/310273');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','파이썬 3 나온 지 언젠데...아직까지 ‘파이썬 2’ 못 놓는 개발자들','파이썬 소프트웨어 재단(Python Software Foundation)과 젯브레인(JetBrains)이 2만 3,000명 이상의 파이썬 개발자를 대상으로 실시한 여섯 번째 연례 파이썬 개발자 설문조사 결과가 지난 9월 27일 발표됐다. ‘파이썬 개발...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/309295');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','MS가 만든 패키지 관리자 ‘윈겟’의 이해와 기본 사용법','리눅스 환경에서 패키지 관리자(package manager)는 각 리눅스 배포판에서 사용할 수 있는 소프트웨어를 카탈로그화하고 설치하는 역할을 한다. 윈도우는 어떨까? 최근까지 마이크로소프트 윈도우 소프트웨어 관리는 그다지 중앙화된 형태가 아니었다. ...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/309133');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','"AI 추론 및 배포 위한 엔드투엔드 경험 제공" 클라우드플레어, 개발자 플랫폼 출시','클라우드플레어가 AI 애플리케이션을 구축하려는 개발자에게 엔드투엔드 경험을 제공하는 개발자 플랫폼을 선보인다고 밝혔다. 이제 개발자는 클라우드플레어의 네트워크에서 풀스택 AI 애플리케이션을 구축할 수 있다고 업체 측은 설명했다. 회사에 따르면 클라우...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/308971');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','“자바스크립트 없는 동적 HTML” HTMX의 이해와 기본 활용법','HTMX는 자바스크립트 대신 확장된 HTML 구문을 사용해 상호작용성을 달성한다. HTMX는 마크업에서 바로 HTTP 상호작용을 제공하며, 자바스크립트에 의존하지 않고도 다른 많은 상호작용 요구사항을 지원한다. 향후 웹 프론트 엔드의 작동 방식에 영향...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/308707');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','온프레미스를 애저로 옮기는 가장 쉬운 방법, 애저 마이그레이트','온프레미스에서 클라우드로의 마이그레이션에는 많은 경우 예기치 못한 문제와 비용이 동반된다. 서버와 데이터를 가상 인프라로 옮기기만 하면 될 것 같은, 얼핏 단순해 보이는 작업이 여러 가지 문제에 빠져 허우적대고, 차라리 서비스를 데이터센터로 다시 송환...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/309763');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','“자바 앱을 더 빠르게” 성능 튜닝의 모든 것','자바가상머신(JVM) 최적화를 통해 JVM 내에서 실행되는 자바 애플리케이션의 성능과 효율성을 높일 수 있다. 실행 속도를 개선하고 메모리 사용량을 줄이고 리소스 사용을 최적화하는 다양한 기법을 사용한다.   JVM 최적화 작업에는 힙 크...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/309301');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','“그래도 코딩하는 임원은 거의 없다” 로우코드ㆍ노코드 개발 ‘이상과 현실’','로우코드, 노코드 개발 플랫폼이 빠르게 확산하고 있다. 특히 올해는 AI 인기와 함께 큰 주목을 받고 있다. 누구나 애플리케이션을 개발할 수 있도록 해 이른바 ''시민 개발자(citizen developers)'' 흐름을 선도하고 있다. 그런데 사실 70...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/308419');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','마이크로소프트의 오픈소스 개발에 워크스루를 활용하는 방법','마이크로소프트가 오픈 개발 모델로 전환한 것은 대규모 오픈소스 개발 관리는 어떻게 하는지 연구할 수 있는 흥미로운 사례다. 수백만 명의 사용자와 수천 명의 잠재적인 기여자를 감당해야 하는 마이크로소프트의 프로젝트 유지 관리자는 대부분의 오픈소스 프로젝...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/307981');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','사이버보안을 강화하는 애자일 개발 10원칙','경쟁이 극심한 오늘날 환경은 기업에 더 빨리 움직이고 더 혁신할 것을 요구한다. 결과적으로 80% 이상의 기업이 애자일 개발 방법론을 채택한다. 그러나 소프트웨어 주기를 관리하는 과정이 안전하지 않으면 ‘빠른 개발’은 사이버 범죄자가 악용할 수 있는 ...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/307753');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','텐서플로우로 머신러닝으로 비트코인 가격 예측하기','텐서플로우는 가장 인기 있는 머신러닝 플랫폼이며, 노드(Node) 버전인 TensorFlow.js를 사용하면 자바스크립트 애플리케이션에서 손쉽게 텐서플로우를 쓸 수 있다. 여기서는 현재 가장 흥미로운 2가지 기술인 암호화폐와 AI를 결합한다. 신경망을...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/307663');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','"리소스는 더 적게, 신뢰성은 더 높게" 클라우드 혁명의 근간 ''관찰가능성''','관찰가능성(observability) 개념의 기원은 1960년대, 복잡한 시스템을 사람이 이해할 수 있도록 분해하기 위한 루돌프 E. 칼만의 고전적 연구로 거슬러 올라간다. 당시는 항공우주와 항법을 위한 새로운 컴퓨팅 시스템이 맹렬한 기세로 등장하던 ...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/307387');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','“LLM 개발을 더 간편하게” 랭체인(LangChain)의 이해','대규모 언어 모델(LLM)을 위한 효과적인 프롬프트를 작성하는 데는 기술이 필요하지만 LLM 사용법은 대체로 간단하다. 반면 언어 모델을 사용한 프로그래밍은 어려울 수 있다. 그럴 때 랭체인(LangChain)을 사용하면 된다.  랭체인은 ...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/307189');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','“단점 알지만 너무 유용해” 개발자 절반 이상 생성형 AI 도입 예정…깃랩 보고서','많은 개발자가 생성형 AI 사용 시 수반하는 위험을 폭넓게 이해하고 있지만, 생성형 AI가 유용한 기술이라는 점도 널리 인식하고 있는 것으로 나타났다. 최근 깃랩은 이같은 조사 결과를 담은 보고서 ''2023 글로벌 데브섹옵스 보고서 시리즈(2023 G...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/306217');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','“자바 18 릴리스의 꽃” 심플 웹 서버 시작하기','자바 18 릴리스(2022년 3월)에 포함된 가장 유용한 새 기능이 바로 ''심플 웹 서버(Simple Web Server)''다. HTTP 파일 서버를 손쉽게 가동하고 구성할 수 있게 지원할뿐만 아니라, 단순한 사용 사례에서 기존 httpserver 패...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/305815');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','글로벌 칼럼 | 창업에 ‘너무 늦은’ 나이는 없다','필자는 이미 은퇴 나이를 훌쩍 넘겼음에도, 필자의 작은 회사 본 니콜스 앤 어소시에이츠(Vaughan-Nichols & Associates)는 30년 넘게 여전히 건재하다. 필자의 은퇴 계획은 이미 여러 사람에게 이야기한 것처럼, 목숨이 다하는...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/309883');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','한국CIO포럼, ‘2023년도 올해의 CIO상’ 11월 3일까지 공모','한국CIO포럼이 11월 3일까지 ‘2023년도 올해의 CIO상’을 공모한다고 밝혔다. 올해의 CIO상은 기업(기관)의 디지털 혁신 나아가 한국의 정보화 발전을 위해 공로가 큰 CIO(최고정보담담임원)를 발굴해 시상하는 IT 관련 시상제도로 올...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/309829');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','“출근 도장만 찍고 일은 집에서” 사무실 복귀 흐름 속 새로운 업무 트렌드','사무실 출근이 다시 의무가 되면서 많은 직원이 출근 도장을 찍고 몇 시간 커피 타임을 가진 뒤 집으로 돌아가 업무를 한다는 연구 조사가 발표됐다. 일명 ‘커피 배지(Coffee Badge)’라고 불리는 새로운 업무 트렌드는 화상회의 솔루션 업체 아울 ...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/309685');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','"첫 달은 고용주의 수습 기간" 기업의 주요 과제로 대두되는 온보딩','힘들게 채용한 직원이 약속한 날짜에 출근하지 않는 경우가 늘고 있다. 최근의 한 설문조사가 이런 추세를 데이터로 확인했다. 채용은 계약이 체결된다고 해서 끝나지 않는다. 구직자 10명 중 1명 이상이 고용 계약에 서명했지만 입사하지 않는다. 그리고 ...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/308137');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','블로그 | 올바른 클라우드 경력 개발을 위해 당장 해야 할 3가지','사실 필자가 가장 많이 받는 질문은 좋은 클라우드에 관한 것이 아니다. "어떻게 하면 클라우드 경력을 더 잘 개발할 수 있을까?"이다. 우선, 하지 말아야 할 것부터 알아보자. MBA 프로그램이나 기타 고가의 교육 과정에 너무 많은 비용을 지출하지 ...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/307897');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','엔비디아, AI 언어 LLM 온라인 개발자 밋업 ‘AMA’ 개최','엔비디아가 엔비디아 AI(NVIDIA AI) 개발자 밋업의 새로운 시리즈 ‘AMA(Ask Me Anything)’를 개최한다고 9월 1일 밝혔다. 이번 개발자 밋업은 오는 9월 5일 화요일 오후 2시부터 4시까지 온라인으로 진행되며, 무료로 사전 등록...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/305659');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('개발자','마이크로소프트, 맥용 비주얼 스튜디오 단종','마이크로소프트가 맥용 비주얼 스튜디오 IDE를 단종한다. 맥 사용 개발자에게는 비주얼 스튜디오 코드용 C# 개발 키트나 닷넷 개발을 지원하는 다른 확장 프로그램 같은 대안을 찾아볼 것을 권고했다.   마이크로소프트는 맥용 비주얼 스튜디오에...','https://www.itworld.co.kr/t/61023/%EA%B0%9C%EB%B0%9C%EC%9E%90/305593');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','글로벌 칼럼 | 빅 테크 기업의 사무실 복귀 정책, 실패할 수밖에 없는 이유','최근 아마존 CEO 앤디 재시는 주3일 사무실 출근을 요구하며 이를 거하는 직원들을 해고하거나 ‘자발적 사직’을 권유하겠다고 위협했다. 그리고 필자는 재시 요구가 오히려 아마존에 불리하게 작용할 것으로 예상한다.    재시의 발언...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/306817');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','미 노동자 전폭 지지 받는 주4일 근무…전미자동차노조도 합세','전미자동차노조(UAW)가 주4일 근무제를 원하고 있다.  UAW 측은 15만 조합원과 디트로이트 빅3(포드, 제너럴 모터스, 크라이슬러)는 새로운 단체 협약을 협상 중이며, 필요하다면 파업을 승인하기로 최근 결의했다. UAW 회장 숀 페인이...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/305737');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','글로벌 칼럼 | 과대광고가 가장 심한 네트워크 기술 5가지와 대처법','유망한 네트워크 기술의 매력이 검증되지 않은 아이디어를 채택해야 한다는 압박감으로 인해 퇴색될 수 있다. 필자가 만난 기업 IT 책임자 중 3/4은 경영진의 선입견이 네트워크 및 IT 운영을 유지하는 데 있어 ''심각한 문제''라고 답했다.  ...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/305173');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','데이터 민주화를 실현하는 3가지 핵심','대부분 임원에게 데이터 민주화는 그림의 떡이다. 전체 팀과 부서가 모든 비즈니스 의사결정을 개선하는 데 충분히 데이터를 사용할 수 있는 상태가 되어 ROI 개선, 지속적인 성장, 전반적인 성과 향상으로 이어진다는 개념은 현실과 멀게 느껴진다. &nbs...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/305113');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','"AI 기술 없으면 일자리가 위험하다" IBM-옥스포드 이코노믹스 보고서','챗GPT를 필두로 한 AI의 급속한 발전은 기존의 비즈니스 모델을 뒤집고 업무 환경의 미래를 바꾸고 있는 것으로 보인다. IBM 비즈니스 가치 연구소가 독립 경제 자문 회사 옥스퍼드 이코노믹스(Oxford Economics)의 보고서(Augmente...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/304567');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','월터스클루어, 독립 조사기관 버댄틱스 선정 ‘ESG 소프트웨어 분야 선도 업체’로 꼽혀','월터스클루어가 그린 쿼드런트 보고서에서 ESG 소프트웨어의 선도 글로벌 공급업체로 선정됐다고 8월 23일 밝혔다. 그린 쿼드런트 보고서는 독립 리서치 기관인 버댄틱스가 매년 발행하는 보고서다.   회사에 따르면 이 업계 지표는 전세계에서 ...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/304411');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','글로벌 칼럼 | 미래의 업무 환경에 빠질 수 없는 2가지','코로나19 팬데믹이 끝났으니 이제 직원이 사무실로 복귀해야 한다고 주장하는 사람도 있고, 원격 근무는 계속될 것이라고 주장하는 사람도 있다. 또한 누군가는 자신이 수행하는 업무가 AI로 대체될 것을 두려워하지만, 누군가는 AI가 업무에 도움을 주고 생...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/303241');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','블로그ㅣ‘환멸의 계곡’에 진입한 하이브리드 근무','생산성과 직원 만족도를 향상시키는 새로운 패러다임으로 찬사를 받았던 ‘원격근무’의 열기가 다소 식은 듯하다. 많은 기업은 물론 정부 기관까지 사무실 복귀를 요구하고 있다.   미국 노동통계국(BLS)이 발표한 새로운 데이터에서 올해 초 코...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/303157');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','[ITWorld 넘버스] “요새 신입사원은 왜 그럴까?” 숫자로 본 ‘MZ 세대’ 특징 4가지','몇 년 전부터 이른바 ‘MZ세대’가 화두로 떠올랐다. 이른바 ‘에어팟을 끼고 일해야 능률이 올라가고, 어떤 상황에서도 자신의 의견을 굽히지 않으며, 사무실에서도 브이로그를 촬영하고, 툭하면 퇴사한다’는 세대다. 사실 밀레니얼 세대와 Z세대를 MZ세대...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/302989');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','재택 근무 시대 끝났나…미국 공무원도 올가을부터 사무실 복귀','미국의 온라인 뉴스 매체 악시오스(Axios)가 최근 입수한 백악관 이메일에 따르면, 미국 대통령 조 바이든은 각료들에게 올가을부터 연방 공무원을 사무실로 복귀시키라고 지시했다. 이메일에서 바이든은 “대면 업무 복귀는 팀의 안녕에 중요하고 미...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/302563');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','LG전자-서울대, 장애인 고객 접근성 개선 연구 진행','LG전자가 ESG 비전 ‘모두의 더 나은 삶(Better Life for All)’을 실현하기 위한 장애인 고객 접근성 개선 연구에 나섰다고 8월 7일 밝혔다.   회사에 따르면 LG전자는 7월부터 9월까지 3개월동안 서울대학교 보건대학원 환...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/302389');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','“생산성 떨어져” 사무실로 복귀하는 기업들','미국 노동통계국의 새로운 데이터에 따르면 코로나19 팬데믹이 해제된 이후 생산성이 소폭 하락한 것으로 나타나면서 많은 기업 리더가 엄격한 사무실 출근 정책을 시행하고 있다.    수십 년 전 젊은 건축가였던 빌 민다라는 사무실에서...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/302257');
Insert into C##LMS.ARTICLE (CATEGORY,TITLE,CONTENT,URL_ADDRESS) values ('기업 문화','플래티어, ‘MZ 선호 복지’ 강화··· "멘탈 케어, 멘토링, 조기퇴근, 거점 오피스 등"','플래티어가 유연하고 혁신적인 조직 문화 정착을 위해 임직원의 복지 혜택을 강화하는 등 내실 다지기에 심혈을 기울이고 있다고 7월 27일 밝혔다. 심리적 고충의 체계적인 관리, 자율적인 업무 환경 조성, 전문역량 개발 지원 등 즐거운 근무 환경을 기반으...','https://www.itworld.co.kr/t/73379/%EA%B8%B0%EC%97%85+%EB%AC%B8%ED%99%94/300949');
REM INSERTING into C##LMS.ATTENDENCE
SET DEFINE OFF;
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/24','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/24','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/24','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/24','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/24','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/10/25','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/10/30','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/02','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/03','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/15','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/16','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/20','RR/MM/DD'),'출석','아픔');
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/20','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/20','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/20','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/20','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/19','RR/MM/DD'),'출석','아픔');
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/19','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/19','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/19','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/19','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/22','RR/MM/DD'),'출석','아픔');
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/22','RR/MM/DD'),'결석','죽음');
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/22','RR/MM/DD'),'조퇴','지림');
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/22','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/22','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/23','RR/MM/DD'),'출석','아픔');
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/23','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/23','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/23','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/23','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/13','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/14','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/10/26','RR/MM/DD'),'결석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/10/26','RR/MM/DD'),'조퇴','아픔');
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/10/26','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/09','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/10','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/21','RR/MM/DD'),'출석','아픔');
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/21','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/21','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/21','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/21','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/08','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/10/27','RR/MM/DD'),'출석',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/10/31','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/01','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/06','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('63','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('62','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('48','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('60','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('88','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('92','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('95','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('99','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('84','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('87','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('101','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('102','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('40','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('81','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('82','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('83','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('85','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('86','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('89','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('90','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('91','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('93','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('94','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('96','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('97','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('98','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('100','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('103','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('104','84',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('66','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('64','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('67','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('69','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('70','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('72','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('74','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('76','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('77','35',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('80','47',to_date('23/11/07','RR/MM/DD'),'대기',null);
Insert into C##LMS.ATTENDENCE (STUDENT_CODE,CLASS_CODE,ATTDATE,STATUS,NOTE) values ('106','47',to_date('23/11/07','RR/MM/DD'),'대기',null);
REM INSERTING into C##LMS.CHATROOM
SET DEFINE OFF;
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (41,'38','63','나교사','김현쑥');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (81,'38','67','나교사','나미');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (82,'38','69','나교사','상디');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (35,'38','40','나교사','김옥지');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (36,'38','48','나교사','김바나나');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (83,'38','77','나교사','홍진호');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (84,'72','100','윤차주','오상민');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (85,'72','97','윤차주','김지혁');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (86,'72','81','윤차주','나정운');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (87,'72','91','윤차주','조대곤');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (88,'72','93','윤차주','금현수');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (89,'72','98','윤차주','허두원');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (90,'72','94','윤차주','김태현');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (91,'72','103','윤차주','김건');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (92,'72','90','윤차주','김정선');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (93,'72','95','윤차주','한창현');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (94,'72','104','윤차주','박성혁');
Insert into C##LMS.CHATROOM (CHAT_ROOM,PROF_CODE,STUDENT_CODE,PROF_NAME,STUDENT_NAME) values (95,'72','105','윤차주','이승용');
REM INSERTING into C##LMS.CHAT_CONTENT
SET DEFINE OFF;
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㅎㅇ
','18:15',0,to_date('23/10/20','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㅎㅇ
','18:15',0,to_date('23/10/20','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','대답
','18:15',0,to_date('23/10/20','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','대
','18:15',0,to_date('23/10/20','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','답
','18:15',0,to_date('23/10/20','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','3
','18:15',0,to_date('23/10/20','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','2
','18:15',0,to_date('23/10/20','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','1
','18:15',0,to_date('23/10/20','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','안녕하세요','18:41:50',0,to_date('23/10/20','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','












sdgs



','16:13:53',0,to_date('23/10/22','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','asd
','16:14:24',0,to_date('23/10/22','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','ㅎㅇ','02:39:50',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','gs','04:02:28',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','ds
','04:05:51',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','새로운채팅
','04:46:01',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','새 질문
','04:46:24',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','안녕하세요','14:43:53',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','안녕하세요','14:44:08',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','수업시간 내용 질문이 있습니다','14:44:29',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','123','14:46:42',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','456','14:47:00',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','789','14:47:28',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','2123456789','14:47:48',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','asdgjgh','14:48:22',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','질문 있습니다.','14:57:53',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','코드 오류입니다.','14:58:23',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','코드오류는 직접 수정하세요','14:58:32',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','에반데','14:58:50',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','안녕하세요','15:40:10',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','무슨일이죠','15:40:24',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','123','15:47:51',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','123','15:47:53',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','456','15:47:55',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','789','15:47:58',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','채팅','17:29:45',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다 채팅입니다','17:31:23',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','ㅁㄴㅇ','17:44:22',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','네','17:46:16',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','나다','20:52:45',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','?','20:52:50',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','왜','20:53:28',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','123','13:15:33',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','345','13:15:47',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','123','13:15:52',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','??','22:01:42',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','동작','22:02:00',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','왜지''','22:02:34',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','''''','22:02:47',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','1','11:53:23',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','234','11:53:54',0,to_date('23/10/26','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','1','13:36:46',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','2','13:36:47',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','3','13:36:47',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','4','13:36:48',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','5','13:36:48',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','.digital-timer {
	color: lime;
	font-size: 32px;
	font-weight: bold;
	background-color: black;
	border: none;
	border-radius: 10px;
}

.quiz_timer {
	width: 1000px;
	height: 50px;
	text-align: center;
	border-radius: 10px;
	padding-left: 5px;
	padding-right: 5px;
}

.q_timer {
	width: 100%;
	height: 50px;
	background-color: #d4d4d4;
	border-radius: 4px;
	border: 1px solid #7ca7b7;
}

.q_timer_progress {
	width: 1px;
	height: 50px;
	background: -webkit-linear-gradient(right, #99ccff, #006600);
	transition: width 1s linear;
	border-radius: 4px;
}

#quiz_answer {
	font-family: ''munhwa'';
	color: #336600;
	background-color: #99ff00;
	border-radius: 7px;
	width: 100%;
	height: 30px;
	font-size: 16pt;
}

#quiz_answer:hover {
	background-color: #336600;
	color: #99ff00;','13:38:01',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','.digital-timer {
	color: lime;
	font-size: 32px;
	font-weight: bold;
	background-color: black;
	border: none;
	border-radius: 10px;
}

.quiz_timer {
	width: 1000px;
	height: 50px;
	text-align: center;
	border-radius: 10px;
	padding-left: 5px;
	padding-right: 5px;
}

.q_timer {
	width: 100%;
	height: 50px;
	background-color: #d4d4d4;
	border-radius: 4px;
	border: 1px solid #7ca7b7;
}

.q_timer_progress {
	width: 1px;
	height: 50px;
	background: -webkit-linear-gradient(right, #99ccff, #006600);
	transition: width 1s linear;
	border-radius: 4px;
}

#quiz_answer {
	font-family: ''munhwa'';
	color: #336600;
	background-color: #99ff00;
	border-radius: 7px;
	width: 100%;
	height: 30px;
	font-size: 16pt;
}

#quiz_answer:hover {
	background-color: #336600;
	color: #99ff00;','13:38:05',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','?','13:49:26',0,to_date('23/10/26','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','ㅁㄴㅇ','13:50:54',0,to_date('23/10/26','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','asd','18:08:32',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','123asdfd','18:08:34',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','fsdaeagyagad','18:08:35',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','FDEqft','18:08:37',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (83,'38','dsaac','18:08:48',0,to_date('23/10/26','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (83,'38','gdf','18:08:50',0,to_date('23/10/26','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (82,'38','1234','18:08:55',0,to_date('23/10/26','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','Ok','18:09:08',0,to_date('23/10/26','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (89,'72','테스트','12:21:05',0,to_date('23/10/27','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'90','안녕하세요','12:28:21',0,to_date('23/10/27','RR/MM/DD'),'김정선');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'72','네 안녕하세요','12:28:59',0,to_date('23/10/27','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','안
','16:16:04',0,to_date('23/10/22','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','녕
','16:16:05',0,to_date('23/10/22','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','하
','16:16:06',0,to_date('23/10/22','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','세
','16:16:07',0,to_date('23/10/22','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','요
','16:16:08',0,to_date('23/10/22','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','새로운 채팅을 보낼때 리드카운트 처리 되는지 테스트 해보겠습니다.
','01:07:22',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','새로운 채팅 다시 보내기
','01:08:56',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','채팅 보낼 시 순서 정렬 테스트
','01:09:31',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','ㅗㅎㅇㄹ홍ㅁ호','02:17:15',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','안녕하세요
','02:34:25',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','해위
','02:34:53',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','fds','04:18:31',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','이 기능추가가 마지막이면 좋겠어요','18:04:48',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','그래요?','18:05:00',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','네','18:05:31',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','아닌거같네요','18:06:27',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','안돼...','18:10:58',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','제발...','18:11:22',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','123','18:20:01',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','234','18:20:14',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','김지혁','18:22:47',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','바보','18:22:48',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','ㄹㅇ이가','18:22:53',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','ㅁㅈㅇㅁㅇㄴㅇㄴ','18:23:18',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','오','18:23:19',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','개신기해','18:23:20',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','안녕','18:23:23',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','안녕','18:31:28',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','안뇽','18:31:31',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㅎㅇ','20:32:15',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','와이','20:38:35',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㄹㅇ?','20:38:47',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','못가','20:42:43',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','너도못가','20:42:59',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㅋㅋ','20:43:04',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㄴㅇㅎㅍㅁㄴㅇ로ㅠㅇㄹ몽ㄹ미너ㅠ푸ㅐ;ㅁㅇ러니ㅜ''','20:43:21',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','네','20:49:33',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','니요','20:49:51',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','123','14:30:28',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','1234','14:30:34',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','1234','14:30:37',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','1234','14:30:40',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','ㅁㄴㅇ','14:31:10',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','잘되나','14:31:22',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:32:14',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','1234','14:32:15',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','1324','14:32:18',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','1423','14:32:23',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','야','17:55:56',0,to_date('23/10/25','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','질문있습니다.
','13:07:56',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','지각할거같습니다.
','13:08:25',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','채팅테스트
','13:11:18',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','22','12:00:43',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','55','12:02:44',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','44','12:03:27',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','채팅','12:09:27',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','쌤 하이요
','13:03:27',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','coxld?','12:09:34',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','12314','12:17:50',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','1234512','12:17:57',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','ㅁ낭눙파ㅓ누]','13:15:09',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','sp','13:15:18',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','제대로','22:06:46',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','돌아가나','22:06:49',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','같아요','22:06:55',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','읽었나','14:26:41',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','체크','14:26:49',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','?','14:26:56',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','??','14:26:59',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','?','14:27:12',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','?','14:27:14',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','??','14:27:19',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:27:27',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','네 알겠습니다.','18:30:13',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','123','13:04:24',1,to_date('23/10/27','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','<scritp>','13:04:33',1,to_date('23/10/27','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','as','13:04:36',1,to_date('23/10/27','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','''<script>''','13:04:49',1,to_date('23/10/27','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','''<script>''','13:05:03',1,to_date('23/10/27','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','''<script></script
>''','13:05:19',1,to_date('23/10/27','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','ㅎㅇ
','04:11:03',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','채팅 되냐?
','04:43:10',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㅎㅇ','13:18:27',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','gd
','13:18:39',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','학생이보냄\
','13:19:00',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','교사답장함
','13:19:04',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㅎㅇ
','13:21:29',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','안녕하세요
','13:22:12',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','채팅','02:18:28',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㅁㄴㅇ
','13:22:27',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㅎㅇ
','13:23:52',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㅎㅇ
','14:23:13',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㅎㅇ
','14:23:26',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㅇㄻㄴㅇㅁㄴ로ㅓㄴ아ㅚㄹ어ㅗ니ㅏㅁ포니마ㅓ
','14:25:51',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','안녕하세요','14:28:22',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','안녕하세요','14:30:15',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','새로운 메세지입니다.','14:30:42',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','네','14:30:50',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:33:19',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:33:48',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','안녕','14:34:57',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:35:10',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','1234','14:36:03',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','asd','14:36:28',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:37:10',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','asd','14:37:16',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','1234','14:37:30',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:40:14',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','ㅎㅇ','15:02:56',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','gd','15:02:57',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','채팅입니다.','16:52:49',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','채팅2','16:53:26',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','채팅','16:53:35',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','메세지 보냄','18:41:10',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','메세지 보내기','18:44:48',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','집에가고싶어','20:42:17',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','아니넌못가','20:42:29',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','못간다고 ㅋㅋㅋㅋ','20:42:53',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㅎㄹㅇㅎㅇ러ㅏㅗ하ㅐ]\','20:43:12',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㅇㅎ러ㅜㅏㅣㅓㄴㅇㄹ뮤ㅣㅇㅎㄴ뮤러ㅣ','20:43:27',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','싫어요','20:54:24',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㄴㄴ','20:54:33',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','안됩니다','20:54:40',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','채팅기능','20:55:56',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','완성됬나요','20:55:59',0,to_date('23/10/23','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','네','20:56:08',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','채팅 끝이에요','20:56:11',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','11','11:51:53',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','11','11:51:59',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','11?','12:00:36',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','33','12:01:44',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','44','12:02:00',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','33','12:02:51',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','123','21:40:23',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','54','21:40:36',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','123241랒ㅇ','21:40:46',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','안녕','21:40:58',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','하세요','21:55:15',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','그래','21:55:21',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','??','21:56:41',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','네?','21:57:01',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','ㅁㄹㄴㅁㅇㄿㅎㅁㄴ','22:02:50',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','자','22:06:35',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','이제','22:06:44',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','그런거','22:06:53',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','네','14:25:45',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','네?','14:25:58',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','네ㅔ','14:26:05',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','네','14:26:13',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','채팅','14:26:38',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','체크하기','14:26:43',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','네','14:26:47',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','확인입니다.','14:26:52',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','?','14:27:10',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','??','14:27:21',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','123','14:30:21',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:30:25',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:30:30',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','1234','14:30:42',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','qwe','14:31:07',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','네','14:31:16',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','흠','14:32:06',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','123','14:33:51',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','1234','14:33:52',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','김바나나','14:34:16',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','채팅보세요','14:34:19',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','네','14:34:30',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','무슨일인가요','14:34:32',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','??','14:34:38',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','asd','15:08:52',0,to_date('23/10/25','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','asd','15:08:57',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','123','15:09:05',0,to_date('23/10/25','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','456','15:09:08',0,to_date('23/10/25','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'48','채팅입니다','18:29:49',0,to_date('23/10/25','RR/MM/DD'),'김바나나');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','2','12:45:52',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','네','13:49:22',0,to_date('23/10/26','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','네','13:49:35',0,to_date('23/10/26','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'90','배고파요','17:30:55',0,to_date('23/10/26','RR/MM/DD'),'김정선');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'72','밥먹어요','17:31:07',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'90','123','17:31:29',0,to_date('23/10/26','RR/MM/DD'),'김정선');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','오라클에서 직접 선생이 보낸것처럼 메세지 넣기333','20:00',0,to_date('23/10/20','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','오라클에서 직접 선생이 보낸것처럼 메세지 넣기444','20:00',0,to_date('23/10/20','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','오라클에서 직접 선생이 보낸것처럼 메세지 넣기555','20:00',0,to_date('23/10/20','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㅎㅇ','13:16:11',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','gd','13:16:18',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','123','15:59:03',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','1234','15:59:07',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'38','와이','17:47:42',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','네?','17:48:07',0,to_date('23/10/23','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','ㅎㅇ','20:28:59',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㅎㅇ','20:29:11',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'40','안녕','20:38:14',0,to_date('23/10/23','RR/MM/DD'),'김옥지');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㄹㅇ','20:38:56',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','ㅋㅋ','20:54:51',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','다햇다','20:54:53',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','그런의미로','20:56:37',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','퇴근좀시켜줘','20:56:41',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (36,'38','당근당근','20:56:45',0,to_date('23/10/23','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (35,'38','채팅','12:09:41',0,to_date('23/10/24','RR/MM/DD'),'나교사');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (41,'63','네 채팅','12:09:47',0,to_date('23/10/24','RR/MM/DD'),'김현쑥');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (81,'67','1234','15:18:59',0,to_date('23/10/26','RR/MM/DD'),'나미');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (82,'69','33','15:19:17',0,to_date('23/10/26','RR/MM/DD'),'상디');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (83,'77','22','15:19:45',0,to_date('23/10/26','RR/MM/DD'),'홍진호');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (83,'77','ㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇ','15:23:26',0,to_date('23/10/26','RR/MM/DD'),'홍진호');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (84,'100','안녕하세요','15:25:59',0,to_date('23/10/26','RR/MM/DD'),'오상민');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (85,'97','안녕하세요','15:26:12',0,to_date('23/10/26','RR/MM/DD'),'김지혁');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (86,'81','안녕하세요','15:26:47',0,to_date('23/10/26','RR/MM/DD'),'나정운');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (87,'91','안녕하세요','15:27:05',0,to_date('23/10/26','RR/MM/DD'),'조대곤');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (88,'93','안녕하세요','15:27:23',0,to_date('23/10/26','RR/MM/DD'),'금현수');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (89,'98','안녕하세요','15:27:38',0,to_date('23/10/26','RR/MM/DD'),'허두원');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (90,'94','안녕하세요','15:27:53',0,to_date('23/10/26','RR/MM/DD'),'김태현');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (91,'103','안녕하세요','15:28:07',0,to_date('23/10/26','RR/MM/DD'),'김건');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'90','안녕하세요','15:28:37',0,to_date('23/10/26','RR/MM/DD'),'김정선');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (93,'95','안녕하세요','15:29:08',0,to_date('23/10/26','RR/MM/DD'),'한창현');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (94,'104','안녕하세요','15:29:24',0,to_date('23/10/26','RR/MM/DD'),'박성혁');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (88,'93','AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA','15:30:08',0,to_date('23/10/26','RR/MM/DD'),'금현수');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (88,'72','네 안녕하세요','15:31:25',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (95,'105','1','15:32:17',0,to_date('23/10/26','RR/MM/DD'),'이승용');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (95,'72','네','15:32:33',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (91,'72','네 안녕하세요','15:33:16',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (89,'72','ChatList.java','15:58:29',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (88,'72','ChatController.java','15:58:38',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (84,'72','resources','15:58:48',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (94,'72','web.xml','15:58:56',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (93,'72','error.jsp','15:59:11',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'90','pagingView.jsp','15:59:24',0,to_date('23/10/26','RR/MM/DD'),'김정선');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (95,'72','script type="text/javascript"','16:01:00',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (85,'97','[spring legacy 환경설정].txt','16:01:58',0,to_date('23/10/26','RR/MM/DD'),'김지혁');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (90,'94','web.xml error 발생시
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee;
	새미콜론 또는 java 를 Java or JAVA 로 변경','16:02:43',0,to_date('23/10/26','RR/MM/DD'),'김태현');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (87,'91','.gitignore','16:03:39',0,to_date('23/10/26','RR/MM/DD'),'조대곤');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'72','오늘 수업자료입니다.','16:40:17',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'72','First (1).zip','16:40:39',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'72','네','17:32:42',0,to_date('23/10/26','RR/MM/DD'),'윤차주');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (85,'97','에러','12:22:20',0,to_date('23/10/27','RR/MM/DD'),'김지혁');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'90','안녕하세요','14:57:31',0,to_date('23/10/27','RR/MM/DD'),'김정선');
Insert into C##LMS.CHAT_CONTENT (CHAT_ROOM,CHAT_TALKER,CHAT_CONTENT,CHAT_TIME,CHAT_READCOUNT,CHAT_DATE,CHAT_TALKER_NAME) values (92,'72','123','14:57:46',0,to_date('23/10/27','RR/MM/DD'),'윤차주');
REM INSERTING into C##LMS.DESIGNED_CLASS
SET DEFINE OFF;
Insert into C##LMS.DESIGNED_CLASS (CLASS_CODE,CLASS_NAME,CLASS_GOAL,UPLOAD_DATE,EXECUTE_DATE,CONFIRMED,PROF_CODE,PROF_CONFIRM) values ('85','[과정설계 실험 1기]','설계를 시험한다.',to_date('23/10/24','RR/MM/DD'),to_date('23/01/02','RR/MM/DD'),'NY','68','Y');
Insert into C##LMS.DESIGNED_CLASS (CLASS_CODE,CLASS_NAME,CLASS_GOAL,UPLOAD_DATE,EXECUTE_DATE,CONFIRMED,PROF_CODE,PROF_CONFIRM) values ('50','텐서[강남 1기] 플로우 딥러닝 인공지능과정','Python 기초 문법을 습득하고 GPU를 이용한 수치 및 이미지 처리 기반의 머신러닝 모델을 개발 할 수 있는 개발자 양성을 목표로 합니다.',to_date('23/10/21','RR/MM/DD'),to_date('23/11/01','RR/MM/DD'),'NY','49','Y');
Insert into C##LMS.DESIGNED_CLASS (CLASS_CODE,CLASS_NAME,CLASS_GOAL,UPLOAD_DATE,EXECUTE_DATE,CONFIRMED,PROF_CODE,PROF_CONFIRM) values ('47','[꿀밤 1기] 꿀밤과정','꿀밤 마스터',to_date('23/10/21','RR/MM/DD'),to_date('23/10/11','RR/MM/DD'),'NY','67','Y');
Insert into C##LMS.DESIGNED_CLASS (CLASS_CODE,CLASS_NAME,CLASS_GOAL,UPLOAD_DATE,EXECUTE_DATE,CONFIRMED,PROF_CODE,PROF_CONFIRM) values ('84','[강남 32기] 지능형 도우미서비스 융합 웹서비스 개발자 과정','HTML, CSS, JavaScript를 포함한 웹 개발의 기본 요소 및 개념을 습득하고, 웹 페이지의 구조와 디자인을 개발과, 데이터베이스 설계, SQL 쿼리 작성, 및 데이터베이스 시스템 관리를 통해 데이터 저장 및 관리 능력, 소프트웨어 개발 프로젝트를 관리하고 팀원과의 협업 능력을 향상시켜 실제 개발 환경에서 효과적으로 작업할 수 있게 한다.',to_date('23/10/24','RR/MM/DD'),to_date('24/03/07','RR/MM/DD'),'NY','72','Y');
Insert into C##LMS.DESIGNED_CLASS (CLASS_CODE,CLASS_NAME,CLASS_GOAL,UPLOAD_DATE,EXECUTE_DATE,CONFIRMED,PROF_CODE,PROF_CONFIRM) values ('35','[서울 1기] 챗GPT 4 인공지능 실용 전문가 1기 과정','인공지능과 채팅할 능력을 기른다.',to_date('23/10/20','RR/MM/DD'),to_date('23/10/11','RR/MM/DD'),'NY','38','Y');
Insert into C##LMS.DESIGNED_CLASS (CLASS_CODE,CLASS_NAME,CLASS_GOAL,UPLOAD_DATE,EXECUTE_DATE,CONFIRMED,PROF_CODE,PROF_CONFIRM) values ('86','[강남 33기] 무지능형 통신서비스 융합 용광로 일꾼과정','나도 학습목표가 뭔지 모르겠다~!',to_date('23/10/25','RR/MM/DD'),to_date('23/11/01','RR/MM/DD'),'NY','71','N');
Insert into C##LMS.DESIGNED_CLASS (CLASS_CODE,CLASS_NAME,CLASS_GOAL,UPLOAD_DATE,EXECUTE_DATE,CONFIRMED,PROF_CODE,PROF_CONFIRM) values ('88','[강남 33기] AI 도우미 서비스 과정','안녕',to_date('23/10/27','RR/MM/DD'),to_date('23/11/01','RR/MM/DD'),'NY','85','Y');
Insert into C##LMS.DESIGNED_CLASS (CLASS_CODE,CLASS_NAME,CLASS_GOAL,UPLOAD_DATE,EXECUTE_DATE,CONFIRMED,PROF_CODE,PROF_CONFIRM) values ('36','[서울 2기] 오라클로 배우는 데이터베이스 개론 기초과정','데이터베이스 마스터를 위해 성실히 달려나간다.',to_date('23/10/20','RR/MM/DD'),to_date('23/10/26','RR/MM/DD'),'NY','40','Y');
REM INSERTING into C##LMS.DESIGNED_SUBJECT
SET DEFINE OFF;
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003020101_17v2','85',60,4,'라디오 방송 기술 기획');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003020103_17v2','85',200,1,'라디오 방송 스튜디오 제작 기술');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003020104_17v2','85',190,2,'라디오 방송 중계 제작 기술');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'85',100,3,'1차 프로젝트');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003030210_22v2','47',45,8,'방송시스템 유지보수');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003030209_22v3','47',45,3,'신호품질관리');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003030208_22v3','47',45,7,'송신시스템 운용(RF/IPTV/CABLE/위성)');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003020303_17v2','47',30,6,'지상파DMB 단말 인증');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003020302_13v1','47',30,10,'지상파DMB 연구개발');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003020309_17v2','47',30,5,'무선국 운용');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003020310_17v2','47',60,1,'지상파DMB 방송망 운용');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003020311_17v2','47',60,4,'송신기 운용');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003020308_17v2','47',30,11,'원격제어시스템 운용');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001070301_19v1','50',30,0,'인공지능 모델 문제 정의');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001070303_19v1','50',60,0,'인공지능 데이터 확보');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001070304_19v1','50',60,0,'인공지능 데이터 전처리');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001070306_19v1','50',90,0,'인공지능 모델 학습');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001070308_19v1','50',30,0,'인공지능 모델 관리');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003030203_22v3','47',45,2,'방송제작시스템 운용');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2003030204_22v2','47',45,9,'방송편집 시스템 운용');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040306_22v2','35',40,3,'증강현실 제작 리소스 최적화');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040307_22v2','35',40,4,'증강현실 콘텐츠 개발');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020208_19v4','84',50,23,'정보시스템 이행');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020211_19v5','84',60,2,'서버프로그램 구현');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020212_19v5','84',40,5,'인터페이스 구현');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020214_19v5','84',30,19,'애플리케이션 배포');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040301_22v2','35',30,1,'증강현실 콘텐츠 기획');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040302_22v2','35',40,2,'증강현실 UI/UX 설계');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020219_19v5','84',50,21,'애플리케이션 요구사항 분석');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020221_19v5','84',40,20,'애플리케이션 설계');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'84',50,3,'1차 프로젝트');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020413_19v4','84',30,18,'SQL활용');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020414_19v4','84',30,6,'SQL응용');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020415_19v1','84',30,7,'SQL작성');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020205_19v5','84',48,17,'데이터 입출력 구현');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020206_19v5','84',40,8,'통합 구현');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020401_19v4','84',20,4,'데이터베이스 요구사항 분석');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020402_19v4','84',30,14,'개념데이터 모델링');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020403_19v4','84',30,11,'논리 데이터베이스 설계');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020404_19v4','84',30,12,'물리 데이터베이스 설계');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'84',50,10,'2차 프로젝트');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'84',50,22,'직업상담 1');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020808_19v2','84',60,15,'시스템SW 배포');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020809_19v3','84',48,16,'시스템SW 단위 모듈 구현');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001020810_19v3','84',48,1,'시스템SW 인터페이스 구현');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'84',50,9,'직업상담 2');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'84',50,13,'3차 프로젝트');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040302_22v2','86',45,0,'증강현실 UI/UX 설계');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040308_22v2','86',30,0,'증강현실 콘텐츠 서버 구축');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040310_22v1','86',45,0,'증강현실 제작 리소스 개발');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040311_22v1','86',45,0,'증강현실 실시간 서비스');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040302_22v2','86',45,0,'증강현실 UI/UX 설계');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040301_22v2','86',30,0,'증강현실 콘텐츠 기획');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'86',100,0,'1차 프로젝트');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'86',100,0,'1차 프로젝트');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040109_22v2','86',45,0,'네트워크 프로그래밍');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040107_22v2','86',45,0,'오디오 소스 후반 작업');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040104_22v2','86',45,0,'영상 소스 후반 작업');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2002040102_22v2','86',45,0,'가상현실 시스템 설계');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'86',100,0,'2차 프로젝트');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001010515_21v1','36',30,3,'빅데이터 분석 플로우 구성');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001070207_22v2','88',10,3,'인공지능 서비스 실행계획 수립');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values (null,'88',10,4,'1차 프로젝트');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001070205_22v2','88',10,2,'인공지능 서비스 시나리오 기획');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001070204_22v2','88',10,1,'인공지능 서비스 모델 기획');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001010513_21v1','36',10,1,'빅데이터 분석 모델링');
Insert into C##LMS.DESIGNED_SUBJECT (SUBJECT_CODE,CLASS_CODE,SET_TIME,SUBJ_INDEX,SUBJECT_NAME) values ('2001010514_21v1','36',20,2,'빅데이터 분석 결과 평가');
REM INSERTING into C##LMS.FORM
SET DEFINE OFF;
Insert into C##LMS.FORM (FORM_NO,FORM_TITLE,FORM_AUTHOR,FORM_DATE,FORM_CONTENT,READCOUNT,ORIGINALFILENAME,RENAMEFILENAME,FORM_AUTHOR_NAME) values ('12','서식게시판 테스트입니다.','33',to_date('23/10/25','RR/MM/DD'),'123',5,'sample.txt','20231025140847.txt','영자야');
Insert into C##LMS.FORM (FORM_NO,FORM_TITLE,FORM_AUTHOR,FORM_DATE,FORM_CONTENT,READCOUNT,ORIGINALFILENAME,RENAMEFILENAME,FORM_AUTHOR_NAME) values ('13','서식만들기','33',to_date('23/10/25','RR/MM/DD'),'한기대 자료입니다.',3,'한국기술교육대학교_OKLMS NCS자격 및 능력단위정보_20230908.CSV','20231025140903.CSV','영자야');
Insert into C##LMS.FORM (FORM_NO,FORM_TITLE,FORM_AUTHOR,FORM_DATE,FORM_CONTENT,READCOUNT,ORIGINALFILENAME,RENAMEFILENAME,FORM_AUTHOR_NAME) values ('14','폼수정테스트용게시글','33',to_date('23/10/25','RR/MM/DD'),'자료실입니다.',4,'Search.java','20231025141048.java','영자야');
Insert into C##LMS.FORM (FORM_NO,FORM_TITLE,FORM_AUTHOR,FORM_DATE,FORM_CONTENT,READCOUNT,ORIGINALFILENAME,RENAMEFILENAME,FORM_AUTHOR_NAME) values ('15','자료실 이용 공지사항','33',to_date('23/10/25','RR/MM/DD'),'필독',4,'메일 발송.txt','20231025141109.txt','영자야');
Insert into C##LMS.FORM (FORM_NO,FORM_TITLE,FORM_AUTHOR,FORM_DATE,FORM_CONTENT,READCOUNT,ORIGINALFILENAME,RENAMEFILENAME,FORM_AUTHOR_NAME) values ('17','문서 제출시 반드시 서식 자료실의 서식을 이용해주세요.','33',to_date('23/10/25','RR/MM/DD'),'첨부파일 다운받아 작성바랍니다.',12,'2차프로젝트일정.txt','20231025141230.txt','영자야');
REM INSERTING into C##LMS.HOMEWORK
SET DEFINE OFF;
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('31',to_date('23/10/27','RR/MM/DD'),'객체실습 과제 완료했습니다!','객체실습3.txt','반려','문제에 대한 이해가 부족합니다. 다시 풀어보세요!','98','72','20231027025518.txt','84');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('31',to_date('23/10/27','RR/MM/DD'),'어렵지는 않았습니다.','객체실습3.txt','과제완료','잘했습니다. 굳잡ㅇㅇㅇ','93','72','20231027025955.txt','84');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('33',to_date('23/10/27','RR/MM/DD'),'sdfaasdf','3차프로젝트_팀구성.txt','제출확인중',null,'92','72','20231027145629.txt','84');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('31',to_date('23/10/27','RR/MM/DD'),'efw','booManager.zip','반려','ㄴㅇㄻ','92','72','20231027132206.zip','84');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('27',to_date('23/10/27','RR/MM/DD'),'"gggdsr"grsd',null,'제출확인중',null,'92','72',null,'84');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'1234','비밀번호.txt','과제완료','	잘하자				
					','40','38','20231024181114.txt','35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'12345678','KakaoTalk_20230915_141207384.png','과제완료','잘했고 앞으로도 이렇게하자','60','38','20231024181152.png','35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'55555','유사사이트.jpg','제출확인중',null,'62','38','20231024181225.jpg','35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'159753','sample.txt','반려','	ㅇㅇ			
					','63','38','20231024181248.txt','35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'0000','sample.txt','반려','다시해보세요','48','38','20231024181535.txt','35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'DSF',null,'제출확인중',null,'77','38',null,'35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('10',to_date('23/10/24','RR/MM/DD'),'dag',null,'제출확인중',null,'48','38',null,'35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'DSAFGE',null,'제출확인중',null,'66','38',null,'35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'HRHRHR',null,'과제완료','잘했어','67','38',null,'35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'SADGGEG',null,'제출확인중',null,'69','38',null,'35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'FDSEG',null,'제출확인중',null,'70','38',null,'35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'AGEE',null,'제출확인중',null,'72','38',null,'35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'ASGE',null,'제출확인중',null,'74','38',null,'35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('20',to_date('23/10/24','RR/MM/DD'),'HWSFC',null,'제출확인중',null,'76','38',null,'35');
Insert into C##LMS.HOMEWORK (HW_CODE,S_HW_DATE,S_HW_CONT,S_HW_FILE,HW_RST,HW_COME,STUDENT_CODE,PROF_CODE,S_HW_RFILE,CLASS_CODE) values ('21',to_date('23/10/26','RR/MM/DD'),'"과제 다했습니다"',null,'제출확인중',null,'40','38',null,'35');
REM INSERTING into C##LMS.NOTICE
SET DEFINE OFF;
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('2','엄청 중요한 공지사항입니다.','영자야',to_date('23/10/24','RR/MM/DD'),'NOTICE_NO
NOTICE_TITLE
NOTICE_AUTHOR
NOTICE_DATE
NOTICE_CONTENT
NOTICE_COUNT',0);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('3','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',0);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('4','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',1);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('5','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',0);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('6','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',3);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('7','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',3);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('8','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',1);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('9','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',3);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('10','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',1);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('11','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',3);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('12','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',3);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('13','엄청 중요한 공지사항입니다.1','영자야',to_date('23/10/24','RR/MM/DD'),'엄청 중요한 공지사항입니다.',16);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('14','공지사항 실험입니다.','영자야',to_date('23/10/24','RR/MM/DD'),'공지 찡찡~~',21);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('15','(수정) 공지사항입니다.','영자야',to_date('23/10/24','RR/MM/DD'),'안녕하세요, 여러분!

우리 학원의 신규 프로젝트가 성공적으로 시작되었습니다. 

이에 따라 몇 가지 중요한 사항을 알려드립니다.

일정 변경: 프로젝트 일정이 변경되었습니다. 
변경된 일정을 꼭 확인하시기 바랍니다.

회의: 다음 주 월요일 오전 10시에 모든 팀 회의가 예정되어 있습니다.

과제: 새로운 과제가 배정되었습니다. 미리 과제 내용을 확인해 주세요.

모든 팀원들은 이 사항을 주의 깊게 숙지하고 프로젝트에 최선을 다해 참여해 주시기 바랍니다. 

프로젝트가 성공적으로 완료될 수 있도록 함께 노력합시다!

감사합니다!',53);
Insert into C##LMS.NOTICE (NOTICE_NO,NOTICE_TITLE,NOTICE_AUTHOR,NOTICE_DATE,NOTICE_CONTENT,NOTICE_COUNT) values ('16','(수정) 안녕하세요','영자야',to_date('23/10/27','RR/MM/DD'),'네ㄹ',3);
REM INSERTING into C##LMS.QBOARD
SET DEFINE OFF;
REM INSERTING into C##LMS.QBOARD_ANS
SET DEFINE OFF;
REM INSERTING into C##LMS.QNA
SET DEFINE OFF;
REM INSERTING into C##LMS.QNARESULT
SET DEFINE OFF;
REM INSERTING into C##LMS.QUIZ
SET DEFINE OFF;
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (245,'38','퀴즈바',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (248,'38','중요한건 밑줄긋기',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (323,'72','setInterval 함수 사용하는 예제 코드 작성하기',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (361,'72','연습문제1.',to_date('23/10/27','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (201,'38','231023/1456
퀴즈입니다.
',to_date('23/10/23','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (244,'38','123ㄻㄴㅇ',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (223,'48','새로운 폰트 찾아내기',to_date('23/10/24','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (224,'38','새로운 폰트 찾아보기',to_date('23/10/24','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (161,'48','퀴즈 테스트입니다.',to_date('23/10/20','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (162,'38','[서울 1기] 챗GPT 4 인공지능 실용 전문가 1기 과정

1회차 퀴즈',to_date('23/10/20','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (250,'38','제출자 리스트 css
',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (251,'38','제출자 리스트 css
확인입니다.',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (221,'38','새로운 폰트 찾기',to_date('23/10/24','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (249,'38','퀴즈 출제하기',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (242,'38','12351',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (243,'38','346ㅛ뫃ㅇ',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (246,'38','퀴즈풀기',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (247,'38','퀴즈 답 제출자?',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (202,'38','퀴즈입니다.',to_date('23/10/23','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (241,'38','123',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (262,'38','Final Quiz_test2',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (263,'38','Final Quiz_test3',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (281,'72','JQUERY AJAX',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (301,'72','Jsp JS Css Ajax',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (321,'72','setInterval 함수 사용하는 예제 코드 작성하기',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (322,'72','setInterval 함수 사용하는 예제 코드 작성하기',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (324,'72','setInterval 함수 사용하는 예제 코드 작성해보기',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (341,'38','fsdfsdfsdfsd',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (362,'72','연습 문제입니다.',to_date('23/10/27','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (181,'38','아침엔 네발
점심엔 두발
저녁엔 세발

말 곱게하세요.',to_date('23/10/21','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (261,'38','Final Quiz_test',to_date('23/10/26','RR/MM/DD'));
Insert into C##LMS.QUIZ (QUIZ_SEQ,PROF_CODE,QUIZ_CONTENT,QUIZ_DATE) values (381,'72','연습 문제입니다.1',to_date('23/10/27','RR/MM/DD'));
REM INSERTING into C##LMS.QUIZ_ANSWER
SET DEFINE OFF;
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (181,'63','아침점심저녁잘챙겨먹기');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (201,'40','문제가 없습니다.
');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (201,'63','답변입니다.
');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (245,'63','답장');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (323,'99','SETINTERVAL(FUNCTION() {
//기능
}, 1000)  // >> MS');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (324,'88','123');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (324,'90','답');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (361,'93','연습문제1');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (361,'97','답');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (362,'92','네');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (362,'93','1234');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (362,'94','ASD');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (162,'48','[서울 1기] 챗GPT 4 인공지능 실용 전문가 1기 과정

1회차 퀴즈 답장');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (250,'40','확인
');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (201,'48','123
');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (249,'40','답안 제출하기');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (250,'63','네 확인');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (251,'63','네 알겟습니다.
');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (251,'40','dz');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (224,'48','칠판 참 구리게생겼어요
');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (247,'63','저요');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (251,'48','네');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (202,'63','답변입니다.');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (202,'40','답입니다
');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (261,'63','ss');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (262,'63','123');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (262,'48','124');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (263,'48','123');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (263,'40','1234');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (263,'63','1234');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (281,'100','124');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (181,'48','모르겠습니다.');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (261,'48','구라 ㄴ');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (281,'97','안녕하세요');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (281,'81','안녕하세요');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (281,'91','안녕하세요');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (281,'93','안녕하세요');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (281,'98','안녕하세요');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (281,'94','안녕하세요');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (281,'103','안녕하세요');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (281,'90','안녕하세요');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (324,'99','123');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (324,'92','1');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (324,'84','1');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (324,'97','32141');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (324,'98','1');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (324,'93','123145');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (341,'40','dfd');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (362,'90','연습문제 답입니다.');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (362,'97','ANSWER
');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (362,'98','ASD');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (381,'90','연습 답입니다.');
Insert into C##LMS.QUIZ_ANSWER (QUIZ_SEQ,STUDENT_CODE,QUIZ_ANSWER) values (381,'92','123
');
REM INSERTING into C##LMS.STUDENT
SET DEFINE OFF;
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('63','김현쑥','9401524-2012424','kim@naver.com','S63','$2a$10$cAgux6pD4w8nuiZnHBuV/e8Zcq51c.0UZXqzuoQ07Bs5HVq745hFK',to_date('23/10/27','RR/MM/DD'),'고졸','서울고','Y','35','010-1625-1629');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('62','허허맨','6012344-1025121','hohoman@naver.com','S62','$2a$10$T.ujSmo6TcC.7tFNCDLOeegKOi4F9Bba2tWPzgC0d7LVVmVVn0xuS',to_date('23/10/20','RR/MM/DD'),'초졸','국민초등학교','Y','35','010-2502-1245');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('48','김바나나','513456-1224527','gd@fm.com','S48','$2a$10$wGklSdclaaLqXhx/QPPeHOL0Ubkn1dQyEZbd/TcE88SSLinbJZU.S',to_date('23/10/25','RR/MM/DD'),'대졸','지잡대','Y','35','010-4545-9999');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('60','기무현수','601234-1021524','kinmu@naver.com','S60','$2a$10$cCO70fLDEbkI8xIGVnKikeZIcmWoROmhz8.LdDwmEwmSXxNuHvoR6',to_date('23/10/20','RR/MM/DD'),'대졸','하버드대','Y','35','010-1235-1562');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('88','장민지','980523-2022331','jangmj@naver.ocm','S88','$2a$10$ALlxZ8zrRl7Xnw2UtSaTSuc.0cIaua.G4atPGBWjUYPBns.K.eB36',to_date('23/10/25','RR/MM/DD'),'대졸','연세대학교','Y','84','010-2534-1243');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('92','김현석','921025-1025243','kimhrock@naver.com','S92','$2a$10$5ito2ZfbPI48XcmcuFXsu.ZGxoB6FraiLmzJsA/1yzyd8um0v6tfS',to_date('23/10/25','RR/MM/DD'),'대졸','예일대','Y','84','010-2534-2754');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('95','한창현','980125-1052342','hanspearh@naver.com','S95','$2a$10$X1hbOjMuTj.1UzBUgWZPLeh4UmT7no5Da6Z1Ld/YIAPpes/1MwoRO',to_date('23/10/25','RR/MM/DD'),'대졸','서울대학교','Y','84','010-2532-1587');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('99','최웅렬','940225-1024312','cwr@naver.com','S99','$2a$10$Eqs5Zc98bu2P9p0/BB2rU.XBdwv.pR4eqrU9XnRg3nTQKq4HNq1QS',to_date('23/10/25','RR/MM/DD'),'고졸','레츠고등학교','Y','84','010-9925-2524');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('84','홍성철','890124-1025243','hongcastleiron@naver.com','S84','$2a$10$1OP4.CjM.jfR4FWE70wQ3uD5FyY7q3EIvJAW7XbcQnvQU.XtHGNZu',to_date('23/10/25','RR/MM/DD'),'초졸','햇살초등학교','Y','84','010-5324-5327');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('87','전성훤','961025-1023543','juncastleh@naver.com','S87','$2a$10$Pz4NhSVmFMHZtHC2AKVOOeA1TrdIEu.HzDw9iL6ZLeclV1agzYX7S',to_date('23/10/25','RR/MM/DD'),'대졸','서울대학교','Y','84','010-5321-2142');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('101','최유미','910521-2035232','choiym@naver.com','S101','$2a$10$1bnGxglhhXJhVCIdd/Dn1uq5DBVBSjq87oaLG7NBNVwmw6UFJh9WC',to_date('23/10/25','RR/MM/DD'),'대졸','고려대학교','Y','84','010-2593-1632');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('102','김화범','910212-1025322','kimfiretiger@naver.com','S102','$2a$10$LAFWwGVnQYOU/Ye7g/ZWR.ZYaVePfO/oslCJCV9m.si4yyxyQeoOS',to_date('23/10/25','RR/MM/DD'),'대졸','연세대학교','Y','84','010-2526-5332');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('105','이승용','981221-1025243','leewindragon@naver.com','S105','$2a$10$MPpKGnScJsTngGTOs1DV4O0Ir2OirV3XdJ3O3Xrz6CxnZCtnuavHe',to_date('23/10/26','RR/MM/DD'),'대졸','서강대학교','N','84','010-4325-2145');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('40','김옥지','501021-2012245','okjji@hanmail.com','S40','$2a$10$YvIzBOrdu./swGDuh8DGMeQWk6Ko5/AUh6RsBMpuCOBDRDRJIdso6',to_date('23/10/20','RR/MM/DD'),'초졸','대한국민학교','Y','35','010-2345-3456');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('81','나정운','001231-1022412','jungun@naver.com','S81','$2a$10$oRvCPT8/Kp/8SODpqnnHueMMgE4DipkQKuMWVulE.gJOBxfhdve0m',to_date('23/10/25','RR/MM/DD'),'대졸','서울대학교','Y','84','010-5452-1242');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('82','최승준','9401112-1042412','seongjun@naver.com','S82','$2a$10$pqPYy5sQfXmoJ0nZkRTOWeeFj/YPtJIZMNLPYiXs23rY.G6LeA4Ga',to_date('23/10/25','RR/MM/DD'),'대졸','하버드대학교','Y','84','010-9251-4243');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('83','최성영','940124-1025212','choicastlezero@gmail.com','S83','$2a$10$3qS8VsfEx7z6N1AfSKNpd.7ZCHc7Bwn7opLntcltLR1/yPQVPOLde',to_date('23/10/25','RR/MM/DD'),'대졸','국민대학교','Y','84','010-4524-3212');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('85','최준우','980212-1025324','choijuncow@gmail.com','S85','$2a$10$5xSGTzd0DDogeQ9.OXrH..1Ud5DcHZJr2PAYPjG7MNY642hazTgly',to_date('23/10/25','RR/MM/DD'),'대졸','고려대학교','Y','84','010-5528-8543');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('86','이재민','920520-1024324','leejm@naver.com','S86','$2a$10$Ush8UUIAm8jHOH2VUMtg8eThsmtOzW8iNMGc837YR0qlY.xB93T6.',to_date('23/10/25','RR/MM/DD'),'대졸','연세대학교','Y','84','010-5690-9823');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('89','서진우','930214-2025315','westjincow@naver.com','S89','$2a$10$EjBRuYlN4hiSlWG5EZqsTekh9BODTKXtQ4l.ewjVVxmoGHg10sno2',to_date('23/10/25','RR/MM/DD'),'대졸','카이스트','Y','84','010-2532-4212');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('90','김정선','890124-1025321','kimjungkind@naver.com','S90','$2a$10$fAajJ6FlrEbbiiJcOgvM3OFgyF.YbOasial9UZza.dblhYM1WddSy',to_date('23/10/26','RR/MM/DD'),'대졸','카이스트','Y','84','010-2432-9853');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('91','조대곤','920125-1023253','jobiggon@naver.com','S91','$2a$10$ss6Xc/NozXm/mUeAHFImmeVcGQ7eFo22HlCbvGBR12fgKkJDxmoe.',to_date('23/10/25','RR/MM/DD'),'대졸','서울대학교','Y','84','010-2424-2351');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('93','금현수','980125-1024353','goldhwater@naver.com','S93','$2a$10$9alw3N2yTquVwf/HMFjnTuHzyYV82SKORL8N8w4zxpqHxI3gztGNW',to_date('23/10/25','RR/MM/DD'),'대졸','옥스퍼드','Y','84','010-1263-9883');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('94','김태현','940124-152342','kimtaeh@naver.com','S94','$2a$10$i/CDWheTyaEocoBx1/3UIu8G9.8ybee72A6KP.sSJ9.SgcqS0.2c2',to_date('23/10/25','RR/MM/DD'),'대졸','고려대학교','Y','84','010-5352-1246');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('96','안태환','940124-1025243','antaeh@naver.com','S96','$2a$10$urXHKAyQztJVmn1gx61C2OV1mP56hOh3xaeCs2GUVGai6VmK9sbie',to_date('23/10/25','RR/MM/DD'),'대졸','하버드대','Y','84','010-2538-9563');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('97','김지혁','980325-1025342','kimjh@naver.com','S97','$2a$10$bR7Ud2R91nNJ1qpXONLe7.K/TXT29ayAZ1a6iVna/cAQAJk2TiPUS',to_date('23/10/25','RR/MM/DD'),'대졸','연세대학교','Y','84','010-8952-1296');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('98','허두원','940625-1025323','heodowon@naver.com','S98','$2a$10$fMFmRwUvGSoA4tjmaN4Yt.hxMJSJllobiw0pkg41nFJCOS4p6.kfm',to_date('23/10/25','RR/MM/DD'),'대졸','고려대학교','Y','84','010-2536-2674');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('100','오상민','980124-1029532','ohsangm@naver.com','S100','$2a$10$hH7Hr30UIBjG/aV5sxaX3.7WYR/ig8Wx.UR2xrvRRkB85rZ.HPGei',to_date('23/10/25','RR/MM/DD'),'대졸','하버드대','Y','84','010-2532-4215');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('103','김건','960124-1052142','kimgun@naver.com','S103','$2a$10$cbPUdwVAIDtxcDZtdn7iy.y9XMX4MEWIqzHm/PcIBVQd89vHH26jK',to_date('23/10/25','RR/MM/DD'),'대졸','서울대학교','Y','84','010-2432-1243');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('104','박성혁','960212-1025242','parkcastleh@naver.com','S104','$2a$10$7lrlVyXWpva7ob6Hi.KQieXQBMzZ.vxUTFq.PQmP7TXIrSknJCc76',to_date('23/10/25','RR/MM/DD'),'대졸','서울대학교','Y','84','010-2525-2102');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('66','조로','881030-1000000','108bunnoi@naver.com','S66','$2a$10$2ua6n8USfbHafKFgJgKIteT23HPefVdEKeLfe4GRDRRxKiIzL5VpS',to_date('23/10/24','RR/MM/DD'),'고졸','해동검도고등학교','Y','35','010-3512-7815');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('64','루피','980501-1023541','PirateKing@naver.com','S64','$2a$10$6VJ6xhZXYwVkGZ4qvnZYJus4Dml//SYFJW9gOuN9OH2/2IiI8uDW6',to_date('23/10/24','RR/MM/DD'),'초졸','이스트블루초등학교','Y','35','010-2580-2580');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('67','나미','910519-2054236','orangecat@naver.com','S67','$2a$10$vWSAlAHpbLv1g033yv5kN.0YYLIXNX.9J2ssZGRJb7GYBOvIrgxhu',to_date('23/10/24','RR/MM/DD'),'고졸','해양여고','Y','35','010-8888-5552');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('69','상디','021023-3524167','AllBlue@naver.com','S69','$2a$10$XxgGRhqOztou2IohX07/keAF4SUm7ZQIvkf9RQaFba5wbialXOcai',to_date('23/10/24','RR/MM/DD'),'전문대졸','레드풋요리전문대','Y','35','010-5725-1532');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('70','우솝','840530-1054842','stupid@naver.com','S70','$2a$10$jFAO7JX3pzCYMW5RRSPdjOq/o8JgHtz39pcOMsE68eMhblRoTXhr2',to_date('23/10/24','RR/MM/DD'),'중졸','긴코중','Y','35','010-5482-1811');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('72','쵸파','071202-0205512','manman@naver.com','S72','$2a$10$JWda2VRhEMwf1PeEnmhJK.KDsdYr.Uiyt/ZFqOT.8hN1KHyLcT0tm',to_date('23/10/24','RR/MM/DD'),'초졸','강원순록동물원','Y','35','070-1235-8456');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('74','로빈','580212-2541253','nojam@naver.com','S74','$2a$10$n.L0T6itu0nwthQJF6kF.eVoiD/dQofyZzEGWLExeOSeZm8BghMmG',to_date('23/10/24','RR/MM/DD'),'대졸','포네그래프대','Y','35','010-9984-9984');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('76','프랑키','780915-1053184','cola@naver.com','S76','$2a$10$TVVnw8MuHzToQL0NSZXYNu3xWTyHM79ThYxCkfPALs6FZcSzJPlrS',to_date('23/10/24','RR/MM/DD'),'고졸','cp공고','Y','35','010-7777-7777');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('77','홍진호','020202-1222222','kong@naver.com','S77','$2a$10$xVPx.rfCo4VuxINHSgM2MOgpLYuGtSu6lSLXivDdFmL2GbDtjtwk6',to_date('23/10/24','RR/MM/DD'),'저그','폭풍','Y','35','010-2222-2222');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('80','김꿀밤','880103-2087162','ddddddd@naver.com','S80','$2a$10$/o7ABB2mov30QbngvNVM7uwsF5CvmQON3CK8maNqiyR6cbUJd/qnq',to_date('23/10/25','RR/MM/DD'),'대졸','지잡대','Y','47','010-1111-9999');
Insert into C##LMS.STUDENT (STUDENT_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,MODIFIED_DATE,EDUATION,SCHOOL,INACTIVE_OR_NOT,CLASS_CODE,PHONE) values ('106','김꿀밤','940222-1234567','qlqlcmrl@naver.com','S106','$2a$10$WuTfhfebsy80aMYu/NPZhOYXrs6uNjT0MTZMUZaA0thvHPPg1O/Yu',to_date('23/10/26','RR/MM/DD'),'대졸','지잡대','Y','47','010-1234-1234');
REM INSERTING into C##LMS.SUBJECT
SET DEFINE OFF;
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010604_19v2','IoT 디바이스 기획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010605_19v2','IoT 네트워크 기획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010606_19v2','IoT 플랫폼 기획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010607_19v2','IoT 응용소프트웨어 기획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010608_19v2','IoT 데이터 응용 계획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010609_19v2','IoT 보안 적용 계획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010610_19v2','IoT 마케팅 계획 수립',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010611_19v2','IoT 서비스 관리계획 수립',24,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010701_19v2','빅데이터 서비스 기획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','7','빅데이터기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010702_19v2','빅데이터 환경분석',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','7','빅데이터기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010703_19v2','빅데이터 분석 기획',80,'20','정보통신','1','정보기술','1','정보기술전략·계획','7','빅데이터기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010704_19v2','빅데이터 기술 플랫폼 기획',80,'20','정보통신','1','정보기술','1','정보기술전략·계획','7','빅데이터기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010705_19v2','빅데이터 성과 관리 기획',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','7','빅데이터기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010706_19v2','빅데이터 활용 기획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','7','빅데이터기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010707_19v2','빅데이터 운영 기획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','7','빅데이터기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010801_19v2','핀테크 환경 분석',60,'20','정보통신','1','정보기술','1','정보기술전략·계획','8','핀테크기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010802_19v2','핀테크 데이터 분석',90,'20','정보통신','1','정보기술','1','정보기술전략·계획','8','핀테크기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010803_19v2','핀테크 기술 분석',60,'20','정보통신','1','정보기술','1','정보기술전략·계획','8','핀테크기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010804_19v2','핀테크 서비스 기획',90,'20','정보통신','1','정보기술','1','정보기술전략·계획','8','핀테크기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010805_19v2','핀테크 플랫폼 기획',90,'20','정보통신','1','정보기술','1','정보기술전략·계획','8','핀테크기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010806_19v2','핀테크 보안 관리 계획',60,'20','정보통신','1','정보기술','1','정보기술전략·계획','8','핀테크기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010807_19v2','핀테크 시스템 구축 계획',90,'20','정보통신','1','정보기술','1','정보기술전략·계획','8','핀테크기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010808_19v2','핀테크 마케팅 계획',60,'20','정보통신','1','정보기술','1','정보기술전략·계획','8','핀테크기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010809_19v2','핀테크 기술 전략 수립',120,'20','정보통신','1','정보기술','1','정보기술전략·계획','8','핀테크기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020101_19v4','SW아키텍처 수행 관리',80,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020102_19v5','SW아키텍처 비전 수립',40,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020104_19v5','SW아키텍처 요소기술선정',80,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020106_19v4','SW아키텍처 이행',160,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020107_19v4','SW아키텍처 테스트',40,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020108_19v4','SW 개발 지원',40,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020109_19v4','SW아키텍처 변경 관리',40,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020110_19v5','SW아키텍처 요구사항 명세화',40,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020111_19v5','후보 SW아키텍처 명세화',40,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020112_19v5','SW아키텍처 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020113_19v5','SW아키텍처 문서화',40,'20','정보통신','1','정보기술','2','정보기술개발','1','SW아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020201_19v4','요구사항 확인',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020205_19v5','데이터 입출력 구현',48,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020206_19v5','통합 구현',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020208_19v4','정보시스템 이행',50,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020209_19v5','제품소프트웨어 패키징',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020211_19v5','서버프로그램 구현',60,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020212_19v5','인터페이스 구현',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020214_19v5','애플리케이션 배포',30,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020217_19v5','애플리케이션 리팩토링',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020218_19v5','인터페이스 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020219_19v5','애플리케이션 요구사항 분석',50,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020220_19v2','기능 모델링',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020221_19v5','애플리케이션 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020222_19v5','정적모델 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020223_19v5','동적모델 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020224_19v5','화면 설계',48,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020225_19v5','화면 구현',48,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020226_19v5','애플리케이션 테스트 관리',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020227_19v5','애플리케이션 테스트 수행',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020228_19v5','소프트웨어공학 활용',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021110_19v2','데이터 아키텍처 수행관리',24,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021201_19v1','IoT시스템 연동 계획',50,'20','정보통신','1','정보기술','2','정보기술개발','12','IoT시스템연동');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021202_19v1','IoT시스템 연동 설계',50,'20','정보통신','1','정보기술','2','정보기술개발','12','IoT시스템연동');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021203_19v1','IoT시스템 연동 모듈 개발',50,'20','정보통신','1','정보기술','2','정보기술개발','12','IoT시스템연동');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021204_19v1','외부 서비스 연동',46,'20','정보통신','1','정보기술','2','정보기술개발','12','IoT시스템연동');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021205_19v1','서버 연동',46,'20','정보통신','1','정보기술','2','정보기술개발','12','IoT시스템연동');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021206_19v1','게이트웨이 연동',46,'20','정보통신','1','정보기술','2','정보기술개발','12','IoT시스템연동');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021207_19v1','스마트 디바이스 연동',46,'20','정보통신','1','정보기술','2','정보기술개발','12','IoT시스템연동');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021208_19v1','엣지 디바이스 연동',46,'20','정보통신','1','정보기술','2','정보기술개발','12','IoT시스템연동');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021209_19v1','IoT시스템 연동 시험',30,'20','정보통신','1','정보기술','2','정보기술개발','12','IoT시스템연동');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021301_19v1','인프라스트럭쳐 현황 분석',30,'20','정보통신','1','정보기술','2','정보기술개발','13','인프라스트럭쳐아키텍처구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021302_19v1','인프라스트럭쳐 아키텍처 요구사항 분석',30,'20','정보통신','1','정보기술','2','정보기술개발','13','인프라스트럭쳐아키텍처구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021303_19v1','인프라스트럭쳐 목표 아키텍처 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','13','인프라스트럭쳐아키텍처구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021304_19v1','서버 구성',40,'20','정보통신','1','정보기술','2','정보기술개발','13','인프라스트럭쳐아키텍처구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021305_19v1','스토리지 구성',40,'20','정보통신','1','정보기술','2','정보기술개발','13','인프라스트럭쳐아키텍처구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021306_19v1','네트워크 구성',40,'20','정보통신','1','정보기술','2','정보기술개발','13','인프라스트럭쳐아키텍처구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021307_19v1','클라우드 인프라스트럭쳐 서비스 구성',40,'20','정보통신','1','정보기술','2','정보기술개발','13','인프라스트럭쳐아키텍처구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021308_19v1','인프라스트럭쳐 아키텍처 구성 점검',30,'20','정보통신','1','정보기술','2','정보기술개발','13','인프라스트럭쳐아키텍처구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021309_19v1','인프라스트럭쳐 관리체계 수립',30,'20','정보통신','1','정보기술','2','정보기술개발','13','인프라스트럭쳐아키텍처구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021401_21v1','클라우드 솔루션 요구사항 분석',40,'20','정보통신','1','정보기술','2','정보기술개발','14','클라우드솔루션아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021402_21v1','클라우드 솔루션 구조 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','14','클라우드솔루션아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021403_21v1','클라우드 솔루션 보안 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','14','클라우드솔루션아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021404_21v1','클라우드 솔루션 서비스 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','14','클라우드솔루션아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021405_21v1','클라우드 서비스 비용 최적화 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','14','클라우드솔루션아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021406_21v1','클라우드 솔루션 전환 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','14','클라우드솔루션아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021407_21v1','클라우드 솔루션 배포 방안 수립',40,'20','정보통신','1','정보기술','2','정보기술개발','14','클라우드솔루션아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021408_21v1','클라우드 솔루션 운영 방안 수립',40,'20','정보통신','1','정보기술','2','정보기술개발','14','클라우드솔루션아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021501_21v1','클라우드 인프라스트럭쳐 서비스 정책 수립',20,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021502_21v1','클라우드 인프라스트럭쳐 서비스 아키텍처 수립',40,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021503_21v1','클라우드 서버 서비스 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021504_21v1','클라우드 스토리지 서비스 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021505_21v1','클라우드 네트워크 서비스 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021506_21v1','클라우드 서버 서비스 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021507_21v1','클라우드 스토리지 서비스 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021508_21v1','클라우드 네트워크 서비스 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021509_21v1','클라우드 인프라스트럭쳐 서비스 테스트',40,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021510_21v1','클라우드 인프라스트럭쳐 서비스 배포',30,'20','정보통신','1','정보기술','2','정보기술개발','15','클라우드인프라스트럭쳐엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021601_22v1','PaaS 정책 수립',30,'20','정보통신','1','정보기술','2','정보기술개발','16','PaaS엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021602_22v1','PaaS 아키텍처 수립',40,'20','정보통신','1','정보기술','2','정보기술개발','16','PaaS엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021603_22v1','PaaS 백엔드 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','16','PaaS엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021604_22v1','PaaS 프론트엔드 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','16','PaaS엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021605_22v1','PaaS 백엔드 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','16','PaaS엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021606_22v1','PaaS 프론트엔드 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','16','PaaS엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021607_22v1','PaaS 테스트',30,'20','정보통신','1','정보기술','2','정보기술개발','16','PaaS엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021608_22v1','PaaS 배포',30,'20','정보통신','1','정보기술','2','정보기술개발','16','PaaS엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021609_22v1','PaaS 운영',40,'20','정보통신','1','정보기술','2','정보기술개발','16','PaaS엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030101_19v3','IT시스템 운영 기획',40,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030102_19v3','IT시스템 자원획득관리',30,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030103_19v3','IT시스템 서비스 수준관리',30,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030105_19v4','응용SW 운영관리',60,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020229_19v5','소프트웨어개발 방법론 활용',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020230_19v4','프로그래밍 언어 응용',50,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020231_19v4','프로그래밍 언어 활용',50,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020232_19v4','응용SW 기초 기술 활용',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020233_19v4','개발자 환경 구축',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020234_19v1','개발 환경 운영 지원',40,'20','정보통신','1','정보기술','2','정보기술개발','2','응용SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020301_19v3','하드웨어 분석',30,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020309_19v5','임베디드 시스템 테스팅',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020310_19v3','기술문서 개발',30,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020311_19v4','펌웨어 분석',24,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020312_19v5','펌웨어 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020313_19v5','펌웨어 구현 환경 구축',24,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020314_19v6','펌웨어 구현',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020315_19v6','운영체제 커널 분석',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020316_19v5','운영체제 이식',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020317_19v4','디바이스 드라이버 분석',24,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020318_19v5','디바이스 드라이버 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020319_19v5','디바이스 드라이버 구현 환경 구축',24,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020320_19v6','디바이스 드라이버 구현',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020321_19v5','임베디드 애플리케이션 분석',24,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020322_19v6','임베디드 애플리케이션 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020323_19v5','임베디드 애플리케이션 구현 환경 구축',24,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020324_19v6','임베디드 애플리케이션 구현',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020325_19v2','오픈 플랫폼 활용',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020326_19v2','임베디드 SW 요구사항 분석',40,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020327_19v1','임베디드 SW 운영관리',30,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020328_19v1','임베디드 SW 아키텍처 설계',45,'20','정보통신','1','정보기술','2','정보기술개발','3','임베디드SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020401_19v4','데이터베이스 요구사항 분석',20,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020402_19v4','개념데이터 모델링',30,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020403_19v4','논리 데이터베이스 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020404_19v4','물리 데이터베이스 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020405_19v4','데이터베이스 구현',30,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020408_19v4','데이터베이스 성능확보',40,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020411_19v4','데이터 전환 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020412_19v4','데이터 전환',30,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020413_19v4','SQL활용',30,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020414_19v4','SQL응용',30,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020415_19v1','SQL작성',30,'20','정보통신','1','정보기술','2','정보기술개발','4','DB엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020501_19v4','네트워크 환경 분석',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020503_19v4','네트워크 토폴로지 설계',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020504_19v4','네트워크 자원관리 설계',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020505_19v4','네트워크 QoS 제어 설계',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020506_19v4','네트워크 소프트웨어 아키텍처 수립',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020507_19v4','네트워크 소프트웨어 개발 방법 수립',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020508_19v3','네트워크 프로그래밍 구현',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020510_19v4','네트워크 프로젝트 관리',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020511_19v4','네트워크 프로토콜 분석',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020512_19v4','네트워크 프로토콜 설계',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020513_19v4','네트워크 자원 분석',48,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020514_19v4','네트워크 QoS 수준 정의',30,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020515_19v3','네트워크 프로그램 최적화',40,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020516_19v4','네트워크 품질 평가 계획',40,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020517_19v4','네트워크 품질 평가 실행',40,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020518_19v4','프로토콜 패킷 분석',30,'20','정보통신','1','정보기술','2','정보기술개발','5','NW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020601_19v5','보안 구축 계획 수립',48,'20','정보통신','1','정보기술','2','정보기술개발','6','보안엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020603_19v5','보안 구축 요구사항 분석',40,'20','정보통신','1','정보기술','2','정보기술개발','6','보안엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020604_19v5','관리적 보안 구축',40,'20','정보통신','1','정보기술','2','정보기술개발','6','보안엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020605_19v4','물리적 보안 구축',20,'20','정보통신','1','정보기술','2','정보기술개발','6','보안엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020610_19v5','보안인증 관리',40,'20','정보통신','1','정보기술','2','정보기술개발','6','보안엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020611_19v5','SW개발 보안 구축',40,'20','정보통신','1','정보기술','2','정보기술개발','6','보안엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020612_19v5','DB보안 구축',40,'20','정보통신','1','정보기술','2','정보기술개발','6','보안엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020613_19v5','시스템 보안 구축',40,'20','정보통신','1','정보기술','2','정보기술개발','6','보안엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020614_19v5','NW보안 구축',40,'20','정보통신','1','정보기술','2','정보기술개발','6','보안엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020701_19v3','UI/UX 환경 분석',40,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020702_19v3','UI/UX 계획 수립',40,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020703_19v3','사용자 리서치',60,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020704_19v3','UI/UX 요구 분석',40,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020705_19v2','UI/UX 콘셉트 기획',40,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020706_19v2','UI 아키텍처 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020707_19v3','UI 디자인',240,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020708_19v3','UI 구현',240,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020709_19v3','UI 테스트',40,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020710_19v2','UI/UX 가이드 제작',40,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020711_19v3','GUI 상세디자인',240,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020712_19v3','UI 제작',240,'20','정보통신','1','정보기술','2','정보기술개발','7','UI/UX엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020801_19v3','시스템SW 요구사항 분석',40,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020802_19v3','시스템SW 아키텍처 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020803_19v3','시스템SW 상세 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020805_19v3','시스템SW 통합 구현',48,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020806_19v3','시스템SW 테스트',48,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020807_19v3','시스템SW 기술문서 작성',40,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020808_19v2','시스템SW 배포',60,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020809_19v3','시스템SW 단위 모듈 구현',48,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020810_19v3','시스템SW 인터페이스 구현',48,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020811_19v2','시스템SW 운영관리',30,'20','정보통신','1','정보기술','2','정보기술개발','8','시스템SW엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020901_19v2','빅데이터 플랫폼 요구사항 분석',40,'20','정보통신','1','정보기술','2','정보기술개발','9','빅데이터플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020902_19v2','빅데이터 플랫폼 아키텍처 설계',50,'20','정보통신','1','정보기술','2','정보기술개발','9','빅데이터플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020903_19v2','빅데이터 수집시스템 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','9','빅데이터플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020904_19v2','빅데이터 저장시스템 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','9','빅데이터플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020905_19v2','빅데이터 처리시스템 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','9','빅데이터플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020906_19v2','빅데이터 분석시스템 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','9','빅데이터플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020907_19v2','빅데이터 품질관리시스템 개발',40,'20','정보통신','1','정보기술','2','정보기술개발','9','빅데이터플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001020908_19v2','빅데이터 플랫폼 테스트',30,'20','정보통신','1','정보기술','2','정보기술개발','9','빅데이터플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021001_19v2','핀테크 요구사항 분석',30,'20','정보통신','1','정보기술','2','정보기술개발','10','핀테크엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021002_19v2','핀테크 인프라 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','10','핀테크엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021003_19v2','핀테크 인터페이스 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','10','핀테크엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021004_19v2','핀테크 기능 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','10','핀테크엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021005_19v2','핀테크 보안·인증 설계',30,'20','정보통신','1','정보기술','2','정보기술개발','10','핀테크엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021006_19v2','핀테크 인터페이스 구현',40,'20','정보통신','1','정보기술','2','정보기술개발','10','핀테크엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021007_19v2','핀테크 기능 구현',40,'20','정보통신','1','정보기술','2','정보기술개발','10','핀테크엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021008_19v2','핀테크 보안·인증 구현',40,'20','정보통신','1','정보기술','2','정보기술개발','10','핀테크엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021009_19v2','핀테크 테스트',30,'20','정보통신','1','정보기술','2','정보기술개발','10','핀테크엔지니어링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021101_19v2','데이터 아키텍처 구축 계획 수립',16,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021102_19v2','데이터 거버넌스 수립',24,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021103_19v2','데이터 아키텍처 요구사항 분석',24,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021104_19v2','데이터 아키텍처 설계',40,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021105_19v2','데이터 표준 수립',24,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021106_19v2','데이터 모델 검증',40,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021107_19v2','데이터베이스 검증',40,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021108_19v2','데이터 품질관리 계획 수립',16,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001021109_19v2','데이터 품질 검증',40,'20','정보통신','1','정보기술','2','정보기술개발','11','데이터아키텍처');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010101_19v4','정보기술 전략 기획',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010102_19v4','정보기술 거버넌스 전략 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010103_19v4','정보기술 R&amp;D 전략 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010104_19v4','정보기술 프로세스관리 전략 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010105_19v4','정보기술 아키텍처 계획 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010106_19v4','정보기술 협업관리 전략 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010107_19v4','정보기술 투자계획 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010108_19v4','정보기술 성과관리',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010109_19v4','정보기술 전략 통합관리',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010110_19v4','정보기술 전략 실행관리',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','1','정보기술전략');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010201_19v4','정보기술 컨설팅 기획',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010202_19v4','정보기술 조직 경영전략 분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010203_19v4','정보기술 조직 경영환경 분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010204_19v4','정보기술 컨설팅 대상업무 분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010206_19v4','정보기술 컨설팅 목표 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010207_19v4','정보기술 컨설팅 대상업무 개선방안 도출',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010208_19v4','정보시스템 개선방안 도출',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010209_19v4','정보기술 컨설팅 수행 관리',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010210_19v4','정보기술 컨설팅 성과 측정',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010211_19v4','정보시스템인프라분석',24,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010212_19v4','정보시스템애플리케이션분석',24,'20','정보통신','1','정보기술','1','정보기술전략·계획','2','정보기술컨설팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010301_19v4','IT 비즈니스 환경분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010302_19v4','정보기술 환경분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010303_19v4','정보기술 전략 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010304_19v4','정보기술 예산 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010305_19v4','정보기술 모형 설계',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010306_19v4','정보기술 아키텍처 설계',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010307_19v4','정보기술 운영방안 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010308_19v4','프로젝트 자원 투입계획 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010309_19v4','프로젝트 실행계획 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010310_19v4','정보기술 조직 성과 분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','3','정보기술기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010401_19v4','SW제품기업 내부 환경 분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010402_19v4','SW제품기업 외부 환경 분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010403_19v4','SW제품 기술 검토',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010404_19v4','SW제품 시장성 분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010405_19v4','SW제품 명세 작성',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010406_19v4','SW제품 중장기 로드맵 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010407_19v4','SW제품 개발 계획 수립',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010408_19v4','SW제품 지원 계획 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010409_19v4','SW제품 판매 계획 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010410_19v4','SW제품 마케팅 계획 수립',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','4','SW제품기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010509_21v4','빅데이터 분석 결과 시각화',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','5','빅데이터분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010510_21v4','분석 데이터 전처리',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','5','빅데이터분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010511_21v4','탐색적 데이터 분석',20,'20','정보통신','1','정보기술','1','정보기술전략·계획','5','빅데이터분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010512_21v1','분석 데이터 피처(Feature) 엔지니어링',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','5','빅데이터분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010513_21v1','빅데이터 분석 모델링',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','5','빅데이터분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010514_21v1','빅데이터 분석 결과 평가',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','5','빅데이터분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010515_21v1','빅데이터 분석 플로우 구성',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','5','빅데이터분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010516_21v1','데이터 분석 기초 기술 활용',80,'20','정보통신','1','정보기술','1','정보기술전략·계획','5','빅데이터분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010601_19v2','IoT 환경분석',24,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010602_19v2','IoT 비즈니스 모델 개발',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001010603_19v2','IoT 서비스 모형 기획',40,'20','정보통신','1','정보기술','1','정보기술전략·계획','6','IoT융합서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010402_21v2','방송공동수신설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010403_21v2','영상정보처리기기(CCTV)설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010404_21v2','방범·방재·보안설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010405_21v2','방송·음향설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010406_21v2','홈네트워크설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010407_21v2','구내전화설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010408_21v2','EMP방호설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010409_21v2','주차관제설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010410_21v2','빌딩안내설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010411_21v2','정보통신전용 전원·접지설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010412_21v1','통합배선설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010413_21v1','지능형 영상감시설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010414_21v1','구내 관제센터설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010415_21v1','xEMS설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010416_21v1','구내통신설비 유지보수',30,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010501_17v1','실감형플랫폼 요구사항분석',45,'20','정보통신','2','통신기술','1','유선통신구축','5','실감형플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010502_17v1','실감형플랫폼 구축계획',45,'20','정보통신','2','통신기술','1','유선통신구축','5','실감형플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010503_17v1','실감형플랫폼 설계',45,'20','정보통신','2','통신기술','1','유선통신구축','5','실감형플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010504_17v1','실감형플랫폼 구축공사',34,'20','정보통신','2','통신기술','1','유선통신구축','5','실감형플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010505_17v1','실감형플랫폼 감리',45,'20','정보통신','2','통신기술','1','유선통신구축','5','실감형플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010506_17v1','실감형플랫폼 운용관리',34,'20','정보통신','2','통신기술','1','유선통신구축','5','실감형플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010507_17v1','실감형플랫폼 품질관리',34,'20','정보통신','2','통신기술','1','유선통신구축','5','실감형플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010508_17v1','실감형플랫폼 보안관리',45,'20','정보통신','2','통신기술','1','유선통신구축','5','실감형플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010509_17v1','실감형플랫폼 유지보수',34,'20','정보통신','2','통신기술','1','유선통신구축','5','실감형플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010601_18v1','철도전송설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010602_18v1','선로변통합인터페이스통신설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010603_18v1','열차무선설비공사',40,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010604_18v1','철도영상감시설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010605_18v1','철도정보통신망설비공사',40,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010606_18v1','열차행선안내설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010607_18v1','철도재난방송수신설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010608_18v1','역무자동화설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010609_18v1','철도관제전화설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010610_18v1','철도자동안내방송설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','6','철도정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010701_18v1','교통신호제어설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010702_18v1','도로전광판설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010703_18v1','교통관제설비공사',40,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010704_18v1','교통정보망설비공사',40,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010705_18v1','교통상황감시설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010706_18v1','차량번호인식설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010707_18v1','교통영상정보처리설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010708_18v1','과적차량단속설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010709_18v1','요금징수설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010710_18v1','버스정보시스템(BIS)설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010711_18v1','보행자안내설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','7','도로·교통정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010801_18v1','레이더시스템 설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010802_18v1','해상무선통신 설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010803_18v1','선박교통관제전송 설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010804_18v1','해상용등부표 설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010805_18v1','선박자동식별장치 설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010806_18v1','위성항법보정시스템 설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030107_19v4','NW 운영관리',40,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030108_19v3','DB 운영관리',60,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030109_19v3','보안 운영관리',40,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030111_19v4','IT시스템 통합운영관리',40,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030112_19v4','IT시스템 통합운영안정성관리',40,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030113_19v4','응용SW 변경관리',45,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030114_19v4','HW 단말장치 운영관리',30,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030115_19v4','IT시스템 서버 운영관리',30,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030116_19v4','NW 유지보수',30,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030117_19v4','서비스데스크 구축',30,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030118_19v4','서비스데스크 운영',30,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030119_19v4','IT시스템 변경관리',30,'20','정보통신','1','정보기술','3','정보기술운영','1','IT시스템관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030202_19v4','IT기술교육 체계수립',50,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030203_19v4','IT기술교육 요구조사',40,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030204_19v3','IT기술교육 환경조성',30,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030205_19v4','IT기술교육 교과개발',50,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030206_19v4','IT기술교육 자료개발',40,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030207_19v4','IT기술교육 운영계획수립',40,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030208_19v3','IT기술교육 단위과정운영',30,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030209_19v4','IT기술교육 교수자관리',40,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030210_19v3','IT기술교육 성과평가',60,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030211_19v4','IT기술교육 전략계획수립',30,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030212_19v4','IT기술교육 방향수립',30,'20','정보통신','1','정보기술','3','정보기술운영','2','IT기술교육');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030301_19v3','기술지원 서비스 기획',40,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030302_19v3','기술지원 대상 인수',40,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030303_19v3','기술지원 요청 관리',40,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030304_19v4','시스템 장애 대응',48,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030305_19v4','시스템 개선 대응',48,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030306_19v3','시스템 점검관리',48,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030307_19v4','기술지원 평가',40,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030308_19v3','기술지원 이슈관리',30,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030309_19v4','시스템 형상관리',40,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030311_19v4','기술지원 품질계획 수립',24,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030312_19v4','기술지원 품질운영',24,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030313_19v2','시스템 유지보수관리',48,'20','정보통신','1','정보기술','3','정보기술운영','3','IT기술지원');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030401_19v2','빅데이터 플랫폼 운영 정책 수립',30,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030402_19v2','빅데이터 서비스 운영 계획',30,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030403_19v2','빅데이터 서비스 운영 관리',30,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030404_19v2','빅데이터 솔루션 운영 계획',30,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030405_19v2','빅데이터 솔루션 운영 관리',30,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030406_19v2','빅데이터 플랫폼 모니터링',50,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030407_19v2','빅데이터 품질 관리',30,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030408_19v2','빅데이터 플로우 관리',40,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030409_19v2','빅데이터 모델 운영',40,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030410_19v2','빅데이터 처리 운영',40,'20','정보통신','1','정보기술','3','정보기술운영','4','빅데이터운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030501_21v1','IoT 시스템 운영·관리 계획',60,'20','정보통신','1','정보기술','3','정보기술운영','5','IoT시스템운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030502_21v1','IoT 응용서비스 운영·관리',40,'20','정보통신','1','정보기술','3','정보기술운영','5','IoT시스템운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030503_21v1','IoT 플랫폼 운영·관리',50,'20','정보통신','1','정보기술','3','정보기술운영','5','IoT시스템운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030504_21v1','IoT 네트워크 운영·관리',40,'20','정보통신','1','정보기술','3','정보기술운영','5','IoT시스템운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030505_21v1','IoT 디바이스 운영·관리',40,'20','정보통신','1','정보기술','3','정보기술운영','5','IoT시스템운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030506_21v1','IoT 시스템 연동 관리',40,'20','정보통신','1','정보기술','3','정보기술운영','5','IoT시스템운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030507_21v1','IoT 운영 데이터 관제',50,'20','정보통신','1','정보기술','3','정보기술운영','5','IoT시스템운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030508_21v1','IoT 보안 운영·관리',50,'20','정보통신','1','정보기술','3','정보기술운영','5','IoT시스템운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001030509_21v1','IoT 시스템 변경 관리',50,'20','정보통신','1','정보기술','3','정보기술운영','5','IoT시스템운영·관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040101_19v3','IT프로젝트 기획관리',14,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040102_19v3','IT프로젝트 통합관리',28,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040103_19v3','IT프로젝트 범위관리',21,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040104_19v3','IT프로젝트 일정관리',14,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040105_19v3','IT프로젝트 원가관리',21,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040106_19v3','IT프로젝트 인적자원관리',14,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040107_19v3','IT프로젝트 품질관리',28,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040108_19v3','IT프로젝트 위험관리',21,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040109_19v3','IT프로젝트 의사소통관리',21,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040110_19v3','IT프로젝트 조달관리',14,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040111_19v3','IT프로젝트 변경관리',28,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040112_19v3','IT프로젝트 보안관리',28,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040113_19v3','IT프로젝트 정보시스템 구축관리',14,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040114_19v3','IT프로젝트 성과관리',14,'20','정보통신','1','정보기술','4','정보기술관리','1','IT프로젝트관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040201_19v4','IT품질정책 수립',20,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040202_19v4','IT표준프로세스 수립',40,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040203_19v4','IT품질관리계획 수립',20,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040204_19v4','IT품질교육 관리',20,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040205_19v4','SW품질 평가',40,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040207_19v4','IT품질보증계획 수립',20,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040208_19v4','SW제품품질 점검',30,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040209_19v4','IT프로세스이행 점검',30,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040210_19v4','IT시정조치 관리',20,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040211_19v4','IT품질관리활동 개선',32,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040212_19v4','IT품질관리 개선사항 도출',24,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040213_19v2','IT품질 관리시스템 구축',30,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040214_19v2','IT품질 관리시스템 운영',30,'20','정보통신','1','정보기술','4','정보기술관리','2','IT품질보증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040301_19v4','테스트 기획',20,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040302_19v4','테스트 진단 컨설팅',30,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040303_21v5','테스트 계획',40,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040309_21v5','테스트 완료',20,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040310_21v5','테스트 자동화',40,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040311_21v5','테스트 분석',40,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040312_21v5','테스트 요구사항 분석',48,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040313_21v5','테스트 설계',40,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040314_21v5','테스트 케이스 설계',48,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040315_21v5','단위테스트 실행',24,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040316_21v5','통합테스트 실행',48,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040317_21v5','시스템테스트 실행',48,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040318_21v5','인수테스트 실행',48,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040319_21v5','테스트 결과 관리',48,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040320_21v5','테스트 관리',40,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040321_21v5','테스트 환경 구축',40,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040322_21v5','테스트 환경 점검',24,'20','정보통신','1','정보기술','4','정보기술관리','3','IT테스트');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040401_19v3','감리계획수립',20,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040402_19v3','현장감리 착수',10,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040403_19v3','사업착수단계 현장감리 수행',30,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040404_19v3','요구정의단계 현장감리 수행',30,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040405_19v3','설계단계 현장감리 수행',30,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040406_19v3','종료단계 현장감리 수행',30,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040407_19v3','감리수행결과보고서 작성',30,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040408_19v3','현장감리 종료',10,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040409_19v3','감리수행결과보고서 통보',10,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040410_19v3','시정조치 확인',20,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001040411_19v3','감리종료',10,'20','정보통신','1','정보기술','4','정보기술관리','4','IT감리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050101_19v4','기술영업시장 현황분석',30,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050102_19v4','기술영업 전략수립',30,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050103_19v4','기술영업 고객 현황분석',20,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050104_19v4','사전 기술영업',30,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050105_19v4','수주전략수립',30,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050106_19v4','기술영업 제안 작업',50,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050107_19v4','사업계약 협상',30,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050108_19v4','기술영업 사후관리',30,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050109_19v4','협력선관리',30,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050110_19v4','영업관리 지원',50,'20','정보통신','1','정보기술','5','정보기술영업','1','IT기술영업');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050201_19v4','IT마케팅 환경 분석',40,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050202_19v3','IT마케팅 목표 설정',40,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050203_19v4','IT마케팅 STP 전략 수립',60,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050204_19v3','IT마케팅 4P 전략 수립',60,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050205_19v3','IT마케팅 제품(Product)관리',40,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050206_19v3','IT마케팅 가격(Price)관리',40,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050207_19v4','IT마케팅 유통(Place)관리',40,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050208_19v3','IT마케팅 프로모션(Promotion)관리',40,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050209_19v4','IT마케팅 고객 관리',40,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001050210_19v4','IT마케팅 성과 평가',40,'20','정보통신','1','정보기술','5','정보기술영업','2','IT마케팅');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060101_19v2','정보보호 거버넌스 구현',24,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060103_19v2','정보보호 정책 기획',24,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060105_19v2','보안 위험관리',32,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060106_19v2','정보보호 계획 수립',24,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060108_19v3','네트워크 보안 운영',40,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060109_19v3','애플리케이션 보안 운영',40,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060110_19v3','시스템 보안 운영',40,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060111_19v3','관리적 보안 운영',32,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060112_19v3','물리 보안 운영',32,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060113_19v3','보안 장비 운용',40,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060114_19v3','보안성 검토',32,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060115_19v3','내부 보안 감사 수행',32,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060116_19v2','협력사 보안 관리',32,'20','정보통신','1','정보기술','6','정보보호','1','정보보호관리·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060201_19v2','보안전략수립 컨설팅',40,'20','정보통신','1','정보기술','6','정보보호','2','정보보호진단·분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060203_19v2','보안감사',40,'20','정보통신','1','정보기술','6','정보보호','2','정보보호진단·분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060204_19v2','정보보호관리체계 인증',40,'20','정보통신','1','정보기술','6','정보보호','2','정보보호진단·분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060205_19v2','정보보호제품 인증',60,'20','정보통신','1','정보기술','6','정보보호','2','정보보호진단·분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060206_19v2','보안대책설계 컨설팅',40,'20','정보통신','1','정보기술','6','정보보호','2','정보보호진단·분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060207_19v2','정보시스템 진단',80,'20','정보통신','1','정보기술','6','정보보호','2','정보보호진단·분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060208_19v2','정보보호관리체계 심사컨설팅',48,'20','정보통신','1','정보기술','6','정보보호','2','정보보호진단·분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060209_19v2','정보보호제품 평가 컨설팅',40,'20','정보통신','1','정보기술','6','정보보호','2','정보보호진단·분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060210_19v2','모의해킹',80,'20','정보통신','1','정보기술','6','정보보호','2','정보보호진단·분석');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060301_19v2','보안관제 기획운영',50,'20','정보통신','1','정보기술','6','정보보호','3','보안사고분석대응');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060302_19v2','컴퓨터 침해사고(CERT)대응팀 구축',50,'20','정보통신','1','정보기술','6','정보보호','3','보안사고분석대응');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060303_19v2','디지털 포렌식',50,'20','정보통신','1','정보기술','6','정보보호','3','보안사고분석대응');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060304_19v2','사이버조사',50,'20','정보통신','1','정보기술','6','정보보호','3','보안사고분석대응');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060305_19v2','침해사고 분석',50,'20','정보통신','1','정보기술','6','정보보호','3','보안사고분석대응');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060306_19v2','악성코드 분석',50,'20','정보통신','1','정보기술','6','정보보호','3','보안사고분석대응');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060307_19v2','보안로그 분석',50,'20','정보통신','1','정보기술','6','정보보호','3','보안사고분석대응');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060308_19v2','보안사고 대응',40,'20','정보통신','1','정보기술','6','정보보호','3','보안사고분석대응');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060401_19v2','암호 분석 기획',120,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060402_19v2','암호 분석',160,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060403_19v2','암호 장비 운용',40,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060404_19v2','암호모듈 검증 정책 기획',160,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060405_19v2','암호모듈 검증 수행',80,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060406_19v2','암호 연구·개발 기획',80,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060407_19v2','암호 알고리즘 연구',80,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060408_19v2','암호·인증 모듈 기획',80,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060409_19v2','암호·인증 모듈 개발',40,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060410_19v2','암호 시스템 운영',40,'20','정보통신','1','정보기술','6','정보보호','4','정보보호암호·인증');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060501_22v2','영상정보처리시스템 요구사항 분석',30,'20','정보통신','1','정보기술','6','정보보호','5','영상정보처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060502_22v2','영상정보처리시스템 설계',40,'20','정보통신','1','정보기술','6','정보보호','5','영상정보처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060505_22v2','영상정보처리 알고리즘 개발',30,'20','정보통신','1','정보기술','6','정보보호','5','영상정보처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060506_22v2','영상정보처리시스템 개발',30,'20','정보통신','1','정보기술','6','정보보호','5','영상정보처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060507_22v2','영상정보처리시스템 구축',30,'20','정보통신','1','정보기술','6','정보보호','5','영상정보처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060508_22v2','영상정보처리시스템 최적화',30,'20','정보통신','1','정보기술','6','정보보호','5','영상정보처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060513_22v2','영상정보처리 알고리즘 설계',40,'20','정보통신','1','정보기술','6','정보보호','5','영상정보처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060514_22v2','영상관제 업무 관리',30,'20','정보통신','1','정보기술','6','정보보호','5','영상정보처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060601_19v2','생체인식 알고리즘 설계',50,'20','정보통신','1','정보기술','6','정보보호','6','생체인식(바이오인식)');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060602_19v2','생체인식 모듈 설계',40,'20','정보통신','1','정보기술','6','정보보호','6','생체인식(바이오인식)');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060603_19v2','생체인식 API 설계',40,'20','정보통신','1','정보기술','6','정보보호','6','생체인식(바이오인식)');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060604_19v2','생체인식 알고리즘 구현',40,'20','정보통신','1','정보기술','6','정보보호','6','생체인식(바이오인식)');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060605_19v2','생체인식 모듈 구현',40,'20','정보통신','1','정보기술','6','정보보호','6','생체인식(바이오인식)');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060606_19v2','생체인식 API 구현',40,'20','정보통신','1','정보기술','6','정보보호','6','생체인식(바이오인식)');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060607_19v2','생체인식 성능평가 관리',30,'20','정보통신','1','정보기술','6','정보보호','6','생체인식(바이오인식)');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060608_19v2','생체인식 성능 테스트 수행',20,'20','정보통신','1','정보기술','6','정보보호','6','생체인식(바이오인식)');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060701_19v1','개인정보보호 법령·정책 분석',30,'20','정보통신','1','정보기술','6','정보보호','7','개인정보보호');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060702_19v1','개인정보보호 기획',30,'20','정보통신','1','정보기술','6','정보보호','7','개인정보보호');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060703_19v1','개인정보 영향평가 관리',24,'20','정보통신','1','정보기술','6','정보보호','7','개인정보보호');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060704_19v1','개인정보보호 위험관리',40,'20','정보통신','1','정보기술','6','정보보호','7','개인정보보호');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060705_19v1','개인정보보호 운영',50,'20','정보통신','1','정보기술','6','정보보호','7','개인정보보호');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060706_19v1','개인정보보호 활동 모니터링',40,'20','정보통신','1','정보기술','6','정보보호','7','개인정보보호');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060707_19v1','개인정보보호 관리체계 인증',30,'20','정보통신','1','정보기술','6','정보보호','7','개인정보보호');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060708_19v1','개인정보보호 감사',50,'20','정보통신','1','정보기술','6','정보보호','7','개인정보보호');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060801_20v1','조사계획 수립',40,'20','정보통신','1','정보기술','6','정보보호','8','디지털포렌식');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060802_20v1','현장 조사',40,'20','정보통신','1','정보기술','6','정보보호','8','디지털포렌식');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060803_20v1','증거 수집',30,'20','정보통신','1','정보기술','6','정보보호','8','디지털포렌식');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060804_20v1','증거 관리',40,'20','정보통신','1','정보기술','6','정보보호','8','디지털포렌식');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060805_20v1','증거 추출',30,'20','정보통신','1','정보기술','6','정보보호','8','디지털포렌식');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060806_20v1','증거 분석',40,'20','정보통신','1','정보기술','6','정보보호','8','디지털포렌식');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060807_20v1','증거 제출',30,'20','정보통신','1','정보기술','6','정보보호','8','디지털포렌식');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060901_21v1','영상정보보안·운영 정책 수립',20,'20','정보통신','1','정보기술','6','정보보호','9','영상정보보안·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060902_21v1','영상정보보안·운영 계획 수립',20,'20','정보통신','1','정보기술','6','정보보호','9','영상정보보안·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060903_21v1','영상정보처리 보안',40,'20','정보통신','1','정보기술','6','정보보호','9','영상정보보안·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060904_21v1','영상정보 접근 통제',20,'20','정보통신','1','정보기술','6','정보보호','9','영상정보보안·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060905_21v1','개인영상정보 보호',20,'20','정보통신','1','정보기술','6','정보보호','9','영상정보보안·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060906_21v1','영상정보 관제시스템 운영',20,'20','정보통신','1','정보기술','6','정보보호','9','영상정보보안·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060907_21v1','영상정보 관제',30,'20','정보통신','1','정보기술','6','정보보호','9','영상정보보안·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060908_21v1','영상정보 보안사고 대응',30,'20','정보통신','1','정보기술','6','정보보호','9','영상정보보안·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001060909_21v1','영상정보 보안감사',40,'20','정보통신','1','정보기술','6','정보보호','9','영상정보보안·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001061001_22v1','가명?익명 법제도분석',40,'20','정보통신','1','정보기술','6','정보보호','10','개인정보가명익명처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001061002_22v1','가명?익명처리 기획',40,'20','정보통신','1','정보기술','6','정보보호','10','개인정보가명익명처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001061003_22v1','가명?익명 위험관리',40,'20','정보통신','1','정보기술','6','정보보호','10','개인정보가명익명처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001061004_22v1','가명?익명처리',40,'20','정보통신','1','정보기술','6','정보보호','10','개인정보가명익명처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001061005_22v1','가명정보 결합?반출',40,'20','정보통신','1','정보기술','6','정보보호','10','개인정보가명익명처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001061006_22v1','가명?익명처리 적정성 검토',40,'20','정보통신','1','정보기술','6','정보보호','10','개인정보가명익명처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001061007_22v1','가명?익명 사후관리',40,'20','정보통신','1','정보기술','6','정보보호','10','개인정보가명익명처리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070101_18v1','인공지능 플랫폼 구축 계획',60,'20','정보통신','1','정보기술','7','인공지능','1','인공지능플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070102_18v1','인공지능 플랫폼 요구사항 분석',60,'20','정보통신','1','정보기술','7','인공지능','1','인공지능플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070103_18v1','인공지능 플랫폼 설계',60,'20','정보통신','1','정보기술','7','인공지능','1','인공지능플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070104_18v1','인공지능 플랫폼 인프라 구현',60,'20','정보통신','1','정보기술','7','인공지능','1','인공지능플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070105_18v1','인공지능 플랫폼 기능 구현',60,'20','정보통신','1','정보기술','7','인공지능','1','인공지능플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070106_18v1','인공지능 플랫폼 인터페이스 구현',60,'20','정보통신','1','정보기술','7','인공지능','1','인공지능플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070107_18v1','인공지능 플랫폼 지식화 구현',60,'20','정보통신','1','정보기술','7','인공지능','1','인공지능플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070108_18v1','인공지능 플랫폼 테스트',60,'20','정보통신','1','정보기술','7','인공지능','1','인공지능플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070109_18v1','인공지능 플랫폼 품질 관리',60,'20','정보통신','1','정보기술','7','인공지능','1','인공지능플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070202_22v2','인공지능 서비스 목표 수립',40,'20','정보통신','1','정보기술','7','인공지능','2','인공지능서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070204_22v2','인공지능 서비스 모델 기획',50,'20','정보통신','1','정보기술','7','인공지능','2','인공지능서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070205_22v2','인공지능 서비스 시나리오 기획',60,'20','정보통신','1','정보기술','7','인공지능','2','인공지능서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070206_22v2','인공지능 서비스 활용 기획',60,'20','정보통신','1','정보기술','7','인공지능','2','인공지능서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070207_22v2','인공지능 서비스 실행계획 수립',40,'20','정보통신','1','정보기술','7','인공지능','2','인공지능서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070208_22v2','인공지능 서비스 성과평가 기획',40,'20','정보통신','1','정보기술','7','인공지능','2','인공지능서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070209_22v2','인공지능 서비스 요건 정의',40,'20','정보통신','1','정보기술','7','인공지능','2','인공지능서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070210_22v1','인공지능 서비스 데이터 기획',40,'20','정보통신','1','정보기술','7','인공지능','2','인공지능서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070301_19v1','인공지능 모델 문제 정의',30,'20','정보통신','1','정보기술','7','인공지능','3','인공지능모델링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070302_19v1','인공지능 모델 설계',90,'20','정보통신','1','정보기술','7','인공지능','3','인공지능모델링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070303_19v1','인공지능 데이터 확보',60,'20','정보통신','1','정보기술','7','인공지능','3','인공지능모델링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070304_19v1','인공지능 데이터 전처리',60,'20','정보통신','1','정보기술','7','인공지능','3','인공지능모델링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070305_19v1','인공지능 데이터 특징 추출',60,'20','정보통신','1','정보기술','7','인공지능','3','인공지능모델링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070306_19v1','인공지능 모델 학습',90,'20','정보통신','1','정보기술','7','인공지능','3','인공지능모델링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070307_19v1','인공지능 모델 선정',30,'20','정보통신','1','정보기술','7','인공지능','3','인공지능모델링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070308_19v1','인공지능 모델 관리',30,'20','정보통신','1','정보기술','7','인공지능','3','인공지능모델링');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070401_20v1','인공지능서비스 운영계획 수립',90,'20','정보통신','1','정보기술','7','인공지능','4','인공지능서비스운영관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070402_20v1','인공지능서비스 이용자관리',60,'20','정보통신','1','정보기술','7','인공지능','4','인공지능서비스운영관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070403_20v1','인공지능서비스 운영환경관리',60,'20','정보통신','1','정보기술','7','인공지능','4','인공지능서비스운영관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070404_20v1','인공지능서비스 운영모니터링',60,'20','정보통신','1','정보기술','7','인공지능','4','인공지능서비스운영관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070405_20v1','인공지능서비스 운영품질관리',90,'20','정보통신','1','정보기술','7','인공지능','4','인공지능서비스운영관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070406_20v1','인공지능서비스 운영장애관리',90,'20','정보통신','1','정보기술','7','인공지능','4','인공지능서비스운영관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070407_20v1','인공지능서비스 이용자관점 운영수준관리',60,'20','정보통신','1','정보기술','7','인공지능','4','인공지능서비스운영관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070408_20v1','인공지능서비스 운영개선관리',90,'20','정보통신','1','정보기술','7','인공지능','4','인공지능서비스운영관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070501_20v1','인공지능서비스 구현요건분석',60,'20','정보통신','1','정보기술','7','인공지능','5','인공지능서비스구현');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070502_20v1','인공지능서비스 상위설계',60,'20','정보통신','1','정보기술','7','인공지능','5','인공지능서비스구현');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070503_20v1','인공지능서비스 상세설계',60,'20','정보통신','1','정보기술','7','인공지능','5','인공지능서비스구현');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070504_20v1','인공지능서비스 애플리케이션 개발',90,'20','정보통신','1','정보기술','7','인공지능','5','인공지능서비스구현');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070505_20v1','인공지능서비스 모델적용',60,'20','정보통신','1','정보기술','7','인공지능','5','인공지능서비스구현');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070506_20v1','인공지능서비스 인터페이스 개발',90,'20','정보통신','1','정보기술','7','인공지능','5','인공지능서비스구현');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070507_20v1','인공지능서비스 테스트',60,'20','정보통신','1','정보기술','7','인공지능','5','인공지능서비스구현');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070508_20v1','인공지능서비스 이행',50,'20','정보통신','1','정보기술','7','인공지능','5','인공지능서비스구현');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070601_22v1','인공지능 학습데이터 구축 기획',40,'20','정보통신','1','정보기술','7','인공지능','6','인공지능학습데이터구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070602_22v1','인공지능 학습데이터 획득 계획',40,'20','정보통신','1','정보기술','7','인공지능','6','인공지능학습데이터구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070603_22v1','인공지능 학습데이터 획득',40,'20','정보통신','1','정보기술','7','인공지능','6','인공지능학습데이터구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070604_22v1','인공지능 학습데이터 저장 관리',40,'20','정보통신','1','정보기술','7','인공지능','6','인공지능학습데이터구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070605_22v1','인공지능 학습데이터 정제',40,'20','정보통신','1','정보기술','7','인공지능','6','인공지능학습데이터구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070606_22v1','인공지능 학습데이터 라벨링 관리',40,'20','정보통신','1','정보기술','7','인공지능','6','인공지능학습데이터구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070607_22v1','인공지능 학습데이터 라벨링',20,'20','정보통신','1','정보기술','7','인공지능','6','인공지능학습데이터구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070608_22v1','인공지능 학습데이터 가명정보 결합',40,'20','정보통신','1','정보기술','7','인공지능','6','인공지능학습데이터구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001070609_22v1','인공지능 학습데이터 변환',40,'20','정보통신','1','정보기술','7','인공지능','6','인공지능학습데이터구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080101_21v2','블록체인 시장조사',30,'20','정보통신','1','정보기술','8','블록체인','1','블록체인분석·설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080102_21v2','블록체인 요구사항 분석',46,'20','정보통신','1','정보기술','8','블록체인','1','블록체인분석·설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080103_21v2','블록체인 비즈니스 전략 수립',50,'20','정보통신','1','정보기술','8','블록체인','1','블록체인분석·설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080104_21v2','블록체인 데이터 구조 설계',46,'20','정보통신','1','정보기술','8','블록체인','1','블록체인분석·설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080105_21v2','블록체인 상세 설계',40,'20','정보통신','1','정보기술','8','블록체인','1','블록체인분석·설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080106_21v2','블록체인 프로토타입 개발',46,'20','정보통신','1','정보기술','8','블록체인','1','블록체인분석·설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080107_21v2','블록체인 프로토타입 통합 테스트',46,'20','정보통신','1','정보기술','8','블록체인','1','블록체인분석·설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080108_21v2','블록체인 프로토타입 검증',30,'20','정보통신','1','정보기술','8','블록체인','1','블록체인분석·설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080201_21v2','블록체인 요구사항 검증',30,'20','정보통신','1','정보기술','8','블록체인','2','블록체인구축·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080202_21v2','블록체인 플랫폼구현',50,'20','정보통신','1','정보기술','8','블록체인','2','블록체인구축·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080203_21v2','블록체인 응용서비스 구현',46,'20','정보통신','1','정보기술','8','블록체인','2','블록체인구축·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080204_21v2','블록체인 테스트관리',40,'20','정보통신','1','정보기술','8','블록체인','2','블록체인구축·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080205_21v2','블록체인 단위 테스트 수행',40,'20','정보통신','1','정보기술','8','블록체인','2','블록체인구축·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080206_21v2','블록체인 통합 테스트 수행',40,'20','정보통신','1','정보기술','8','블록체인','2','블록체인구축·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080207_21v2','블록체인 시험운영',46,'20','정보통신','1','정보기술','8','블록체인','2','블록체인구축·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080208_21v2','블록체인 운영관리',30,'20','정보통신','1','정보기술','8','블록체인','2','블록체인구축·운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080301_22v2','블록체인 산업시장 환경분석',30,'20','정보통신','1','정보기술','8','블록체인','3','블록체인서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080302_22v2','블록체인 비즈니스모델 기획',30,'20','정보통신','1','정보기술','8','블록체인','3','블록체인서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080303_22v2','블록체인 기술 분석',30,'20','정보통신','1','정보기술','8','블록체인','3','블록체인서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080304_22v2','블록체인 서비스 정보보호 계획',30,'20','정보통신','1','정보기술','8','블록체인','3','블록체인서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080305_22v2','블록체인 서비스 분석·설계 계획',30,'20','정보통신','1','정보기술','8','블록체인','3','블록체인서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080306_22v2','블록체인 서비스 구축 계획',30,'20','정보통신','1','정보기술','8','블록체인','3','블록체인서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080307_22v2','블록체인 서비스 운영 계획',30,'20','정보통신','1','정보기술','8','블록체인','3','블록체인서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001080308_22v2','블록체인 서비스 품질관리 계획',40,'20','정보통신','1','정보기술','8','블록체인','3','블록체인서비스기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090101_20v1','스마트물류체계 도입타당성 검토',60,'20','정보통신','1','정보기술','9','스마트물류','1','스마트물류체계기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090102_20v1','스마트물류체계 전략 수립',60,'20','정보통신','1','정보기술','9','스마트물류','1','스마트물류체계기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090103_20v1','스마트물류체계 추진계획 수립',60,'20','정보통신','1','정보기술','9','스마트물류','1','스마트물류체계기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090104_20v1','스마트물류 시설계획 수립',50,'20','정보통신','1','정보기술','9','스마트물류','1','스마트물류체계기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090105_20v1','스마트물류 장비계획 수립',50,'20','정보통신','1','정보기술','9','스마트물류','1','스마트물류체계기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090106_20v1','스마트물류 소프트웨어계획 수립',50,'20','정보통신','1','정보기술','9','스마트물류','1','스마트물류체계기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090107_20v1','스마트물류 데이터관리계획 수립',50,'20','정보통신','1','정보기술','9','스마트물류','1','스마트물류체계기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090108_20v1','스마트물류체계 표준화계획 수립',30,'20','정보통신','1','정보기술','9','스마트물류','1','스마트물류체계기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090109_20v1','스마트물류체계 성과평가계획 수립',30,'20','정보통신','1','정보기술','9','스마트물류','1','스마트물류체계기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090201_20v1','스마트물류 플랫폼 설계',60,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090202_20v1','스마트물류 최적화서비스 설계',60,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090203_20v1','스마트물류 플랫폼구축 솔루션 선정',60,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090204_20v1','스마트물류 네트워크 구축',46,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090205_20v1','스마트물류 설비 구축',46,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090206_20v1','스마트물류 플랫폼 IoT장비 구축',46,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090207_20v1','스마트물류 소프트웨어 구축',46,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090208_20v1','스마트물류 데이터베이스 구축',46,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090209_20v1','스마트물류 플랫폼 통합검증',30,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090210_20v1','스마트물류 플랫폼 최적화',60,'20','정보통신','1','정보기술','9','스마트물류','2','스마트물류플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090301_20v1','스마트물류 통합관리 환경분석',30,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090302_20v1','스마트물류 자원 관리',45,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090303_20v1','스마트물류 예측 관리',45,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090304_20v1','스마트물류 IoT장비 관리',45,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090305_20v1','스마트물류 지능형창고 관리',45,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090306_20v1','스마트물류 자율주행로봇 관리',45,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090307_20v1','스마트물류 지능형플랫폼 관리',45,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090308_20v1','스마트물류 데이터베이스 관리',45,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090309_20v1','스마트물류 연계시스템 운용',45,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001090310_20v1','스마트물류 보안안전 관리',30,'20','정보통신','1','정보기술','9','스마트물류','3','스마트물류통합관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100101_20v1','디지털트윈 목표 수립',40,'20','정보통신','1','정보기술','10','디지털트윈','1','디지털트윈기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100102_20v1','디지털트윈 환경분석',40,'20','정보통신','1','정보기술','10','디지털트윈','1','디지털트윈기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100103_20v1','디지털트윈 요구사항분석',40,'20','정보통신','1','정보기술','10','디지털트윈','1','디지털트윈기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100104_20v1','디지털트윈 모델 설계',60,'20','정보통신','1','정보기술','10','디지털트윈','1','디지털트윈기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100105_20v1','디지털트윈 모델 활용시나리오 기획',60,'20','정보통신','1','정보기술','10','디지털트윈','1','디지털트윈기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100106_20v1','디지털트윈 구현계획 수립',40,'20','정보통신','1','정보기술','10','디지털트윈','1','디지털트윈기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100107_20v1','디지털트윈 운영정책 수립',40,'20','정보통신','1','정보기술','10','디지털트윈','1','디지털트윈기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100108_20v1','디지털트윈 성과평가 기획',40,'20','정보통신','1','정보기술','10','디지털트윈','1','디지털트윈기획');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100201_22v1','디지털트윈 가상모델 상세 설계',60,'20','정보통신','1','정보기술','10','디지털트윈','2','디지털트윈설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100202_22v1','디지털트윈 상호작용 설계',50,'20','정보통신','1','정보기술','10','디지털트윈','2','디지털트윈설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100203_22v1','디지털트윈 데이터 설계',60,'20','정보통신','1','정보기술','10','디지털트윈','2','디지털트윈설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100204_22v1','디지털트윈 시스템 설계',60,'20','정보통신','1','정보기술','10','디지털트윈','2','디지털트윈설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100205_22v1','디지털트윈 가상모델 검증',50,'20','정보통신','1','정보기술','10','디지털트윈','2','디지털트윈설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100206_22v1','디지털트윈 구현계획 구체화',60,'20','정보통신','1','정보기술','10','디지털트윈','2','디지털트윈설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100207_22v1','디지털트윈 품질평가 계획',60,'20','정보통신','1','정보기술','10','디지털트윈','2','디지털트윈설계');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100301_22v1','디지털트윈 응용서비스 구현',40,'20','정보통신','1','정보기술','10','디지털트윈','3','디지털트윈구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100302_22v1','디지털트윈 가상세계 구현',40,'20','정보통신','1','정보기술','10','디지털트윈','3','디지털트윈구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100303_22v1','디지털트윈 상호작용 구현',40,'20','정보통신','1','정보기술','10','디지털트윈','3','디지털트윈구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100304_22v1','디지털트윈 알고리즘 실증 구현',40,'20','정보통신','1','정보기술','10','디지털트윈','3','디지털트윈구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100305_22v1','디지털트윈 플랫폼 구현',40,'20','정보통신','1','정보기술','10','디지털트윈','3','디지털트윈구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100306_22v1','디지털트윈 테스트',40,'20','정보통신','1','정보기술','10','디지털트윈','3','디지털트윈구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2001100307_22v1','디지털트윈 품질관리',40,'20','정보통신','1','정보기술','10','디지털트윈','3','디지털트윈구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010101_21v3','교환시스템 구축계획',30,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010102_21v3','교환시스템 기본설계',50,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010105_21v3','교환시스템 중계설비 실시설계',50,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010107_21v3','교환시스템 설치공사',80,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010108_21v3','교환시스템 설치공사시험',80,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010109_21v3','교환시스템 공사감리',30,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010110_21v3','교환시스템 운용관리',80,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010114_21v2','교환시스템 실시설계지침 작성',45,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010115_21v2','교환시스템 실시설계설명서 작성',45,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010116_21v2','교환시스템 실시설계도면 작성',40,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010117_21v2','교환시스템 공사비명세서 작성',40,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010118_21v3','교환시스템 자재구매조달',30,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010119_21v1','교환시스템 전원설비 실시설계',30,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010120_21v1','교환시스템 5G 가입자 연동 엔티티(Entity) 구축',45,'20','정보통신','2','통신기술','1','유선통신구축','1','교환시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010201_14v2','구내통신 구축계획 수립',30,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010202_14v2','구내통신 구축설계',50,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010203_16v3','구내통신구축 제안 관리',40,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010204_16v3','구내통신구축 공사관리',50,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010206_14v2','구내통신 설비공사',80,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010207_14v2','구내통신 공사품질관리',50,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010208_14v2','구내통신 설계·공사감리',30,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010209_14v2','구내통신 공사준공·정산관리',50,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010210_16v3','구내통신 운영관리',50,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010211_16v1','구내통합설비 설계',40,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010212_16v1','구내 방송통신설계',20,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010213_16v1','구내 배관배선 설계',40,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010214_16v1','정보통신설비 검토',40,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010215_16v1','정보통신선로 검토',40,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010216_16v3','건축물 정보통신 배관 공사',50,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010217_16v3','광 케이블 공사',50,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010218_16v3','일반 케이블 공사',50,'20','정보통신','2','통신기술','1','유선통신구축','2','구내통신구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010301_22v3','네트워크사업기획',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010302_22v3','네트워크구축계획',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010303_22v3','네트워크구축설계',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010304_22v3','네트워크공사발주',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010305_22v3','네트워크구축공사',45,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010306_22v3','네트워크품질시험',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010307_22v3','네트워크구축감리',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010308_22v3','네트워크운용관리',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010309_22v3','네트워크유지보수',45,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010310_22v4','네트워크보안관리',45,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010311_22v2','인터넷 설비 공사',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010312_22v2','근거리통신망(LAN) 설계',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010313_22v2','스위치장비구축',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010314_22v2','무선근거리통신망(WLAN)구축',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010315_22v2','서버 구축',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010316_22v2','지중관로공사',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010317_22v2','가공선로공사',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010318_22v2','구조물 설치공사',30,'20','정보통신','2','통신기술','1','유선통신구축','3','네트워크구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010401_21v2','이동통신구내설비공사',45,'20','정보통신','2','통신기술','1','유선통신구축','4','구내통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010807_18v1','해사위성통신장비 설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010808_18v1','자동조타장치 설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010809_18v1','항해자료기록장치 설비공사',30,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010810_18v1','기상시설 공사',16,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010811_18v1','선박어로 설비공사',16,'20','정보통신','2','통신기술','1','유선통신구축','8','항해·항만정보통신설비공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010901_18v1','계기착륙시설공사',50,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010902_18v1','자동종속감시시설공사',46,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010903_18v1','레이더시설공사',50,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010904_18v1','레이더자료자동처리시설공사',50,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010905_18v1','거리측정·전방향표지시설공사',46,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010906_18v1','항공고정통신시설공사',46,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010907_18v1','단거리·단파이동통신시설공사',30,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010908_18v1','음성통신제어시설공사',46,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010909_18v1','초단파디지털이동통신시설공사',46,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002010910_18v1','공항정보방송시설공사',30,'20','정보통신','2','통신기술','1','유선통신구축','9','항공·항행정보통신시설공사');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002011001_19v1','클라우드 시스템 요구사항 분석',45,'20','정보통신','2','통신기술','1','유선통신구축','10','클라우드플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002011002_19v1','클라우드 플랫폼 구축계획 수립',45,'20','정보통신','2','통신기술','1','유선통신구축','10','클라우드플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002011003_19v1','클라우드 플랫폼 설계',45,'20','정보통신','2','통신기술','1','유선통신구축','10','클라우드플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002011004_19v1','클라우드 하드웨어 인프라 구축',45,'20','정보통신','2','통신기술','1','유선통신구축','10','클라우드플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002011005_19v1','클라우드 가상화 인프라 구축',45,'20','정보통신','2','통신기술','1','유선통신구축','10','클라우드플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002011006_19v1','클라우드 백업 복구시스템 구축',45,'20','정보통신','2','통신기술','1','유선통신구축','10','클라우드플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002011007_19v1','클라우드 보안 구현',90,'20','정보통신','2','통신기술','1','유선통신구축','10','클라우드플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002011008_19v1','클라우드 플랫폼 시험',45,'20','정보통신','2','통신기술','1','유선통신구축','10','클라우드플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002011009_19v1','클라우드 플랫폼 유지보수',45,'20','정보통신','2','통신기술','1','유선통신구축','10','클라우드플랫폼구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020101_14v2','무선통신시스템구축 요구사항분석',40,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020102_14v2','무선통신시스템구축 계획수립',40,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020103_14v2','무선통신시스템 설계',40,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020104_14v2','무선통신시스템 장비발주',30,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020106_14v2','무선통신시스템 시험',30,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020107_14v2','무선통신시스템구축 감리',40,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020108_14v2','무선통신시스템 최적화',40,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020109_14v2','무선통신시스템 인수인계',30,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020110_14v2','무선통신시스템구축 하자관리',40,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020111_16v1','무선설비 설계',45,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020112_16v3','이동통신 기지국 설치',50,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020113_16v3','이동통신 기지국 연동',40,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020114_16v1','기본설계서 작성',45,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020115_16v1','공사계획서 작성',45,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020116_16v1','설계도면 작성',40,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020117_16v1','공사비명세서 작성',40,'20','정보통신','2','통신기술','2','무선통신구축','1','무선통신시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020201_22v3','전송시스템구축 요구사항분석',45,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020202_22v3','전송시스템구축 계획수립',45,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020203_22v3','전송시스템 실시설계',45,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020204_22v3','전송시스템구축 시공업체선정',30,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020206_22v3','전송시스템구축 부대환경조성',45,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020208_22v3','전송시스템 시험',45,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020209_22v3','전송시스템구축 감리',45,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020210_22v3','전송시스템구축 유지관리',45,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020212_22v2','정보통신 기술표준 활용',30,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020214_22v3','전송시스템구축 공사',45,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020215_22v1','전송시스템 기본설계',45,'20','정보통신','2','통신기술','2','무선통신구축','2','전송시스템구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010104_14v1','중계방송영상제작',45,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010105_14v1','중계방송음향제작',45,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010106_14v1','중계방송조명',45,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010107_14v1','중계방송카메라운용',45,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010108_14v1','중계방송녹화',45,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010109_14v1','중계방송시스템관리',60,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010110_14v1','중계방송차량관리',30,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010111_14v1','특수중계방송',45,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010201_14v1','방송품질관리기획',30,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010202_14v1','방송영상품질관리',45,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010203_14v1','방송음향품질관리',45,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010204_14v1','방송데이터품질관리',45,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010205_14v1','방송콘텐츠저장품질관리',60,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010206_14v1','방송콘텐츠코덱품질관리',60,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010207_14v1','방송제작리소스품질관리',45,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010208_14v1','방송신호 분배·송출품질관리',45,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010209_14v1','방송종합품질관리',60,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010210_14v1','방송품질 법·제도관리',30,'20','정보통신','3','방송기술','1','방송제작기술','2','방송품질관리');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020101_17v2','라디오 방송 기술 기획',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020102_17v2','라디오 방송 기술 관리',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020103_17v2','라디오 방송 스튜디오 제작 기술',200,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020104_17v2','라디오 방송 중계 제작 기술',190,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020105_17v2','라디오 방송 방송통신융합 시스템 운용',90,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020106_17v2','라디오 방송 송출 기술',100,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020107_17v2','라디오 방송 송신 기술',100,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020108_17v2','라디오 방송 망 운용',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020109_17v2','라디오 방송 시스템 관리',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020110_17v2','라디오 방송 기술 연구 개발',240,'20','정보통신','3','방송기술','2','방송플랫폼기술','1','라디오방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020201_17v2','TV방송 기술기획',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020202_13v1','TV방송 기술감독',100,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020203_17v2','TV방송 영상·녹화',320,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020204_17v2','TV방송 음향·녹음',100,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020205_13v1','TV방송 조명',100,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020206_13v1','TV방송 종합편집',200,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020207_17v2','TV방송 중계',150,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020208_17v2','TV방송 송출',150,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020209_17v2','TV방송 회선운용',90,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020210_17v2','TV방송 송신기술',100,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020211_17v1','UHDTV 방송기술',90,'20','정보통신','3','방송기술','2','방송플랫폼기술','2','지상파TV방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020301_17v2','DMB 서비스 기획',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020302_13v1','지상파DMB 연구개발',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020303_17v2','지상파DMB 단말 인증',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020304_17v2','데이터방송 채널 운용',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020305_17v2','방송운행시스템운용',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020306_17v2','송출 시스템 운용',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020307_17v2','콘텐츠품질관리',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020308_17v2','원격제어시스템 운용',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020309_17v2','무선국 운용',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020310_17v2','지상파DMB 방송망 운용',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020311_17v2','송신기 운용',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','3','지상파DMB');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020401_17v2','기술기획수립_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020402_17v2','기술 감독_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020403_17v2','영상 감독_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020404_17v2','음향 감독_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020405_17v2','조명 감독_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020406_17v2','중계기술 운용_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020407_17v2','편집 감독_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020408_17v2','방송 컴퓨터그래픽 디자인_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020409_17v2','방송네트워크시스템운용_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020301_21v3','무선통신망구축 기본계획',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020302_21v3','무선통신망구축 기본설계',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020303_21v3','무선통신망구축 실시설계',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020304_21v3','무선통신망구축 장비발주',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020306_21v3','무선통신망 시험',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020307_21v3','무선통신망구축 감리',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020308_21v3','무선통신망 기술기준적용',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020309_14v2','무선통신망구축 운용지원',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020310_21v3','무선통신망구축 유지보수',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020311_21v2','무선통신 전파환경 분석',45,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020312_21v2','안테나계 설비 설계',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020313_21v2','무선통신 설비 설계',40,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020314_21v4','이동통신 중계기 설치 준비',30,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020315_21v4','이동통신 중계기 설치',50,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020316_21v1','5G 액세스 네트워크 구축',30,'20','정보통신','2','통신기술','2','무선통신구축','3','무선통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020401_18v2','위성통신망 설계',45,'20','정보통신','2','통신기술','2','무선통신구축','4','위성통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020402_18v2','위성통신망 시공',60,'20','정보통신','2','통신기술','2','무선통신구축','4','위성통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020403_18v2','위성통신망 감리',45,'20','정보통신','2','통신기술','2','무선통신구축','4','위성통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020404_18v2','위성체 관제',30,'20','정보통신','2','통신기술','2','무선통신구축','4','위성통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020406_18v2','지구국 시설 유지보수',45,'20','정보통신','2','통신기술','2','무선통신구축','4','위성통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020407_18v2','위성통신망 사업관리',45,'20','정보통신','2','통신기술','2','무선통신구축','4','위성통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020408_18v1','위성 지구국 운용',45,'20','정보통신','2','통신기술','2','무선통신구축','4','위성통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020409_18v1','위성중계기 운용',45,'20','정보통신','2','통신기술','2','무선통신구축','4','위성통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020501_22v3','IoT통신망 요구사항 분석',30,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020502_22v3','IoT통신망 표준 및 기술기준 활용',45,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020503_22v3','IoT통신망 공사 감리',30,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020504_22v3','IoT통신망 전원설비 기술분석',45,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020505_22v3','IoT통신망 LPWAN 기술분석',45,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020506_22v3','IoT통신망 LPWAN 설계',45,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020507_22v3','IoT통신망 LPWAN 공사',45,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020508_22v3','IoT통신망 LPWAN 운용',45,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020509_22v3','IoT통신망 LoWPAN 기술분석',30,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020510_22v3','IoT통신망 LoWPAN 설계',45,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020511_22v3','IoT통신망 LoWPAN 공사',45,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020512_22v3','IoT통신망 LoWPAN 운용',45,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020513_22v1','IoT통신망 보안관리',30,'20','정보통신','2','통신기술','2','무선통신구축','5','IoT통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020601_18v1','공공안전통신망구축 기획',30,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020602_18v1','공공안전통신망 표준운영절차 수립',30,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020603_18v1','공공안전통신망 설계',40,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020604_18v1','공공안전통신망 시공',30,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020605_18v1','공공안전통신망 운용',40,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020606_18v1','공공안전통신망 정보보안관리',30,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020607_18v1','공공안전통신망 시험',30,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020608_18v1','공공안전통신망 유지보수',30,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020609_18v1','공공안전통신망 품질관리',30,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002020610_18v1','공공안전통신 서비스 플랫폼 구축',40,'20','정보통신','2','통신기술','2','무선통신구축','6','공공안전통신망구축');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030101_13v1','영업계획 수립',20,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030102_16v2','회선개통',40,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030103_13v1','운용보전계획수립',20,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030104_16v2','서비스 품질관리',40,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030105_16v2','운용관리',40,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030106_16v2','고장처리',40,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030107_13v1','시설관리',20,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030108_13v1','서비스 요금관리',20,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030109_13v1','개인고객관리',20,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030110_13v1','기업고객관리',20,'20','정보통신','2','통신기술','3','통신서비스','1','유선설비접속서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030201_13v1','전용회선서비스 사업계획 수립',20,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030202_13v1','전용회선서비스 상품개발',20,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030203_13v1','전용회선서비스 영업관리',20,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030204_13v1','전용회선서비스 제안관리',20,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030205_13v1','전용회선서비스 회선개통',20,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030206_13v1','전용회선서비스 회선망 운영관리',20,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030207_13v1','전용회선서비스 보안관리',20,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030208_16v2','전용회선서비스 유지보수관리',30,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030209_16v2','전용회선서비스 장애관리',40,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030210_13v1','전용회선서비스 기술지원',20,'20','정보통신','2','통신기술','3','통신서비스','2','전용회선서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030301_22v2','사업 관리 수립',45,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030302_22v2','운용 보전 계획 수립',45,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030303_22v2','시스템 관리',45,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030304_22v2','라우팅 관리',45,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030305_22v2','소프트웨어 운용관리',45,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030306_22v3','시스템 점검',30,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030307_22v3','시스템 장애 처리',30,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030308_22v3','서비스 고장 수리',30,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030309_22v3','고장 접수 처리',30,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030310_22v3','회선 개통',30,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030311_22v2','예비품 운용관리',30,'20','정보통신','2','통신기술','3','통신서비스','3','초고속망서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030401_14v2','부가네트워크서비스 인프라 구성관리',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030402_14v2','부가네트워크서비스 상품 기획관리',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030403_14v2','부가네트워크서비스 영업관리',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030404_14v2','부가네트워크서비스 회선개통',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030405_14v2','부가네트워크서비스 운영관리',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030406_14v2','부가네트워크서비스 보안관리',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030407_14v2','부가네트워크서비스 유지보수관리',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030408_14v2','부가네트워크서비스 장애관리',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030409_14v2','부가네트워크서비스 기술지원',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030410_14v2','부가네트워크서비스 사업전략 기획',20,'20','정보통신','2','통신기술','3','통신서비스','4','부가네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030501_19v2','전보서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','5','전보서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030502_19v2','전보서비스 마케팅',20,'20','정보통신','2','통신기술','3','통신서비스','5','전보서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030503_19v2','전보서비스 영업관리',20,'20','정보통신','2','통신기술','3','통신서비스','5','전보서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030504_19v2','전보서비스 콜센터 운용',20,'20','정보통신','2','통신기술','3','통신서비스','5','전보서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030505_19v2','전보서비스 접수',20,'20','정보통신','2','통신기술','3','통신서비스','5','전보서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030506_19v2','전보서비스 송수신',20,'20','정보통신','2','통신기술','3','통신서비스','5','전보서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030507_19v2','전보서비스 시설 운용',20,'20','정보통신','2','통신기술','3','통신서비스','5','전보서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030508_19v2','전보서비스 배달',20,'20','정보통신','2','통신기술','3','통신서비스','5','전보서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030511_19v2','전보서비스 사업지원',30,'20','정보통신','2','통신기술','3','통신서비스','5','전보서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030601_17v2','이동통신서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','6','이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030605_17v2','이동통신서비스 운용',20,'20','정보통신','2','통신기술','3','통신서비스','6','이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030611_17v1','이동통신서비스 개발',30,'20','정보통신','2','통신기술','3','통신서비스','6','이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030612_17v1','이동통신서비스 품질관리',30,'20','정보통신','2','통신기술','3','통신서비스','6','이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030613_17v1','이동통신서비스 보안관리',30,'20','정보통신','2','통신기술','3','통신서비스','6','이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030614_17v1','이동통신서비스 사업지원',30,'20','정보통신','2','통신기술','3','통신서비스','6','이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030615_17v1','이동통신서비스 고객지원',15,'20','정보통신','2','통신기술','3','통신서비스','6','이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030616_17v2','이동통신서비스 시험',30,'20','정보통신','2','통신기술','3','통신서비스','6','이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030701_14v2','콘텐츠사용자서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030702_14v2','콘텐츠사용자서비스 환경분석',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030703_14v2','콘텐츠사용자서비스 마케팅',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030704_14v2','콘텐츠사용자서비스 계획수립',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030705_14v2','콘텐츠사용자서비스 개통관리',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030706_14v2','콘텐츠사용자서비스 운영관리',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030707_14v2','콘텐츠사용자서비스 품질관리',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030708_14v2','콘텐츠사용자서비스 과금관리',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030709_14v2','콘텐츠사용자서비스 장애관리',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030710_14v2','콘텐츠사용자서비스 고객지원관리',20,'20','정보통신','2','통신기술','3','통신서비스','7','콘텐츠사용자서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030801_20v3','콘텐츠네트워크서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030802_20v3','콘텐츠네트워크서비스 영업관리',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030803_20v3','콘텐츠네트워크서비스 고객관리',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030804_20v3','콘텐츠네트워크서비스 품질관리',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030805_20v3','콘텐츠네트워크서비스시스템 분석',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030806_20v3','콘텐츠네트워크서비스시스템 설계',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030807_20v3','콘텐츠네트워크서비스시스템 구축',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030808_20v3','콘텐츠네트워크서비스시스템 운영',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030809_20v3','콘텐츠네트워크서비스시스템 유지보수',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030810_20v3','콘텐츠네트워크서비스시스템 보안관리',20,'20','정보통신','2','통신기술','3','통신서비스','8','콘텐츠네트워크서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030901_13v1','무선초고속인터넷서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030902_13v1','무선초고속인터넷서비스 설계',20,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030903_13v1','무선초고속인터넷서비스 관리',20,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030904_13v1','무선초고속인터넷서비스 마케팅',20,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030905_16v2','무선초고속인터넷서비스 운영',50,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030906_13v1','무선초고속인터넷서비스 기술',20,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030907_13v1','무선초고속인터넷서비스 표준',20,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030908_13v1','무선초고속인터넷서비스 보호',20,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030909_13v1','무선초고속인터넷서비스 규제대응',20,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002030910_16v2','무선초고속인터넷서비스 현장지원',50,'20','정보통신','2','통신기술','3','통신서비스','9','무선초고속인터넷서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031008_19v2','주파수공용통신 시스템 점검',20,'20','정보통신','2','통신기술','3','통신서비스','10','주파수공용통신');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031009_19v2','주파수공용통신 시스템 보안관리',20,'20','정보통신','2','통신기술','3','통신서비스','10','주파수공용통신');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031011_19v2','주파수공용통신 서비스 관리계획',40,'20','정보통신','2','통신기술','3','통신서비스','10','주파수공용통신');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031012_19v2','주파수공용통신 시스템 운용',30,'20','정보통신','2','통신기술','3','통신서비스','10','주파수공용통신');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031013_19v2','주파수공용통신 시스템 장애처리',30,'20','정보통신','2','통신기술','3','통신서비스','10','주파수공용통신');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031014_19v2','주파수공용통신 상황관제',30,'20','정보통신','2','통신기술','3','통신서비스','10','주파수공용통신');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031101_19v2','무선호출메시징서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031102_19v2','무선호출메시징서비스 설계',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031103_19v2','무선호출메시징 네트워크 구축',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031104_19v2','무선호출메시징 네트워크 운용',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031105_19v2','무선호출메시징 네트워크 유지보수',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031106_19v2','무선호출메시징 네트워크 최적화',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031107_19v2','무선호출메시징서비스 관리',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031108_19v2','무선호출메시징서비스 장애복구',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031109_19v2','무선호출메시징서비스 개선',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031110_19v2','무선호출메시징서비스 마케팅',20,'20','정보통신','2','통신기술','3','통신서비스','11','무선호출메시징서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031201_19v2','위성통신서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','12','위성통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031202_19v2','위성통신서비스 개발',20,'20','정보통신','2','통신기술','3','통신서비스','12','위성통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031208_19v2','위성통신서비스 보안관리',20,'20','정보통신','2','통신기술','3','통신서비스','12','위성통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031211_19v1','위성통신서비스 성능시험',30,'20','정보통신','2','통신기술','3','통신서비스','12','위성통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031212_19v2','위성통신설비 기능검사',30,'20','정보통신','2','통신기술','3','통신서비스','12','위성통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031213_19v1','위성통신시스템 유지보수',30,'20','정보통신','2','통신기술','3','통신서비스','12','위성통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031214_19v2','위성통신서비스 사업관리',30,'20','정보통신','2','통신기술','3','통신서비스','12','위성통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031215_19v2','위성통신서비스 품질관리',20,'20','정보통신','2','통신기술','3','통신서비스','12','위성통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031303_19v2','IoT융합서비스 디바이스 개발',20,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031304_19v2','IoT융합서비스 플랫폼 개발',20,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031308_19v2','IoT융합서비스 품질관리',20,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031309_19v2','IoT융합서비스 마케팅관리',20,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031311_19v2','IoT융합서비스 업무분석',30,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031312_19v1','IoT융합서비스 네트워크 개발',30,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031313_19v1','IoT융합서비스 소프트웨어 개발',30,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031314_19v2','IoT융합서비스 정보시스템 운용',46,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031315_19v2','IoT융합서비스 운영관리',46,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031316_19v1','IoT융합서비스 보안 관리',30,'20','정보통신','2','통신기술','3','통신서비스','13','특수이동통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031401_19v2','인터넷지원서비스 신청관리',20,'20','정보통신','2','통신기술','3','통신서비스','14','인터넷지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031403_19v2','인터넷지원서비스 품질관리',20,'20','정보통신','2','통신기술','3','통신서비스','14','인터넷지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031404_19v2','인터넷 망 장애관리',20,'20','정보통신','2','통신기술','3','통신서비스','14','인터넷지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031405_19v2','인터넷지원서비스 이용자지원관리',20,'20','정보통신','2','통신기술','3','통신서비스','14','인터넷지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031407_19v2','인터넷서비스 기반설비 관리',20,'20','정보통신','2','통신기술','3','통신서비스','14','인터넷지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031408_19v2','인터넷지원서비스 상품 기획 관리',20,'20','정보통신','2','통신기술','3','통신서비스','14','인터넷지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031410_19v2','인터넷지원서비스 과금 관리',20,'20','정보통신','2','통신기술','3','통신서비스','14','인터넷지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031411_19v2','인터넷지원서비스 개통관리지원',20,'20','정보통신','2','통신기술','3','통신서비스','14','인터넷지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031501_19v2','부가통신응용중계서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031502_19v2','부가통신응용중계서비스 설계',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031503_19v2','부가통신응용중계서비스 구현',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031504_19v2','부가통신응용중계서비스 영업관리',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031505_19v2','부가통신응용중계서비스 개통',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031506_19v2','부가통신응용중계서비스 모니터링',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031507_19v2','부가통신응용중계서비스 유지보수',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031508_19v2','부가통신응용중계서비스 인프라관리',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031509_19v2','부가통신응용중계서비스 고객서비스',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031510_19v2','부가통신응용중계서비스 교육',20,'20','정보통신','2','통신기술','3','통신서비스','15','부가통신응용중계서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031601_19v2','서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','16','특수부가통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031602_19v2','서비스 마케팅 계획',20,'20','정보통신','2','통신기술','3','통신서비스','16','특수부가통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031603_19v2','서비스 체계관리',20,'20','정보통신','2','통신기술','3','통신서비스','16','특수부가통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031604_19v2','서비스 개발',20,'20','정보통신','2','통신기술','3','통신서비스','16','특수부가통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031605_19v2','서비스 설치',20,'20','정보통신','2','통신기술','3','통신서비스','16','특수부가통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031606_19v2','서비스 시험',20,'20','정보통신','2','통신기술','3','통신서비스','16','특수부가통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031607_19v2','서비스 개통',20,'20','정보통신','2','통신기술','3','통신서비스','16','특수부가통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031608_19v2','서비스 운용',20,'20','정보통신','2','통신기술','3','통신서비스','16','특수부가통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031609_19v2','시스템 운영',20,'20','정보통신','2','통신기술','3','통신서비스','16','특수부가통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031701_13v1','무선데이터통신서비스 기획',20,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031702_13v1','무선데이터통신서비스 마케팅 계획',20,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031703_13v1','무선데이터통신서비스 시스템 개발',20,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031704_13v1','무선데이터통신서비스 시스템 구매',20,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031705_13v1','무선데이터통신서비스 시스템 시공',20,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031706_13v1','무선데이터통신서비스 시스템 운용',20,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031707_13v1','무선데이터통신서비스 시스템 유지보수',20,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031708_16v2','무선데이터통신서비스 시스템 품질관리',40,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031709_13v1','무선데이터통신서비스 시스템 교육훈련',20,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031710_13v1','무선데이터통신서비스 시스템 보안',20,'20','정보통신','2','통신기술','3','통신서비스','17','무선데이터통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031801_16v1','디지털비지니스지원서비스 플랫폼 기획',40,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031802_16v1','디지털비지니스지원서비스 플랫폼 설계',40,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031803_16v1','디지털비지니스지원서비스 플랫폼 구성',30,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031804_16v1','디지털비지니스지원서비스 플랫폼 운용관리',30,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031805_16v1','디지털비지니스지원서비스 플랫폼 보안관리',35,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031806_16v1','디지털비지니스지원서비스 환경 분석',28,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031807_16v1','디지털비지니스지원서비스 고객 영업',36,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031808_16v1','디지털비지니스지원서비스 미디어 분석',30,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031809_16v1','디지털비지니스지원서비스 예산 전략수립',20,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031810_16v1','디지털비지니스지원서비스 미디어 전략수립',30,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031811_16v1','디지털비지니스지원서비스 제작',35,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031812_16v1','디지털비지니스지원서비스 운영',30,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031813_16v1','디지털비지니스지원서비스 확산 전략',20,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031814_16v1','디지털비지니스지원서비스 효과 분석',20,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031815_16v1','디지털비지니스지원서비스 사후관리',30,'20','정보통신','2','통신기술','3','통신서비스','18','디지털비즈니스지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031901_17v1','실감형통신서비스 기획',90,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031902_17v1','실감형통신서비스 사업관리',45,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031903_17v1','실감형통신서비스 설계',60,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031904_17v1','실감형통신서비스 구축',60,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031905_17v1','실감형통신서비스 운용',45,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031906_17v1','실감형통신서비스 보안관리',60,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031907_17v1','실감형통신서비스 품질관리',45,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031908_17v1','실감형통신서비스 유지보수',45,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031909_17v1','실감형통신서비스 고객관리',45,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002031910_17v1','실감형통신서비스 단말기 관리',45,'20','정보통신','2','통신기술','3','통신서비스','19','실감형통신서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040102_22v2','가상현실 시스템 설계',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040104_22v2','영상 소스 후반 작업',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040107_22v2','오디오 소스 후반 작업',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040108_22v2','가상현실 응용프로그래밍',60,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040109_22v2','네트워크 프로그래밍',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040110_22v2','가상현실 콘텐츠 배포',30,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040111_22v1','가상현실 콘텐츠 UI/UX 시스템 기획',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040112_22v2','가상현실 콘텐츠 제작관리',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040113_22v2','가상현실 콘텐츠 기획',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040114_22v2','CG 소스 후반 작업',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','1','가상현실콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040201_22v2','실감콘텐츠 촬영 기획',30,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','2','실감콘텐츠촬영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040203_22v2','실감콘텐츠 촬영 디자인',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','2','실감콘텐츠촬영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040204_22v2','실감콘텐츠 촬영계획 수립',30,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','2','실감콘텐츠촬영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040205_22v2','실감콘텐츠 촬영장비 운용',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','2','실감콘텐츠촬영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040206_22v2','포토그래매트리 촬영',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','2','실감콘텐츠촬영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040207_22v2','레이저스캔',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','2','실감콘텐츠촬영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040208_22v2','360도 VR 촬영',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','2','실감콘텐츠촬영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040210_22v2','실감콘텐츠 최적화',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','2','실감콘텐츠촬영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040301_22v2','증강현실 콘텐츠 기획',30,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','3','증강현실(AR)콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040302_22v2','증강현실 UI/UX 설계',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','3','증강현실(AR)콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040306_22v2','증강현실 제작 리소스 최적화',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','3','증강현실(AR)콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040307_22v2','증강현실 콘텐츠 개발',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','3','증강현실(AR)콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040308_22v2','증강현실 콘텐츠 서버 구축',30,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','3','증강현실(AR)콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040309_22v2','증강현실 콘텐츠 데이터 관리',30,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','3','증강현실(AR)콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040310_22v1','증강현실 제작 리소스 개발',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','3','증강현실(AR)콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2002040311_22v1','증강현실 실시간 서비스',45,'20','정보통신','2','통신기술','4','실감형콘텐츠제작','3','증강현실(AR)콘텐츠제작');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010101_14v1','중계방송기획',30,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010102_14v1','중계방송시스템구축',60,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003010103_14v1','중계전송망운용',60,'20','정보통신','3','방송기술','1','방송제작기술','1','중계방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020410_17v2','송출시스템운용_PP',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020411_17v2','방송시스템관리_PP',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020412_17v2','방송시스템기획_SO',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020413_17v2','방송시스템구축_SO',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020414_17v2','방송시스템관제_SO',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020415_17v2','단말기개발기획_SO',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020416_17v2','단말기개발검증_SO',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020417_17v2','인터넷 네트워크 기획_SO',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020418_17v2','인터넷 네트워크 구축_SO',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020419_17v2','인터넷 네트워크 관제_SO',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020420_17v2','전송선로설비구축_SO',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020421_17v2','전송선로설비운용_SO',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020422_17v2','전송선로설비자재관리_SO',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020423_17v2','가입자 단말기 설치 및 철거_SO',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020424_17v2','가입자 단말기 A/S_SO',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','4','케이블방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020501_14v1','인터넷멀티미디어방송 기술기획',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020502_14v1','인터넷멀티미디어방송 설계구축',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020503_16v2','인터넷멀티미디어방송 실시간채널운용',45,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020504_16v2','인터넷멀티미디어방송 VOD운용',30,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020505_14v1','인터넷멀티미디어방송 CDN운용',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020506_16v2','인터넷멀티미디어방송 양방향 데이터서비스운용',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020507_16v2','인터넷멀티미디어방송 방송네트워크운용',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020508_14v1','인터넷멀티미디어방송 방송정보운용',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020509_16v2','인터넷멀티미디어방송 HeadEnd시스템관리',50,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020510_14v1','인터넷멀티미디어방송 CAS/DRM관리',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020511_14v1','인터넷멀티미디어방송 광고운용',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020512_14v1','인터넷멀티미디어방송 단말기개발',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020513_14v1','인터넷멀티미디어방송 단말기관리',40,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003020514_14v1','인터넷멀티미디어방송 응용서비스개발',60,'20','정보통신','3','방송기술','2','방송플랫폼기술','5','인터넷멀티미디어방송');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030101_17v2','유무선 통합서비스 기획',30,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030102_17v2','유무선 통합시스템 설계',60,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030103_17v2','유무선 통합시스템 구축',30,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030104_17v2','유무선 통합서비스 콘텐츠 개발',30,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030105_17v2','유무선 통합망 운용',30,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030106_17v2','유무선 통합망 관리',30,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030107_17v2','중계분배 시스템 운용',30,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030108_17v2','서비스 단말기기 관리',30,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030109_17v2','서비스 단말기기 응용서비스 관리',30,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030110_17v2','유무선 통합시스템 유지보수',30,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030111_17v2','유무선 통합시스템 정보보안체계 관리',60,'20','정보통신','3','방송기술','3','방송서비스','1','유무선통합서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030201_22v2','방송 기술기획',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030203_22v3','방송제작시스템 운용',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030204_22v2','방송편집 시스템 운용',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030205_22v2','영상 그래픽 시스템 운용',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030206_22v3','저장 및 콘텐츠 관리',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030207_22v3','송출시스템 운용',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030208_22v3','송신시스템 운용(RF/IPTV/CABLE/위성)',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030209_22v3','신호품질관리',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030210_22v2','방송시스템 유지보수',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030212_22v3','방송시스템 구축',45,'20','정보통신','3','방송기술','3','방송서비스','2','방송시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030301_22v2','정보시스템 운영기획 수립',45,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030303_13v1','제작지원 정보시스템 운영',30,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030304_22v3','영상편집 시스템 운영',45,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030305_22v3','음향편집 시스템 운영',45,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030306_13v1','송출 정보시스템 운영',30,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030307_13v1','송신 정보시스템 운영',30,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030308_22v2','콘텐츠 저장 분배 시스템 운영',30,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030309_22v3','미디어자산관리 시스템 운영',45,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030310_22v2','네트워크 운영',30,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030311_22v2','서버/스토리지 시스템 관리',45,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030312_22v2','데이터베이스 시스템 관리',45,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030313_22v2','정보시스템 보안관리',45,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030314_22v3','정보시스템 요구분석',30,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030315_22v3','정보시스템 설계구축',30,'20','정보통신','3','방송기술','3','방송서비스','3','정보시스템운영');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030401_13v1','기술 기획',50,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030402_13v1','기술 관리',50,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030403_13v1','방송기술 연구개발',190,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030404_13v1','제작 지원',100,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030406_13v1','중계 지원',100,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030407_13v1','송출 지원',100,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030408_13v1','방송 인프라스트럭처 구축',100,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030409_13v1','방송장비 품질 관리',100,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030410_13v1','방송망 관리',100,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030411_16v2','IT기반 방송시스템 운용',40,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030412_16v2','인터넷서비스 플랫폼 운용',40,'20','정보통신','3','방송기술','3','방송서비스','4','방송기술지원서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030501_17v2','사업 계획 수립',120,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030502_17v2','시공 계획',120,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030503_17v2','자료 조사',150,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030504_17v2','시스템 설계',280,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030505_17v2','장비 구매',120,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030506_17v2','시공 관리',160,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030507_17v2','준공 검수',120,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030508_17v2','시스템 운용',320,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030509_17v2','유지보수',160,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030510_17v2','품질관리',120,'20','정보통신','3','방송기술','3','방송서비스','5','방송장비설치유지보수');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030601_19v1','소셜미디어 기획',30,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030602_19v1','소셜미디어 영상·음향제작',45,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030603_19v1','소셜미디어 그래픽 제작',45,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030604_19v1','소셜미디어 라이브(생방송)운용',45,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030605_19v1','소셜미디어 채널 운영',45,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030606_19v1','소셜미디어 콘텐츠 분석',30,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030607_19v1','소셜미디어 마케팅',30,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030608_19v1','소셜미디어 시스템 기획',45,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030609_19v1','소셜미디어 시스템 설계·구축',45,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030610_19v1','소셜미디어 시스템 운용',45,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
Insert into C##LMS.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,BASIC_TIME,FIRST_CATEGORY,FIRST_NAME,SECOND_CATEGORY,SECOND_NAME,THIRD_CATEGORY,THIRD_NAME,FOURTH_CATEGORY,FOURTH_NAME) values ('2003030611_19v1','소셜미디어 윤리 준수',15,'20','정보통신','3','방송기술','3','방송서비스','6','소셜미디어방송서비스');
REM INSERTING into C##LMS.SURVEY
SET DEFINE OFF;
Insert into C##LMS.SURVEY (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,SURVEY_DATE,SURVEY1,SURVEY2,SURVEY3,SURVEY4,SURVEY5) values (2,'중간 설문','교사',to_date('23/10/26','RR/MM/DD'),'잘 가르치시나요?','성실한가요?','도움이 되나요?','성격이 좋나요?','다른 사람에게 추천 의향이 있나요?');
Insert into C##LMS.SURVEY (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,SURVEY_DATE,SURVEY1,SURVEY2,SURVEY3,SURVEY4,SURVEY5) values (2,'중간 설문','기타',to_date('23/10/26','RR/MM/DD'),'밥은 잘나와요?','잠자기는 좋나요?','강의실 온도가 적정한가요?','흡연장은 좋나요?','비품이 잘 구비되어 있나요?');
Insert into C##LMS.SURVEY (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,SURVEY_DATE,SURVEY1,SURVEY2,SURVEY3,SURVEY4,SURVEY5) values (3,'사후 설문','시설',to_date('23/10/27','RR/MM/DD'),'사후 1','사후 2','사후 3','사후 4','사후 5');
Insert into C##LMS.SURVEY (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,SURVEY_DATE,SURVEY1,SURVEY2,SURVEY3,SURVEY4,SURVEY5) values (3,'사후 설문','교사',to_date('23/10/27','RR/MM/DD'),'교사 1','교사 2','교사 3','교사 4','교사 5');
Insert into C##LMS.SURVEY (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,SURVEY_DATE,SURVEY1,SURVEY2,SURVEY3,SURVEY4,SURVEY5) values (3,'사후 설문','기타',to_date('23/10/27','RR/MM/DD'),'기타 1','기타 2','기타 3','기타 4','기타 5');
Insert into C##LMS.SURVEY (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,SURVEY_DATE,SURVEY1,SURVEY2,SURVEY3,SURVEY4,SURVEY5) values (2,'중간 설문','시설',to_date('23/10/26','RR/MM/DD'),'화장실은 좋아요?','컴퓨터는 좋아요?','모니터는 좋아요?','키보드는 좋아요?','멤버는 좋아요?');
Insert into C##LMS.SURVEY (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,SURVEY_DATE,SURVEY1,SURVEY2,SURVEY3,SURVEY4,SURVEY5) values (1,'사전 설문','교사',to_date('23/10/24','RR/MM/DD'),'지각은 없나요?','잘가르치나요?','시간을 잘키시나요?','열정적인가요?','성실한가요?');
Insert into C##LMS.SURVEY (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,SURVEY_DATE,SURVEY1,SURVEY2,SURVEY3,SURVEY4,SURVEY5) values (1,'사전 설문','기타',to_date('23/10/24','RR/MM/DD'),'집에가고싶어요?','언제가고싶어요?','왜가고싶어요?','밥먹었어요?','뭐먹었어요?');
Insert into C##LMS.SURVEY (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,SURVEY_DATE,SURVEY1,SURVEY2,SURVEY3,SURVEY4,SURVEY5) values (1,'사전 설문','시설',to_date('23/10/24','RR/MM/DD'),'화장실은 좋나요?','계단은 좋나요?','엘베는 좋나요?','책상은 좋나요?','모니터는 좋나요?');
REM INSERTING into C##LMS.SURVEYDIS
SET DEFINE OFF;
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'90','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'97','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'94','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'92','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'102','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'93','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'103','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'81','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'104','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'89','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'96','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'100','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'105','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'86','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'88','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'87','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'91','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'83','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'82','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'99','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'101','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'85','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'95','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'98','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (2,'84','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'93','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'103','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'90','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'97','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'94','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'92','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'102','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'81','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'104','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'89','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'96','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'100','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'105','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'86','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'88','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'87','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'91','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'83','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'82','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'99','84','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'101','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'85','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'95','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'98','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (3,'84','84','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'40','35','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'63','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'67','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'60','35','Y');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'48','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'74','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'64','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'69','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'70','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'66','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'72','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'76','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'62','35','N');
Insert into C##LMS.SURVEYDIS (SURVEY_NO,STUDENT_CODE,CLASS_CODE,STATUS) values (1,'77','35','N');
REM INSERTING into C##LMS.SURVEYRESULT
SET DEFINE OFF;
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','3','2','5','5','5','84','103');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','5','4','5','4','5','84','103');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','5','4','5','4','5','84','103');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','4','4','3','4','5','84','90');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','5','4','3','4','4','84','90');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','5','4','3','4','4','84','90');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','4','2','2','2','84','97');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','3','5','5','5','4','84','97');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','3','5','5','5','4','84','97');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','4','4','5','5','4','84','102');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','3','3','4','4','5','84','102');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','3','3','4','4','5','84','102');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','4','4','5','2','4','84','81');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','4','4','5','5','4','84','81');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','4','4','5','5','4','84','81');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','3','3','4','4','5','84','104');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','4','4','3','4','5','84','104');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','4','4','3','4','5','84','104');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','5','5','4','5','84','96');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','4','3','5','4','4','84','96');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','4','3','5','4','4','84','96');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','4','4','5','5','3','84','100');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','4','4','5','4','3','84','100');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','4','4','5','4','3','84','100');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','4','4','5','5','3','84','86');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','4','4','5','5','4','84','86');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','4','4','5','5','4','84','86');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','5','3','3','4','84','91');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','3','3','5','4','5','84','91');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','3','3','5','4','5','84','91');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','5','5','3','4','84','82');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','5','4','3','4','5','84','82');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','5','4','3','4','5','84','82');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','5','4','2','3','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','3','3','2','1','3','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','3','3','2','1','3','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','4','1','3','2','2','84','101');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','3','3','4','4','4','84','101');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','3','3','4','4','4','84','101');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','5','5','3','2','84','95');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','3','3','4','5','2','84','95');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','3','3','4','5','2','84','95');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (3,'사후 설문','시설','4','4','4','3','3','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (3,'사후 설문','교사','4','4','5','5','4','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (3,'사후 설문','기타','4','4','5','5','4','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (3,'사후 설문','시설','4','4','3','4','4','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (3,'사후 설문','교사','5','5','5','4','2','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (3,'사후 설문','기타','5','5','5','4','2','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','2','3','2','3','4','84','93');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','4','4','3','2','5','84','93');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','4','4','3','2','5','84','93');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','2','3','3','2','5','84','92');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','5','5','4','3','4','84','92');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','5','5','4','3','4','84','92');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','4','4','5','5','2','84','89');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','2','2','1','2','2','84','89');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','2','2','1','2','2','84','89');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','4','4','3','2','84','88');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','3','3','4','5','2','84','88');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','3','3','4','5','2','84','88');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','5','4','3','4','84','87');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','5','5','3','4','4','84','87');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','5','5','3','4','4','84','87');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','4','4','5','3','3','84','83');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','5','4','5','5','3','84','83');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','5','4','5','5','3','84','83');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','5','5','4','3','84','85');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','3','3','5','5','5','84','85');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','3','3','5','5','5','84','85');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','5','4','3','2','84','98');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','4','4','3','5','5','84','98');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','4','4','3','5','5','84','98');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','5','5','5','3','4','84','84');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','4','4','5','5','4','84','84');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','4','4','5','5','4','84','84');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (1,'사전 설문','기타','3','2','1','2','2','35','40');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (1,'사전 설문','시설','4','4','5','5','4','35','60');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (1,'사전 설문','교사','5','5','4','5','5','35','60');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (1,'사전 설문','기타','5','5','4','5','5','35','60');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (1,'사전 설문','시설','1','2','2','2','2','35','40');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (1,'사전 설문','교사','3','2','1','2','2','35','40');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','시설','2','2','3','3','4','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','교사','5','5','4','4','5','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (2,'중간 설문','기타','5','5','4','4','5','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (3,'사후 설문','시설','5','5','5','5','5','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (3,'사후 설문','교사','5','5','5','5','5','84','99');
Insert into C##LMS.SURVEYRESULT (SURVEY_NO,SURVEY_CATE,SURVEY_TYPE,ANSWER1,ANSWER2,ANSWER3,ANSWER4,ANSWER5,CLASS_CODE,STUDENT_CODE) values (3,'사후 설문','기타','5','5','5','5','5','84','99');
REM INSERTING into C##LMS.S_TEST
SET DEFINE OFF;
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('79',0,to_date('23/10/23','RR/MM/DD'),'wef','N',1,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('77',0,to_date('23/10/23','RR/MM/DD'),'2','N',1,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',4,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('75',100,to_date('23/10/23','RR/MM/DD'),'11','Y',1,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',8,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','N',12,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','N',14,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'3','N',3,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'2','N',4,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'2','N',6,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'3','N',7,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'2','N',8,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'4','N',9,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'1','N',10,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'4','N',12,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'2','N',13,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'null','N',14,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'4','N',15,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'1','N',16,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',35,to_date('23/10/27','RR/MM/DD'),'1','N',20,'103','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'LEFT JOIN 은 왼쪽에 있는 테이블의 데이터 전체와 오른쪽에 있는 테이블과 왼쪽테이블의 교차되는 행만 출력됨. 라이트 조인은 반대','Y',1,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'해빙절은 그룹바이에서 사용하는 거고 웨어절은 select 문에서 사용하는거임','Y',2,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'유니온은 교차되는 데이터를 하는거고 유니온 all 은 양쪽 전체 데이터임','N',3,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'프라이머리키는 그 테이블에서 유일하게 구분할 수 있는 유니크값이고 포린키는 다른테이블의 컬럼을 참조해오는 값임 유니크가 아니여도 됨','Y',4,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'라이크는 그 값이 들어간 걸 찾는거고 = 은 완전히 일치하는걸 찾는거임','Y',5,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'낫널은 그 컬럼에 null 을 넣을 수 없는거임','Y',6,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'인덱스는 순서를 먹여서 인덱스로 구분을 유일한 행을 만들어 인덱스로 구분할 수 있도록 하는것','Y',7,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'truncate 는 중복 구문 삭제 용어고 딜리트는 걍 지워버리는거임','Y',8,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'알빠노','N',9,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',70,to_date('23/10/27','RR/MM/DD'),'몰라 ㅅㅂ','N',10,'84','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',4,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','N',8,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',12,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','N',14,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'87','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',4,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','N',8,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',12,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','N',14,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'91','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',4,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','N',8,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',12,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','Y',14,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'90','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',4,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',8,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','N',12,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'1','Y',14,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',95,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'93','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('76',100,to_date('23/10/23','RR/MM/DD'),'2','Y',1,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','N',4,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','N',8,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','N',12,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','N',14,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'85','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',4,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',8,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','N',12,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','N',14,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'82','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',4,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','N',8,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',12,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','N',14,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',90,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'99','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',4,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','N',8,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','N',9,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','N',10,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','N',12,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',14,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'88','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','N',4,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','N',8,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','N',12,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','Y',14,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'1','N',16,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',80,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'94','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'2','Y',3,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','Y',4,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'4','Y',5,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','Y',6,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'1','Y',7,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'1','N',8,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'2','Y',9,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','Y',10,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','Y',11,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'1','N',12,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','Y',1,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'1','Y',2,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'1','Y',13,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','N',14,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','Y',15,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','Y',16,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','Y',17,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'2','Y',18,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'3','Y',19,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('102',85,to_date('23/10/27','RR/MM/DD'),'4','Y',20,'98','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),'sex',null,1,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),null,null,2,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),null,null,3,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),'sex',null,4,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),null,null,5,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),null,null,6,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),'sex',null,7,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),null,null,8,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),null,null,9,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('103',null,to_date('23/10/27','RR/MM/DD'),null,null,10,'99',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('83',0,to_date('23/10/26','RR/MM/DD'),'2','N',1,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('83',0,to_date('23/10/26','RR/MM/DD'),'3','N',2,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('83',0,to_date('23/10/26','RR/MM/DD'),'4','N',3,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('91',null,to_date('23/10/26','RR/MM/DD'),'ㅇㅇ',null,1,'40',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('91',null,to_date('23/10/26','RR/MM/DD'),'ㅋㅋ',null,2,'40',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('91',null,to_date('23/10/26','RR/MM/DD'),'ㅈㅈ',null,3,'40',null);
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'3','N',1,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'2','Y',2,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'1','N',3,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'3','N',4,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'4','N',5,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'2','Y',6,'40','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'2','N',1,'60','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'1','N',2,'60','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'1','N',3,'60','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'3','N',4,'60','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'3','Y',5,'60','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'3','N',6,'60','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'2','N',1,'63','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'2','Y',2,'63','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'2','N',3,'63','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'2','N',4,'63','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'2','N',5,'63','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',35,to_date('23/10/26','RR/MM/DD'),'2','Y',6,'63','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'3','N',1,'62','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'4','N',2,'62','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'3','Y',3,'62','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'4','N',4,'62','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'2','N',5,'62','Y');
Insert into C##LMS.S_TEST (TEST_CODE,SCORE_SUM,TEST_DATE,TEST_A,TEST_YN,TEST_NO,STUDENT_CODE,TEST_OK) values ('88',20,to_date('23/10/26','RR/MM/DD'),'4','N',6,'62','Y');
REM INSERTING into C##LMS.TEACHER
SET DEFINE OFF;
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('82','김현쑥213','9401524-2012424','gd@fm.com','T82','$2a$10$lErlwYgbk.miRZ.0835use7ZQ1QobPBQ.nVM6wiw20oP6LcWvbQES','20231025182016.jpg',null,null,null,to_date('23/10/25','RR/MM/DD'),'Y','T','010-4545-9999',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('85','윤차주','580215-2015324','yoon@naver.com','T85','$2a$10$RaOv1dNskF5ICiHd9vlsoOAcCbaHDXWbf6l8K/okSC9/G4724OBwe',null,null,null,null,to_date('23/10/26','RR/MM/DD'),'Y','T','010-4384-0210','88');
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('48','나루토','905153-1813212','naruto@naver.com','T48','$2a$10$HhNNj4wuW5DM5h5mZ9Bq8O4AlRBBJ8Abq07dHv22mf82cWRfL9eMu',null,null,null,null,to_date('23/10/20','RR/MM/DD'),'Y','T','010-1234-3810','35');
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('49','나루토','905153-1813212','naruto@naver.com','T49','1234',null,null,null,null,to_date('23/10/20','RR/MM/DD'),'Y','T','010-1234-3810',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('75','qtqtqt','9401524-2012423','gd@fm.com','T75','$2a$10$X3SE.nmKlzBbINdMPPzumeYGNxfQeCyVKlDS9yk4pV9gniVLBX5AG','20231023213140.jpg','20231023213140.jpg',null,null,to_date('23/10/23','RR/MM/DD'),'Y','T','010-4545-9999',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('68','권나라','912012-4357481','kwon@naver.com','T68','$2a$10$f81GRVL7ZfOkGl89XlCkZO4G2m7Xla0gxqqBse..fkM8Po78Wl4Za','20231027101300.png',null,null,null,to_date('23/10/23','RR/MM/DD'),'Y','T','010-1234-5465','85');
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('73','시부엉','991111-1234567','1818@naver.com','T73','$2a$10$DBVfoguHE9Xg4NzOfoDrBuBfg54Y5kdPr.SqG9WoJPW9LCrk/M.mq','20231023211312.jpg','20231023211312.jpg','20231023211312.jpg','20231023211312.jpg',to_date('23/10/23','RR/MM/DD'),'Y','T','010-2828-1818',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('74','시부엉2','991111-1234567','1818@naver.com','T74','$2a$10$dl4lYPtGNejgewf760V.n./BFb6lTsyRf10pZ4qhh7eXCKw3t8CGi','20231023212130.jpg','20231023212130.jpg','20231023212130.jpg','20231023212130.jpg',to_date('23/10/23','RR/MM/DD'),'Y','T','010-2828-1818',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('80','이선생','502124-1021243','123@naver.com','T80','$2a$10$TormBPYPAhyOTKK.r1giQO/dBNW8Tm3.1Pot9/iOSkgJJ4AF./1Bm','20231025181349.png',null,null,null,to_date('23/10/25','RR/MM/DD'),'Y','T','010-1234-5678',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('81','테스트','940225-1021234','cwr@naver.com','T81','$2a$10$jZmf.BtBecSYRAeRj.Acte1JFDQUZVCDL4lvpNcAPZ4TgXBU.1QsG','20231025181826.png','20231025181826.png',null,null,to_date('23/10/25','RR/MM/DD'),'Y','T','010-2212-4234',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('66','꿀밤','901324-1233457','ggul@naver.com','T66','$2a$10$W1zK.YDSVFjd37BvcwUBQ.6WZngT2wmovsbZZNvgW8c3ofTjjGxF.',null,null,null,null,to_date('23/10/21','RR/MM/DD'),'Y','T','010-4351-2013',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('67','꿀밤','901324-1233457','ggul@naver.com','T67','$2a$10$ldgWkHJpzXw2CCcH4wDyjOnOsiyI0ff0CKx5..3NbrK9Hlz2JsVvu',null,null,null,null,to_date('23/10/21','RR/MM/DD'),'Y','T','010-4351-2013',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('69','이','501021-2012245','okjji@hanmail.com','T69','$2a$10$djtro/YyJgdbdVeqnAUoyOHRjSpQetdJIsX7H1s0sWFRSYkJqkdxW','20231023142627.png',null,null,null,to_date('23/10/23','RR/MM/DD'),'Y','T','010-0513-5651',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('37','고양씨','123456-1234567','zzfd@fm.com','T37','$2a$10$0hIGxRILhDWLN0XW6.jZlO.J3Q93/HdqyV5isWjtgt8Fsi5faA6KC','20231026160649.jpg','20231020115832.jpg','20231020115832.jpg','20231020115832.jpg',to_date('23/10/20','RR/MM/DD'),'Y','T','010-2828-2828',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('38','나교사','920225-1021112','nagyyo@naver.com','T38','$2a$10$pgQ35VtlABl.nD4BPNlAI.NbHac1GyhtZtgBpSR3PNajeJCoXY5N6','20231027141142.jpg',null,null,null,to_date('23/10/20','RR/MM/DD'),'Y','T','010-1234-3123','38');
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('39','HSTEST','123456-1234567','abst@ract.123','T39','$2a$10$9nXCCC7wBIjyF5Fx6oNRd.5FWEAjt3mljCqtdH1qF6W67a2ijHVzC',null,null,null,null,to_date('23/10/20','RR/MM/DD'),'Y','T','010-0101-0101',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('40','HSTEST','123456-1234567','abst@ract.123','T40','$2a$10$6CWrmaC8keMxdAaiNO8BG.PkQVNsBfxXTLtLewKxP/ovYLo5ktLPW',null,null,null,null,to_date('23/10/20','RR/MM/DD'),'Y','T','010-0101-0101',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('71','팔팔이','130804-1094532','882@naver.com','T71','$2a$10$r9s4y9cvb4LKs/Cj81TMKuesjHTIAh63vMmFL3LZNGSUKu1eZuNV6',null,null,null,null,to_date('23/10/23','RR/MM/DD'),'Y','T','010-9439-9001','86');
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('72','윤차주','780845-4384511','yoon@naver.com','T72','$2a$10$MY4Q4dgF8mqVa8iVYQ6XpuhYJQ9srJ3Wi7wGeu170jCqObIYxGy0S',null,null,null,null,to_date('23/10/23','RR/MM/DD'),'Y','T','010-4384-0210','84');
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('76','ddd','123456-1234567','gd@fm.com','T76','$2a$10$gxdjp2tjSdsNQPDmzzFOge/ZuRsP9z8mTD1830IKkUjg1sYnrW1u6','20231024121845.jpg',null,null,null,to_date('23/10/24','RR/MM/DD'),'Y','T','010-4545-9999',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('78','김옥지','9201025-1021124','cwr942@naver.com','T78','$2a$10$fETP2EjuQmFepkYzQ7KN2.NQ3w9rDl1ohx6FwoHQ7yCsw/5nkDakG','E:\lms_git\lms\lms\src\main\webapp\resources\photo\20231025161105.jpg','E:\lms_git\lms\lms\src\main\webapp\resources\cv\null','E:\lms_git\lms\lms\src\main\webapp\resources\certificate\null','E:\lms_git\lms\lms\src\main\webapp\resources\signAtureimg\null',to_date('23/10/25','RR/MM/DD'),'Y','T','010-0513-5651',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('79','최선생','940225-1024412','cwr942@naver.com','T79','$2a$10$X1G1zGGTtRyk15h1Tbtz/euge0p3u11vx8qtbS4f6s.FvNKNMARxe','E:\lms_git\lms\lms\src\main\webapp\resources\photo\20231025180758.jpg','E:\lms_git\lms\lms\src\main\webapp\resources\cv\null','E:\lms_git\lms\lms\src\main\webapp\resources\certificate\null','E:\lms_git\lms\lms\src\main\webapp\resources\signAtureimg\20231025180758.jpg',to_date('23/10/25','RR/MM/DD'),'Y','T','010-1212-1124',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('83','김딸기','901212-1025252','qlqlcmrl@naver.com','T83','$2a$10$lwojfJt3xlEkGAhI8hkZ/eUxnZcBaqDT8piaeW0E3SpxzCUi55OS6','20231025190215.jpg',null,null,null,to_date('23/10/25','RR/MM/DD'),'Y','T','010-8522-4652',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('84','김김2','950123-1234567','qlqlcmrl@naver.com','T84','$2a$10$9oL/xmj70T/p8kiuOFgnFucr9cb/kp6I6O89ep8OCsNGPIV0NIRaS','20231026171902.jpg','20231026155836.jpg','20231026155836.jpg','20231026155836.jpg',to_date('23/10/26','RR/MM/DD'),'Y','T','010-6888-6888',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('70','김현쑥2','123456-1234567','gd@fm.com','T70','$2a$10$w8IhNFK8dpD9PoHdHkeh4OXoE.sPBH5D51pi/V32GVPpqBzc.kZbS','20231027143827.jpeg','20231023144227.jpg','20231023144227.jpg','20231023144227.jpg',to_date('23/10/23','RR/MM/DD'),'Y','T','010-1234-1234',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('77','이','501021-2012245','okjji@hanmail.com','T77','$2a$10$7cifKBIpiWec0JTXe/Q74u6xzs.hSRyJgv1Dlwy9ZBCHdtG4A1hOC','E:\lms_git\lms\lms\src\main\webapp\resources\photo\20231025160820.jpg','E:\lms_git\lms\lms\src\main\webapp\resources\cv\null','E:\lms_git\lms\lms\src\main\webapp\resources\certificate\null','E:\lms_git\lms\lms\src\main\webapp\resources\signAtureimg\null',to_date('23/10/25','RR/MM/DD'),'Y','T','010-0513-5651',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('86','김태연','950417-1010101','okjji@hanmail.com','T86','$2a$10$teJRfoivMfMdYa9vToKvSuUWKNBdGzpqHctrSr09wIkQQ1x/qXeda','20231027101544.jpg','20231027101544.jpg','20231027101544.xlsx','20231027101544.jpg',to_date('23/10/27','RR/MM/DD'),'Y','T','010-0513-5651',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('87','테스트','940212-1204214','w123@naver.com','T87','$2a$10$fIG0oeYQTJ1nE/wBCLn/2e4DNrLjBQDDweDryGBYrVRLLDOq8f5Fq',null,null,null,null,to_date('23/10/27','RR/MM/DD'),'Y','T','010-2512-4342',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('88','테스트','9401524-2012424','cwr942@naver.com','T88','$2a$10$oD/YxuNOe3mtnCtnwC9/k.Ub128thO3dpR3KX/FYiqevX6BWFb/0.','20231027140925.jpg',null,null,null,to_date('23/10/27','RR/MM/DD'),'Y','T','010-0513-5651',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('89','나교사2','501021-2012245','cwr942@naver.com','T89','$2a$10$/usSVSshQlM9IDLIO.OWbOEHaZgAHDvpbrbJjcQsJRA0cYPHm5THS','20231027143908.jpg','20231027143908.jpg',null,null,to_date('23/10/27','RR/MM/DD'),'Y','T','010-0513-5651',null);
Insert into C##LMS.TEACHER (PROF_CODE,NAME,RESIDENT_NUMBER,EMAIL,ID,PWD,PHOTO,CV,CERTIFICATE,SIGNATURE_IMG,MODIFIED_DATE,INACTIVE_OR_NOT,GRADE,PHONE,CLASS_CODE) values ('33','영자야','123456-1234567','gd@fm.com','admin','$2a$10$7mi/x.J0s13vi..7I9UM0ucZV85PEL4r76gv64zyeQLYSzEiUubda',null,null,null,null,to_date('23/10/20','RR/MM/DD'),'Y','A','010-4545-9999',null);
REM INSERTING into C##LMS.TEST
SET DEFINE OFF;
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('84',1,'dfd','df','df','df','df','1',23,'콘텐츠 기획 검토하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('84',3,'fewa','wefas','wef','wef','wef','3',74,'콘텐츠 서비스 운영 기획하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('84',2,'sfd','sdf','sdf','sdf','sdf','3',3,'콘텐츠 기획 검토하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('88',1,'안녕하세요','thrd','htdr','thdr','tdhr','4',5,'플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('108',1,'weqr',null,null,null,null,'ewr',3,'물리 데이터저장소 설계하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('108',3,'weq',null,null,null,null,'we',94,'물리 데이터저장소 설계하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('108',2,'ewaf',null,null,null,null,'ewa',3,'데이터 조작 프로시저 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('110',1,'10','1','1','1','1','1',1,'데이터 조작 프로시저 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('110',2,'1','1','1','1','1','1',99,'데이터 조작 프로시저 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('92',1,'ㄴㅇㅁㄹ','ㄴㅇㅁㄹ','ㄴㅇㅁㄹ','ㄴㅇㄻ','ㅁㄹㄴㅇ','1',20,'데이터 조작 프로시저 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('92',3,'feaw','ewfa','ewfa','ewfa','wefa','3',20,'데이터 조작 프로시저 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('92',2,'efaw','efwa','efaw','efwa','eawf','1',20,'물리 데이터저장소 설계하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('92',4,'eafw','efwa','fewa','wefa','wafe','3',20,'논리 데이터저장소 확인하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('92',5,'aef','eafw','ewfa','ewfa','weaf','4',20,'데이터 조작 프로시저 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('94',1,'eawf','aefw','aefw','weaf','faew','1',100,'내외부 연계 모듈 구현하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('95',1,'aewf',null,null,null,null,'awef',100,'내외부 연계 모듈 구현하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('96',1,'aefw','eafw','aef','afew','ewaf','2',100,'정보시스템 이행하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('97',1,'sdfa',null,null,null,null,'sfda',100,'정보시스템 안정화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('98',1,'sfda','sdfa','sdfa','sfda','sfda','2',100,'공통 모듈 구현하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('99',1,'sdfa',null,null,null,null,'sfda',100,'공통 모듈 구현하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('100',1,'sdfa','sfda','sdfa','sdfa','sfad','2',100,'인터페이스 구현 검증하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('101',1,'sdaf',null,null,null,null,'sfad',100,'인터페이스 설계서 확인하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',1,'SELECT 명령어는 어떠한 작업을 수행하는 SQL 문장인가요?','데이터를 삭제한다.','데이터를 삽입한다.','데이터를 조회한다.','데이터를 수정한다.','3',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',2,'WHERE 절은 무엇을 수행하는데 사용됩니까?','특정 조건을 만족하는 행을 선택한다.','새로운 테이블을 생성한다.','테이블에서 모든 행을 삭제한다.','테이블의 이름을 변경한다.','1',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',3,'INNER JOIN은 어떤 작업을 수행합니까?','테이블을 삭제한다.','두 테이블에서 일치하는 행을 결합한다.','테이블에서 특정 열을 삭제한다.','테이블에 새로운 행을 삽입한다.','2',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',4,'COUNT() 함수는 어떤 값을 반환합니까?','테이블의 모든 행의 평균 값을 반환한다.','테이블의 모든 행의 합계 값을 반환한다.','테이블의 행 수를 반환한다.','테이블의 모든 행의 최대 값을 반환한다.','3',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',5,'UPDATE 명령어는 어떠한 작업을 수행하는 SQL 문장인가요?','데이터를 삭제한다.','데이터를 삽입한다.','데이터를 조회한다.','데이터를 수정한다.','4',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',6,'GROUP BY 절은 어떤 용도로 사용되나요?','테이블을 정렬한다.','테이블에서 중복된 행을 제거한다.','특정 열을 기준으로 그룹을 지어 집계 함수를 사용할 수 있도록 한다. ','테이블의 특정 열을 선택한다.','3',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',7,'ORDER BY 절은 어떤 용도로 사용되나요?','테이블을 정렬한다','테이블에서 중복된 행을 제거한다.','특정 열을 기준으로 그룹을 지어 집계 함수를 사용할 수 있도록 한다.','테이블의 특정 열을 선택한다.','1',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',8,'DELETE 명령어는 어떠한 작업을 수행하는 SQL 문장인가요?','테이블을 삭제한다.','테이블의 모든 행을 삭제한다.','테이블에서 특정 행을 삭제한다.','테이블의 특정 열을 삭제한다.','3',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',9,'DISTINCT 키워드는 어떤 용도로 사용되나요?','테이블의 모든 열을 선택한다.','테이블에서 중복된 행을 제거한다.','테이블을 정렬한다.','특정 열을 기준으로 그룹을 지어 집계 함수를 사용할 수 있도록 한다.','2',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',10,'ALTER TABLE 명령어는 어떤 작업을 수행하는 SQL 문장인가요?','테이블을 삭제한다.','테이블의 특정 열을 삭제한다.','테이블에 새로운 열을 추가하거나 기존 열을 수정한다.','테이블의 특정 열을 선택한다.','3',5,'고급 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',11,'HAVING 절은 어떤 용도로 사용되나요?','테이블을 정렬한다.','테이블에서 중복된 행을 제거한다.','그룹화된 결과에 조건을 적용한다.','테이블의 특정 열을 선택한다.','3',5,'고급 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',12,'UNION 연산자는 어떤 작업을 수행하나요?','두 개의 테이블을 결합한다.','테이블에서 중복된 행을 제거한다.','두 개의 SELECT 문의 결과를 합친다.','테이블의 특정 열을 선택한다.','3',5,'고급 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',13,'LIKE 연산자는 어떤 용도로 사용되나요?','문자열 패턴을 비교한다.','테이블을 정렬한다.','테이블에서 중복된 행을 제거한다.','특정 열을 기준으로 그룹을 지어 집계 함수를 사용할 수 있도록 한다.','1',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',14,'NULL 값은 어떤 의미를 가지나요?','값이 존재하지 않음을 나타낸다.','특정 값이 존재함을 나타낸다.','값이 비어있음을 나타낸다.','값이 잘못된 형식을 가지고 있음을 나타낸다.','1',5,'고급 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',15,'MAX() 함수는 어떤 값을 반환하나요?','특정 열의 합계 값을 반환한다.','특정 열의 평균 값을 반환한다.','특정 열의 최대 값을 반환한다.','특정 열의 중간 값을 반환한다.','3',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',16,'BETWEEN 연산자는 어떤 용도로 사용되나요?','문자열 패턴을 비교한다.','테이블을 정렬한다.','특정 열의 값이 범위 내에 있는지 확인한다.','테이블에서 중복된 행을 제거한다.','3',5,'고급 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',17,'AVG() 함수는 어떤 값을 반환하나요?','특정 열의 합계 값을 반환한다.','특정 열의 최소 값을 반환한다.','특정 열의 평균 값을 반환한다.','특정 열의 중간 값을 반환한다.','3',5,'고급 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',18,'JOIN은 어떤 작업을 수행하는데 사용되나요?','테이블을 삭제한다.','두 테이블에서 일치하는 행을 결합한다.','테이블에서 특정 열을 삭제한다.','테이블에 새로운 행을 삽입한다.','2',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',19,'INSERT INTO 명령어는 어떤 작업을 수행하는 SQL 문장인가요?','테이블을 삭제한다.','테이블의 모든 행을 삭제한다.','테이블에 새로운 행을 삽입한다.','테이블의 특정 열을 삭제한다.','3',5,'고급 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('102',20,'PRIMARY KEY는 어떤 역할을 가지나요?','테이블의 모든 열을 선택한다.','테이블을 정렬한다.','테이블에서 중복된 행을 제거한다.','테이블에서 고유한 식별자 역할을 하는 열을 설정한다.','4',5,'기본 SQL 작성하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('83',3,'SZD','SZD','SZD','SZD','SZ','1',68,'콘텐츠 서비스 운영 기획하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('83',1,'BCNVCV','CVCV','CVVC','CVF','CV','1',12,'콘텐츠 서비스 운영 기획하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('83',2,'SZD','SZD','ZSD','SZD','ZSD','1',20,'콘텐츠 서비스 운영 기획하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',3,'SQL에서 ''UNION''과 ''UNION ALL''의 차이점은 무엇인가요?',null,null,null,null,' ''UNION''은 두 SELECT 문의 결과를 합칠 때 중복된 행을 제거하지만, ''UNION ALL''은 중복된 행을 제거하지 않습니다.',10,'데이터 조회하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',1,'SQL에서 ''LEFT JOIN''과 ''RIGHT JOIN''의 차이점은 무엇인가요?',null,null,null,null,' ''LEFT JOIN''은 왼쪽 테이블의 모든 행과 오른쪽 테이블에서 일치하는 행을 반환하고, ''RIGHT JOIN''은 오른쪽 테이블의 모든 행과 왼쪽 테이블에서 일치하는 행을 반환합니다.',10,'데이터 조회하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',4,'SQL에서 ''PRIMARY KEY''와 ''FOREIGN KEY''의 주요 차이점은 무엇인가요?',null,null,null,null,'''PRIMARY KEY''는 테이블의 각 행을 고유하게 식별하는 반면, ''FOREIGN KEY''는 다른 테이블의 ''PRIMARY KEY''를 참조하여 테이블 간 관계를 설정합니다.',10,'데이터 수정하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',2,'SQL에서 ''HAVING'' 절과 ''WHERE'' 절의 차이점은 무엇인가요?',null,null,null,null,' ''WHERE'' 절은 행에 대한 조건을 적용하는 반면, ''HAVING'' 절은 그룹화된 결과에 대한 조건을 적용합니다.',10,'데이터 조회하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',5,'SQL에서 ''LIKE'' 연산자와 ''='' 연산자의 차이점은 무엇인가요?',null,null,null,null,' ''='' 연산자는 값의 정확한 일치를 비교하는 반면, ''LIKE'' 연산자는 패턴 일치를 위해 사용됩니다.',10,'데이터 수정하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',6,'SQL에서 ''NOT NULL'' 제약 조건이란 무엇인가요?',null,null,null,null,' ''NOT NULL'' 제약 조건은 특정 열에 NULL 값을 허용하지 않도록 하는 제약 조건입니다.',10,'데이터 수정하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',7,'SQL에서 ''INDEX''의 주요 목적은 무엇인가요?',null,null,null,null,' ''INDEX''의 주요 목적은 데이터 검색 성능을 향상시키는 것입니다.',10,'데이터 수정하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',8,'SQL에서 ''TRUNCATE''와 ''DELETE'' 명령어의 주요 차이점은 무엇인가요?',null,null,null,null,'''DELETE''는 테이블의 특정 행을 삭제하는 반면, ''TRUNCATE''는 테이블의 모든 행을 한 번에 삭제합니다.',10,'데이터 수정하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',9,'SQL에서 ''VIEW''는 어떤 용도로 사용되나요?',null,null,null,null,'''VIEW''는 하나 이상의 테이블에서 파생된 가상 테이블로, 복잡한 쿼리를 단순화하거나 데이터 보안을 강화하는 데 사용됩니다.',10,'데이터 조회하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('103',10,'SQL에서 ''STORED PROCEDURE''란 무엇인가요?',null,null,null,null,'''STORED PROCEDURE''는 SQL 명령어의 묶음으로, 데이터베이스 서버에 저장되어 필요할 때 호출하여 실행할 수 있습니다.',10,'데이터 수정하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('104',1,'시험생성2','1번','5번','3번','4번','2',20,'데이터 조작 프로시저 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('104',3,'ㄴㅇㄻ','ㄹㅇㄴㅁ','ㄴㅁㄹㅇ','ㄴㅇㅁㄹ','ㄴㅇㄻ','2',60,'데이터 조작 프로시저 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('104',2,'ㄴㅇㄻ','ㅇㄴㄻ','ㅇㄴㄻ','ㄴㅇㄹ','ㅇㄴㄻ','2',20,'물리 데이터저장소 설계하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('106',1,'문제2',null,null,null,null,'1번',20,'물리 데이터저장소 설계하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('106',3,'12',null,null,null,null,'12',60,'데이터 조작 프로시저 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('106',2,'20',null,null,null,null,'20',20,'논리 데이터저장소 확인하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('111',1,'1','1','1','1','1','1',1,'정보시스템 안정화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('111',2,'1','1','1','1','1','1',1,'정보시스템 안정화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('90',1,'ddd',null,null,null,null,'dd',3,'플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('90',2,'sdfa',null,null,null,null,'safd',20,'플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('90',3,'sdaf',null,null,null,null,'sdfaa',20,'플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('90',4,'sfda',null,null,null,null,'sdfa',20,'플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('90',5,'sdfa',null,null,null,null,'sdfa',20,'플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('90',6,'sadf',null,null,null,null,'sadf',17,'플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('91',1,'봉',null,null,null,null,'쥬르',98,'디바이스 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('76',1,'ㅎㅇ','zz','ss','dd','qq','2',1,'증강현실 UI/UX 시나리오 설계하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('88',2,'dsfa','fsd','sdfa','sadf','sdfa','2',20,'플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('88',3,'eafw','aefw','eawf','aewf','awef','3',20,'엔진환경 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('88',4,'waef','awef','awef','awef','ewa','1',20,'엔진환경 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('88',5,'efwa','aefw','waef','waef','waef','3',20,'엔진환경 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('74',1,'eafw',null,null,null,null,'ewfa',100,'증강현실 콘텐츠 설계하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('75',1,'aewf',null,null,null,null,'fawe',100,'증강현실 UI/UX 시나리오 설계하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('88',6,'wfae','aefw','waef','wefaa','waef','2',15,'엔진환경 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('77',1,'efwa','wefa','fweaa','wefa','wfe','3',100,'플랫폼 기반 리소스 최적화하기');
Insert into C##LMS.TEST (TEST_CODE,TEST_NO,TEST_Q,TEST_Q1,TEST_Q2,TEST_Q3,TEST_Q4,TEST_RA,TEST_SCORE,ABILITY) values ('79',1,'aef',null,null,null,null,'fewa',100,'콘텐츠 서비스 운영 기획하기');
REM INSERTING into C##LMS.T_HOMEWORK
SET DEFINE OFF;
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('34','72',to_date('23/10/27','RR/MM/DD'),to_date('23/10/30','RR/MM/DD'),'nonstatic_메소드실습.txt','20231027044226.txt','select 연습문제','과제입니다','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('20','38',to_date('23/10/24','RR/MM/DD'),to_date('23/10/27','RR/MM/DD'),null,null,'ㅇㄴㅁㄹㄹㅇㄴ','@font-face {
	font-family: ''munhwa'';
	src: url(''resources/font/munhwa.ttf'') format(''truetype'');
	font-weight: normal;
	font-style: normal;
}
','35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('23','72',to_date('23/10/27','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'SELECT_연습문제.txt','20231027022943.txt','select 연습문제','SELECT 연습문제

1. 부서코드가 90이면서, 직급코드가 J2인 직원들의 사번, 이름, 부서코드, 직급코드, 급여 조회함
   별칭 적용함

2. 입사일이 ''1982-01-01'' 이후이거나, 직급코드가 J3 인 직원들의 사번, 이름, 관리자 사번, 보너스포인트 조회함

3. 직급코드가 J4가 아닌 직원들의 급여와 보너스포인트가 적용된 연봉을 조회함.
  별칭 적용함, 사번, 사원명, 직급코드, 연봉(원)
  단, 보너스포인트가 null 일 때는 0으로 바꾸어 계산하도록 함.

4. 보너스포인트가 0.1 이상 0.2 이하인 직원들의 사번, 사원명, 이메일, 급여, 보너스포인트 조회함

5. 보너스포인트가 0.1 보다 작거나(미만), 0.2 보다 많은(초과) 직원들의 사번, 사원명, 보너스포인트, 급여, 입사일 조회함

6. ''1982-01-01'' 이후에 입사한 직원들의 사원명, 보너스포인트, 급여 조회함

','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('24','72',to_date('23/10/27','RR/MM/DD'),to_date('23/10/10','RR/MM/DD'),'SCOTT_SELECT_연습문제.txt','20231027023538.txt','SCOTT 연습문제','-- SCOTT 계정 LOGON

-- DEPT 테이블로 부터 모든 데이터를 조회


-- EMP 테이블로 부터 사번(EMPNO), 사원이름(ENAME)을 조회


-- EMP 테이블로 부터 사원명, 급여, 연봉 조회


-- EMP 테이블로 부터 사원명, 급여, 직급, 커미션, 연봉, 커미션이 포함된 연봉 조회


-- emp 테이블에 사용된 부서코드 값 조회


-- emp 테이블에 사용된 부서코드 값 조회, 단 중복된 값은 한개만 출력되게 함.


-- emp 테이블에서 사용된 직급 조회


-- emp 테이블에 사용된 직급 데이터를 한개씩만 조회


-- WHERE 절 
-- 급여를 3000 이상을 받는 직원의 정보 조회


-- 부서코드가 10인 직원의 이름, 직급, 급여 조회
','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('25','72',to_date('23/10/27','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'Java Workshop03.pdf','20231027023636.pdf','Java WorkShop 03','열심히 풀어보세요.','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('26','72',to_date('23/10/27','RR/MM/DD'),to_date('23/10/30','RR/MM/DD'),'SQL_Workshop04.pdf','20231027024627.pdf','SQL WorkShop04','SQL 과제입니다.','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('27','72',to_date('23/10/27','RR/MM/DD'),to_date('23/11/02','RR/MM/DD'),'booManager.zip','20231027024741.zip','bookManager','java bookManager 과제입니다.','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('28','72',to_date('23/10/27','RR/MM/DD'),to_date('23/11/01','RR/MM/DD'),'과제.txt','20231027024902.txt','제어문 과제입니다.','오늘도 열심히 풀어주세요.','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('30','72',to_date('23/10/27','RR/MM/DD'),to_date('23/11/01','RR/MM/DD'),'제어문실습문제.txt','20231027025020.txt','제어문 실습문제_2','제어문 확실히 공부하세요!','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('31','72',to_date('23/10/27','RR/MM/DD'),to_date('23/11/11','RR/MM/DD'),null,null,'객체 실습 문제','ㅇㅇㅇ','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('32','72',to_date('23/10/27','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'nonstatic_메소드실습.txt','20231027025146.txt','메소드 실습문제','메소드 실습문제 입니다. 화이팅이요!','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('33','72',to_date('23/10/27','RR/MM/DD'),to_date('23/11/01','RR/MM/DD'),'nonstatic_메소드실습.txt','20231027025359.txt','nonstatic 실습문제','nonstatic 실습문제 입니다 화이팅! 지금은 쉴 생각을 하면 안됩니다 여기 공부에 ALL IN 하셔야 되는거에요 다들 취업하러 오신거잖아요 취업 해야죠 6개월동안은 다른거 하시지 말고 이거에 집중하셔야합니다~','84');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('1','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('2','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제2',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('3','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제3',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('4','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제4',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('5','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제5',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('6','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제6',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('7','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제7',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('8','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제8',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('9','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제9',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('10','38',to_date('23/10/23','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),null,null,'과제10',null,'35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('21','38',to_date('23/10/26','RR/MM/DD'),to_date('23/11/01','RR/MM/DD'),'sample.txt','20231026101212.txt','과제하세요','과제잘해','35');
Insert into C##LMS.T_HOMEWORK (HW_CODE,PROF_CODE,HW_STARTDATE,HW_ENDDATE,T_HW_FILE,T_HW_RFILE,T_HW_TITLE,T_HW_CONT,CLASS_CODE) values ('35','72',to_date('23/10/27','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'3차프로젝트_팀구성.txt','20231027145511.txt','과제','과제입니다','84');
REM INSERTING into C##LMS.T_TEST
SET DEFINE OFF;
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('110','2001020205_19v5',2,to_date('23/10/26','RR/MM/DD'),to_date('23/10/28','RR/MM/DD'),'객관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('84','2002040301_22v2',3,to_date('23/10/01','RR/MM/DD'),to_date('23/10/19','RR/MM/DD'),'객관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('108','2001020205_19v5',3,to_date('23/10/23','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'주관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('86','2002040306_22v2',null,to_date('23/10/02','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'객관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('88','2002040306_22v2',6,to_date('23/10/01','RR/MM/DD'),to_date('23/10/27','RR/MM/DD'),'객관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('89','2002040306_22v2',null,to_date('23/10/03','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'객관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('92','2001020205_19v5',5,to_date('23/10/17','RR/MM/DD'),to_date('23/11/03','RR/MM/DD'),'객관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('94','2001020206_19v5',1,to_date('23/10/17','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'객관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('95','2001020206_19v5',1,to_date('23/10/17','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'주관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('96','2001020208_19v4',1,to_date('23/10/08','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'객관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('97','2001020208_19v4',1,to_date('23/10/17','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'주관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('98','2001020211_19v5',1,to_date('23/10/17','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'객관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('99','2001020211_19v5',1,to_date('23/10/17','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'주관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('100','2001020212_19v5',1,to_date('23/10/17','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'객관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('101','2001020212_19v5',1,to_date('23/10/17','RR/MM/DD'),to_date('23/11/01','RR/MM/DD'),'주관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('102','2001020413_19v4',20,to_date('23/01/01','RR/MM/DD'),to_date('23/12/01','RR/MM/DD'),'객관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('83','2002040301_22v2',3,to_date('23/10/12','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'객관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('103','2001020415_19v1',10,to_date('23/10/18','RR/MM/DD'),to_date('23/11/03','RR/MM/DD'),'주관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('104','2001020205_19v5',3,to_date('23/10/18','RR/MM/DD'),to_date('23/11/02','RR/MM/DD'),'객관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('106','2001020205_19v5',3,to_date('23/10/26','RR/MM/DD'),to_date('23/10/28','RR/MM/DD'),'주관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('111','2001020208_19v4',null,to_date('23/10/04','RR/MM/DD'),to_date('23/11/16','RR/MM/DD'),'객관식','84','72');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('90','2002040306_22v2',6,to_date('23/10/17','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'주관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('91','2002040306_22v2',3,to_date('23/10/06','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'주관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('74','2002040307_22v2',1,to_date('23/10/01','RR/MM/DD'),to_date('23/10/31','RR/MM/DD'),'주관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('75','2002040302_22v2',1,to_date('23/10/02','RR/MM/DD'),to_date('23/11/10','RR/MM/DD'),'주관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('76','2002040302_22v2',1,to_date('23/10/02','RR/MM/DD'),to_date('23/11/08','RR/MM/DD'),'객관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('77','2002040306_22v2',1,to_date('23/10/02','RR/MM/DD'),to_date('23/11/08','RR/MM/DD'),'객관식','35','38');
Insert into C##LMS.T_TEST (TEST_CODE,SUBJECT_CODE,TEST_CONT,TEST_STARTDATE,TEST_ENDDATE,TEST_TYPE,CLASS_CODE,PROF_CODE) values ('79','2002040301_22v2',1,to_date('23/10/04','RR/MM/DD'),to_date('23/11/08','RR/MM/DD'),'주관식','35','38');
REM INSERTING into C##LMS.DMRS_INSTALLATION
SET DEFINE OFF;
Insert into C##LMS.DMRS_INSTALLATION (DMRS_PERSISTENCE_VERSION,DMRS_REPORTS_VERSION,CREATED_ON) values (1.6,1,to_timestamp('23/11/13 19:28:48.000000000','RR/MM/DD HH24:MI:SSXFF'));
REM INSERTING into C##LMS.DMRS_VDIAGRAMS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_AGGR_FUNC_DIMENSIONS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_AGGR_FUNC_LEVELS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_ATTRIBUTES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_AVT
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_BUSINESS_INFO
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CHANGE_REQUESTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CHANGE_REQUEST_ELEMENTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CHECK_CONSTRAINTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CLASSIFICATION_TYPES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_COLLECTION_TYPES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_COLUMNS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_COLUMN_GROUPS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_COLUMN_UI
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CONSTR_FK_COLUMNS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CONSTR_INDEX_COLUMNS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CONTACTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CONTACT_EMAILS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CONTACT_LOCATIONS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CONTACT_RES_LOCATORS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CONTACT_TELEPHONES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CUBES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_CUBE_DIMENSIONS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DATA_FLOW_DIAGRAM_INFOS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DESIGNS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DIAGRAMS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DIAGRAM_ELEMENTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DIMENSIONS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DIMENSION_CALC_ATTRS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DIMENSION_LEVELS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DISTINCT_TYPES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DOCUMENTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DOCUMENT_ELEMENTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DOMAINS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DOMAIN_AVT
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DOMAIN_CHECK_CONSTRAINTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_DOMAIN_VALUE_RANGES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_EMAILS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_ENTITIES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_ENTITYVIEWS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_EVENTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_EXTERNAL_AGENTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_EXTERNAL_DATAS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_EXT_AGENT_EXT_DATAS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_EXT_AGENT_FLOWS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_FACT_ENTITIES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_FACT_ENTITIES_JOINS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_FLOWS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_FLOW_INFO_STRUCTURES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_FOREIGNKEYS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_GLOSSARIES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_GLOSSARY_TERMS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_HIERARCHIES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_HIERARCHY_LEVELS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_HIERARCHY_ROLLUP_LINKS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_INDEXES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_INFO_STORES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_INFO_STRUCTURES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_INFO_STRUCT_ATTRS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_KEYS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_KEY_ATTRIBUTES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_KEY_ELEMENTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_LARGE_TEXT
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_LEVELS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_LEVEL_ATTRS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_LOCATIONS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_LOGICAL_TO_NATIVE
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_LOGICAL_TYPES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MAPPINGS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MAPPING_TARGETS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MAPPING_TARGET_SOURCES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MEASURES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MEASURE_AGGR_FUNCS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MEASURE_FOLDERS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MEASURE_FOLDER_MEASURES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MODELS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MODEL_DISPLAYS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MODEL_NAMING_OPTIONS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_MODEL_SUBVIEWS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_NATIVE_TO_LOGICAL
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_NOTES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_PK_OID_COLUMNS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_PROCESSES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_PROCESS_ATTRIBUTES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_PROCESS_ENTITIES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_RAGGED_HIER_LINKS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_RAGGED_HIER_LINK_ATTRS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_RDBMS_SITES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_RECORD_STRUCTURES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_RECORD_STRUCT_EXT_DATAS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_RELATIONSHIPS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_REPORTS_VERSION_1_0
SET DEFINE OFF;
Insert into C##LMS.DMRV_REPORTS_VERSION_1_0 (DMRS_PERSISTENCE_VERSION,DMRS_REPORTS_VERSION,CREATED_ON) values (1.6,1,to_timestamp('23/11/13 19:28:48.000000000','RR/MM/DD HH24:MI:SSXFF'));
REM INSERTING into C##LMS.DMRV_RESOURCE_LOCATORS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_RESPONSIBLE_PARTIES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_RES_PARTY_CONTACTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_RES_PARTY_ELEMENTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_ROLES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_ROLE_PROCESSES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_ROLLUP_LINKS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_ROLLUP_LINK_ATTRS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_SLICES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_SLICE_DIM_HIER_LEVEL
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_SLICE_MEASURES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_SOURCE_INFO
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_SPATIAL_COLUMN_DEFINITION
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_SPATIAL_DIMENSIONS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_STRUCTURED_TYPES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_STRUCT_TYPE_ATTRS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_STRUCT_TYPE_METHODS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_STRUCT_TYPE_METHOD_PARS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TABLES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TABLEVIEWS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TABLE_CONSTRAINTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TABLE_INCLUDE_SCRIPTS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TASK_PARAMS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TASK_PARAMS_ITEMS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TELEPHONES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TRANSFORMATIONS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TRANSFORMATION_FLOWS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TRANSFORMATION_PACKAGES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TRANSFORMATION_TASKS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_TRANSFORMATION_TASK_INFOS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_VALUE_RANGES
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_VIEW_COLUMNS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_VIEW_CONTAINERS
SET DEFINE OFF;
REM INSERTING into C##LMS.DMRV_VIEW_ORDER_GROUPBY
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index PK_CHATROOM
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_CHATROOM" ON "C##LMS"."CHATROOM" ("CHAT_ROOM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_DESIGNED_CLASS
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_DESIGNED_CLASS" ON "C##LMS"."DESIGNED_CLASS" ("CLASS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QBOARD
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QBOARD" ON "C##LMS"."QBOARD" ("Q_BOARD_SEQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QBOARD_ANS
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QBOARD_ANS" ON "C##LMS"."QBOARD_ANS" ("Q_BOARD_SEQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QNA
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QNA" ON "C##LMS"."QNA" ("QNA_NO", "QNA_CATE", "QNA_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QNARESULT
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QNARESULT" ON "C##LMS"."QNARESULT" ("QNA_CATE", "QNA_NO", "QNA_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QUIZ
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QUIZ" ON "C##LMS"."QUIZ" ("QUIZ_SEQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_STUDENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_STUDENT" ON "C##LMS"."STUDENT" ("STUDENT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_SUBJECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_SUBJECT" ON "C##LMS"."SUBJECT" ("SUBJECT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_SURVEY
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_SURVEY" ON "C##LMS"."SURVEY" ("SURVEY_NO", "SURVEY_CATE", "SURVEY_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_TEAHCER
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_TEAHCER" ON "C##LMS"."TEACHER" ("PROF_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_HOMEWORK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_T_HOMEWORK" ON "C##LMS"."T_HOMEWORK" ("HW_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_TEST
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_T_TEST" ON "C##LMS"."T_TEST" ("TEST_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_CHATROOM
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_CHATROOM" ON "C##LMS"."CHATROOM" ("CHAT_ROOM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_DESIGNED_CLASS
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_DESIGNED_CLASS" ON "C##LMS"."DESIGNED_CLASS" ("CLASS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QBOARD
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QBOARD" ON "C##LMS"."QBOARD" ("Q_BOARD_SEQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QBOARD_ANS
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QBOARD_ANS" ON "C##LMS"."QBOARD_ANS" ("Q_BOARD_SEQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QNA
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QNA" ON "C##LMS"."QNA" ("QNA_NO", "QNA_CATE", "QNA_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QNARESULT
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QNARESULT" ON "C##LMS"."QNARESULT" ("QNA_CATE", "QNA_NO", "QNA_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_QUIZ
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_QUIZ" ON "C##LMS"."QUIZ" ("QUIZ_SEQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_STUDENT
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_STUDENT" ON "C##LMS"."STUDENT" ("STUDENT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_SUBJECT
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_SUBJECT" ON "C##LMS"."SUBJECT" ("SUBJECT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_SURVEY
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_SURVEY" ON "C##LMS"."SURVEY" ("SURVEY_NO", "SURVEY_CATE", "SURVEY_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_TEAHCER
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_TEAHCER" ON "C##LMS"."TEACHER" ("PROF_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_HOMEWORK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_T_HOMEWORK" ON "C##LMS"."T_HOMEWORK" ("HW_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_T_TEST
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##LMS"."PK_T_TEST" ON "C##LMS"."T_TEST" ("TEST_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Package PKG_OSDM_UTILS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##LMS"."PKG_OSDM_UTILS" AS

single_table_prefix  CONSTANT VARCHAR2(30) := 'osdmSingleTable';
all_tables_prefix    CONSTANT VARCHAR2(30) := 'osdmAllTables';
single_entity_prefix CONSTANT VARCHAR2(30) := 'osdmSingleEntity';
all_entities_prefix  CONSTANT VARCHAR2(30) := 'osdmAllEntities';
single_st_prefix     CONSTANT VARCHAR2(30) := 'osdmSingleStructuredType';
all_st_prefix        CONSTANT VARCHAR2(30) := 'osdmAllStructuredTypes';
single_ct_prefix     CONSTANT VARCHAR2(30) := 'osdmSingleCollectionType';
all_ct_prefix        CONSTANT VARCHAR2(30) := 'osdmAllCollectionTypes';
single_dt_prefix     CONSTANT VARCHAR2(30) := 'osdmSingleDistinctType';
all_dt_prefix        CONSTANT VARCHAR2(30) := 'osdmAllDistinctTypes';
all_domains_prefix   CONSTANT VARCHAR2(30) := 'osdmAllDomains';
all_cr_prefix        CONSTANT VARCHAR2(30) := 'osdmAllChangeRequests';
all_mr_prefix        CONSTANT VARCHAR2(30) := 'osdmAllMeasurements';
glossary_prefix      CONSTANT VARCHAR2(30) := 'osdmGlossary';

PROCEDURE Generate_Report(v_rep_id           IN NUMBER,
                          v_obj_ovid         IN VARCHAR2,
                          v_mode             IN NUMBER,
                          v_reports_dir      IN VARCHAR2,
                          v_report_name      IN VARCHAR2,
                          reportTemplate     IN REPORT_TEMPLATE,
                          objects            IN OBJECTS_LIST,
                          v_raw_xml         OUT BFILE, 
                          v_status          OUT NUMBER, 
                          osddm_reports_dir OUT VARCHAR2,
                          v_diagrams        OUT SYS_REFCURSOR,
                          v_diagrams_svg    OUT SYS_REFCURSOR);

FUNCTION Gather_Constraint_Details_XML(col_attr_ovid IN VARCHAR2,namespace IN VARCHAR2) RETURN CLOB;

FUNCTION Gather_Domain_Constraints_XML(domain_ovid VARCHAR2) RETURN CLOB;

FUNCTION Gather_Constraint_Details_HTML(col_attr_ovid VARCHAR2) RETURN CLOB;

FUNCTION Gather_Domain_Constraints_HTML (domain_ovid VARCHAR2) RETURN CLOB;

END PKG_OSDM_UTILS;

/
--------------------------------------------------------
--  DDL for Package Body PKG_OSDM_UTILS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "C##LMS"."PKG_OSDM_UTILS" AS

log_file   UTL_FILE.File_Type;
temp_file  UTL_FILE.File_Type;

PROCEDURE Generate_OS_File(v_blob IN BLOB, filename IN VARCHAR2) IS

result_file     UTL_FILE.File_Type;
compressed_blob BLOB;
len             NUMBER;
l_pos           INTEGER := 1;
l_amount        BINARY_INTEGER := 32767;
l_buffer        RAW(32767);

BEGIN

 result_file := UTL_FILE.FOpen('OSDDM_REPORTS_DIR',filename,'wb', 32767); 

 len := DBMS_LOB.getlength(v_blob);
 
 WHILE l_pos < len LOOP
      DBMS_LOB.read(v_blob, l_amount, l_pos, l_buffer);
      UTL_FILE.put_raw(result_file, l_buffer, TRUE);
      l_pos := l_pos + l_amount;
 END LOOP;

 UTL_FILE.fclose(result_file);
 
EXCEPTION

 WHEN others THEN
 
  IF UTL_FILE.Is_Open(result_file) THEN
     UTL_FILE.FClose(result_file);
  END IF;

  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Generate_OS_File Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Generate_OS_File Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  
END Generate_OS_File;

FUNCTION Gather_Constraint_Details_XML(col_attr_ovid VARCHAR2, namespace VARCHAR2) RETURN CLOB IS

res        CLOB;
v_vl_value VARCHAR2(50) := namespace||':VLValue';
v_s_descr  VARCHAR2(50) := namespace||':VLShortDescription';

CURSOR cur_c_constraints(v_ovid IN VARCHAR2, v_ns IN VARCHAR2) IS
 SELECT DECODE(v_ns, single_table_prefix,  XMLElement(EVALNAME(single_table_prefix  || ':DatabaseType'), XMLCDATA(cc.text)).getClobVal(),
                     all_tables_prefix,    XMLElement(EVALNAME(all_tables_prefix    || ':DatabaseType'), XMLCDATA(cc.text)).getClobVal(),
                     single_entity_prefix, XMLElement(EVALNAME(single_entity_prefix || ':DatabaseType'), XMLCDATA(cc.text)).getClobVal(),
                     all_entities_prefix,  XMLElement(EVALNAME(all_entities_prefix  || ':DatabaseType'), XMLCDATA(cc.text)).getClobVal())           text,
        DECODE(v_ns, single_table_prefix,  XMLElement(EVALNAME(single_table_prefix  || ':DatabaseType'), XMLCDATA(cc.database_type)).getClobVal(),
                     all_tables_prefix,    XMLElement(EVALNAME(all_tables_prefix    || ':DatabaseType'), XMLCDATA(cc.database_type)).getClobVal(),
                     single_entity_prefix, XMLElement(EVALNAME(single_entity_prefix || ':DatabaseType'), XMLCDATA(cc.database_type)).getClobVal(),
                     all_entities_prefix,  XMLElement(EVALNAME(all_entities_prefix  || ':DatabaseType'), XMLCDATA(cc.database_type)).getClobVal())  db_type,
        COUNT(cc.text) over()                                                                                                                       total_row_count
 FROM   dmrs_check_constraints cc
 WHERE  cc.dataelement_ovid = v_ovid
 ORDER BY sequence;
rec_c_constraints cur_c_constraints%rowtype;

CURSOR cur_vr_constraints(v_ovid IN VARCHAR2, v_ns IN VARCHAR2) IS
 SELECT DECODE(v_ns, single_table_prefix, XMLElement(EVALNAME(single_table_prefix   || ':RangeBeginValue'), XMLCDATA(vr.begin_value)).getClobVal(),
                     all_tables_prefix,XMLElement(EVALNAME(all_tables_prefix        || ':RangeBeginValue'), XMLCDATA(vr.begin_value)).getClobVal(),
                     single_entity_prefix, XMLElement(EVALNAME(single_entity_prefix || ':RangeBeginValue'), XMLCDATA(vr.begin_value)).getClobVal(),
                     all_entities_prefix,XMLElement(EVALNAME(all_entities_prefix    || ':RangeBeginValue'), XMLCDATA(vr.begin_value)).getClobVal())              begin_value,
        DECODE(v_ns, single_table_prefix, XMLElement(EVALNAME(single_table_prefix   || ':RangeEndValue'), XMLCDATA(vr.end_value)).getClobVal(),
                     all_tables_prefix,XMLElement(EVALNAME(all_tables_prefix        || ':RangeEndValue'), XMLCDATA(vr.end_value)).getClobVal(),
                     single_entity_prefix, XMLElement(EVALNAME(single_entity_prefix || ':RangeEndValue'), XMLCDATA(vr.end_value)).getClobVal(),
                     all_entities_prefix,XMLElement(EVALNAME(all_entities_prefix    || ':RangeEndValue'), XMLCDATA(vr.end_value)).getClobVal())                  end_value,
        DECODE(v_ns, single_table_prefix, XMLElement(EVALNAME(single_table_prefix   || ':RangeShortDescription'), XMLCDATA(vr.short_description)).getClobVal(),  
                     all_tables_prefix,XMLElement(EVALNAME(all_tables_prefix        || ':RangeShortDescription'), XMLCDATA(vr.short_description)).getClobVal(),  
                     single_entity_prefix, XMLElement(EVALNAME(single_entity_prefix || ':RangeShortDescription'), XMLCDATA(vr.short_description)).getClobVal(),
                     all_entities_prefix,XMLElement(EVALNAME(all_entities_prefix    || ':RangeShortDescription'), XMLCDATA(vr.short_description)).getClobVal())  short_description,
        COUNT(vr.begin_value) over()                                                                                                                             total_row_count
 FROM   dmrs_value_ranges vr
 WHERE  vr.dataelement_ovid = v_ovid
 ORDER BY sequence;
rec_vr_constraints cur_vr_constraints%rowtype;

CURSOR cur_vl_constraints(v_ovid IN VARCHAR2, v_ns IN VARCHAR2) IS
 SELECT DECODE(v_ns, single_table_prefix, XMLElement(EVALNAME(single_table_prefix || ':VLValue'), XMLCDATA(av.value)).getClobVal(),
                     all_tables_prefix,XMLElement(EVALNAME(all_tables_prefix || ':VLValue'), XMLCDATA(av.value)).getClobVal(),
                     single_entity_prefix, XMLElement(EVALNAME(single_entity_prefix || ':VLValue'), XMLCDATA(av.value)).getClobVal(),
                     all_entities_prefix,XMLElement(EVALNAME(all_entities_prefix || ':VLValue'), XMLCDATA(av.value)).getClobVal())                         av_value,
        DECODE(v_ns, single_table_prefix, XMLElement(EVALNAME(single_table_prefix || ':VLShortDescription'), XMLCDATA(av.short_description)).getClobVal(),
                     all_tables_prefix,XMLElement(EVALNAME(all_tables_prefix || ':VLShortDescription'), XMLCDATA(av.short_description)).getClobVal(),
                     single_entity_prefix, XMLElement(EVALNAME(single_entity_prefix || ':VLShortDescription'), XMLCDATA(av.short_description)).getClobVal(),
                     all_entities_prefix,XMLElement(EVALNAME(all_entities_prefix || ':VLShortDescription'), XMLCDATA(av.short_description)).getClobVal())  short_description,
        COUNT(av.value) over()                                                                                         total_row_count
 FROM   dmrs_avt av,
        dmrs_columns c
 WHERE  c.ovid = av.dataelement_ovid
 AND    av.dataelement_ovid = v_ovid;
rec_vl_constraints cur_vl_constraints%rowtype;

BEGIN

  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  FOR rec_vr_constraints IN cur_vr_constraints(col_attr_ovid, namespace) LOOP
     IF (cur_vr_constraints%ROWCOUNT = 1) THEN
       DBMS_LOB.APPEND (res, '<'||namespace||':RangesCollection>');
     END IF;

       DBMS_LOB.APPEND (res, '<'||namespace||':RangeDetails>');
       DBMS_LOB.APPEND (res, rec_vr_constraints.begin_value);
       DBMS_LOB.APPEND (res, rec_vr_constraints.end_value);
       DBMS_LOB.APPEND (res, rec_vr_constraints.short_description);
       DBMS_LOB.APPEND (res, '</'||namespace||':RangeDetails>');
    
     IF (cur_vr_constraints%ROWCOUNT = rec_vr_constraints.total_row_count) THEN
       DBMS_LOB.APPEND (res, '</'||namespace||':RangesCollection>');
     END IF;
  END LOOP;
 
  FOR rec_vl_constraints IN cur_vl_constraints(col_attr_ovid, namespace) LOOP
     IF (cur_vl_constraints%ROWCOUNT = 1) THEN
       DBMS_LOB.APPEND (res, '<'||namespace||':ValueListsCollection>');
     END IF;
   
       DBMS_LOB.APPEND (res, '<'||namespace||':ValueListDetails>');
       DBMS_LOB.APPEND (res, rec_vl_constraints.av_value);
       DBMS_LOB.APPEND (res, rec_vl_constraints.short_description);
       DBMS_LOB.APPEND (res, '</'||namespace||':ValueListDetails>');
     
     IF (cur_vl_constraints%ROWCOUNT = rec_vl_constraints.total_row_count) THEN
       DBMS_LOB.APPEND (res, '</'||namespace||':ValueListsCollection>');
     END IF;
  END LOOP;

  FOR rec_c_constraints IN cur_c_constraints(col_attr_ovid, namespace) LOOP
     IF (cur_c_constraints%ROWCOUNT = 1) THEN
       DBMS_LOB.APPEND (res, '<'||namespace||':CheckConstraintsCollection>');
     END IF;

      DBMS_LOB.APPEND (res, '<'||namespace||':CheckConstraintDetails>');
      DBMS_LOB.APPEND (res, rec_c_constraints.text);
      DBMS_LOB.APPEND (res, rec_c_constraints.db_type);
      DBMS_LOB.APPEND (res, '</'||namespace||':CheckConstraintDetails>');
   
     IF (cur_c_constraints%ROWCOUNT = rec_c_constraints.total_row_count) THEN
       DBMS_LOB.APPEND (res, '</'||namespace||':CheckConstraintsCollection>');
     END IF;
  END LOOP;

  RETURN res;

EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Constraint_Details_XML Exception : : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Constraint_Details_XML Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;

END Gather_Constraint_Details_XML;

FUNCTION Gather_SingleTable_Data(v_table_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE, v_report_name IN VARCHAR2) RETURN CLOB IS 

res             CLOB;
v_description   VARCHAR2(32767);
v_notes         VARCHAR2(32767);
v_cc_created    BOOLEAN := FALSE;
token_value     CLOB;

-- Common Data
CURSOR cur_common_data(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_table_prefix || ':DesignName'),d.design_name).getClobVal()                                      design_name,
        XMLElement(EVALNAME(single_table_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal() version_date,

        XMLElement(EVALNAME(single_table_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                   version_comment,
        XMLElement(EVALNAME(single_table_prefix || ':ModelName'),m.model_name).getClobVal()                                        model_name
 FROM   dmrs_designs d, 
        dmrs_models m,
        dmrs_tables t
 WHERE  d.design_ovid = m.design_ovid
 AND   t.model_ovid = m.model_ovid
 AND   t.ovid = v_t_ovid;
rec_common_data cur_common_data%ROWTYPE;

-- Table General Data
CURSOR cur_table(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_table_prefix || ':TableName'),DECODE(t.schema_name, NULL, '', t.schema_name ||'.') || t.table_name).getClobVal()  table_name,
        XMLElement(EVALNAME(single_table_prefix || ':Abbreviation'),t.abbreviation).getClobVal()                                                     abbreviation,
        XMLElement(EVALNAME(single_table_prefix || ':ClassificationTypeName'),t.classification_type_name).getClobVal()                               class_type_name,
        XMLElement(EVALNAME(single_table_prefix || ':ObjectTypeName'),t.structured_type_name).getClobVal()                                           obj_type_name,
        XMLElement(EVALNAME(single_table_prefix || ':NumberOfColumns'),t.number_data_elements).getClobVal()                                          number_cols,
        XMLElement(EVALNAME(single_table_prefix || ':NumberOfRowsMin'),t.min_volume).getClobVal()                                                    number_rows_min,
        XMLElement(EVALNAME(single_table_prefix || ':NumberOfRowsMax'),t.max_volume).getClobVal()                                                    number_rows_max,
        XMLElement(EVALNAME(single_table_prefix || ':ExpectedNumberOfRows'),t.expected_volume).getClobVal()                                          number_rows_expected,
        XMLElement(EVALNAME(single_table_prefix || ':ExpectedGrowth'),t.growth_rate_percents).getClobVal()                                           growth_expected,
        XMLElement(EVALNAME(single_table_prefix || ':GrowthInterval'),t.growth_rate_interval).getClobVal()                                           growth_interval,
        XMLElement(EVALNAME(single_table_prefix || ':FunctionalName'), (SELECT NVL(e.entity_name,'')                        
                                              FROM   dmrs_entities e,
                                                     dmrs_mappings m
                                              WHERE  m.relational_object_ovid = t.ovid
                                              AND    m.logical_object_ovid  = e.ovid
                                              AND    ROWNUM = 1)).getClobVal()                                                                       functional_name
 FROM	 dmrs_tables t
 WHERE  t.ovid = v_t_ovid;
rec_table cur_table%ROWTYPE;

-- Diagrams
CURSOR cur_diagrams(v_t_ovid IN VARCHAR2, v_rep_name IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_table_prefix || ':Diagram'), 
          XMLElement(EVALNAME(single_table_prefix || ':Name'), v_rep_name || '_files/' || REGEXP_REPLACE(SUBSTR(d.pdf_name, 1, INSTR(d.pdf_name, '.PDF')-1), '[^a-zA-Z1-9_]', '_') || '.pdf'),
          XMLElement(EVALNAME(single_table_prefix || ':Suffix'), NULL)).getClobVal()                                                                                                            pdf_name,
        COUNT(d.pdf_name) over()                                                                                                                                                                total_row_count
 FROM   dmrs_vdiagrams d,
       (SELECT diagram_ovid 
        FROM   dmrs_diagram_elements
        WHERE  ovid = v_t_ovid) b
 WHERE d.ovid = b.diagram_ovid
 AND   d.diagram_type = 'Subview'
 AND   d.is_display = 'N';
rec_diagrams cur_diagrams%ROWTYPE;

-- Columns Data
CURSOR cur_columns(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_table_prefix || ':Sequence'),c.sequence).getClobVal()                                                                                              seq,
        XMLElement(EVALNAME(single_table_prefix || ':ColumnName'),c.column_name).getClobVal()                                                                                         column_name,
        XMLElement(EVALNAME(single_table_prefix || ':PK'),c.pk_flag).getClobVal()                                                                                                     pk,
        XMLElement(EVALNAME(single_table_prefix || ':FK'),c.fk_flag).getClobVal()                                                                                                     fk,
        XMLElement(EVALNAME(single_table_prefix || ':M'),DECODE(c.mandatory,'N',' ',c.mandatory)).getClobVal()                                                                        m,
        XMLElement(EVALNAME(single_table_prefix || ':DataTypeKind'),DECODE(c.datatype_kind,                                                                                           
                                                 'Domain',         'DOM',
                                                 'Logical Type',   'LT',
                                                 'Distinct Type',  'DT',
                                                 'Ref Struct Type','RST',
                                                 'Structured Type','ST',
                                                 'Collection Type','CT')
                  ).getClobVal()                                                                                                                             dt_kind,
         XMLElement(EVALNAME(single_table_prefix || ':DataType'), 
            DECODE(c.datatype_kind, 
                  'Domain', c.logical_type_name ||' '||
                           DECODE (NVL(c.t_size,''),'',
                              DECODE(NVL(c.t_scale,0),0,
                                 DECODE(NVL(c.t_precision,0),0,null,'('|| DECODE(NVL(c.t_precision,0),0,null,c.t_precision) ||')'),
                                   '('|| DECODE(NVL(c.t_precision,0),0,null,c.t_precision) || ',' || DECODE(NVL(c.t_scale,0),0,null,c.t_scale)||')'),
                                   '('||TRIM(DECODE(c.t_size,'',null,c.t_size||' '||c.char_units ))||')'),
                   'Logical Type', c.logical_type_name  ||' '|| 
                           DECODE (NVL(c.t_size,''),'',
                              DECODE(NVL(c.t_scale,0),0,
                                 DECODE(NVL(c.t_precision,0),0,null,'('|| DECODE(NVL(c.t_precision,0),0,null,c.t_precision) ||')'),
                                   '('|| DECODE(NVL(c.t_precision,0),0,null,c.t_precision) || ',' || DECODE(NVL(c.t_scale,0),0,null,c.t_scale)||')'),
                                   '('||TRIM(DECODE(c.t_size,'',null,c.t_size||' '||c.char_units ))||')')
            ) ||
            DECODE (c.auto_increment_column,'Y', ' - AI','') ||
            DECODE (c.identity_column,'Y', ' - ID','')
          ).getClobVal()                                                                                                                                    data_type,
        XMLElement(EVALNAME(single_table_prefix || ':DomainName'),DECODE(c.domain_name,'Unknown',null,c.domain_name)).getClobVal()                                                     domain_name,
        XMLElement(EVALNAME(single_table_prefix || ':Formula'), TRIM(c.formula||' '||c.default_value)).getClobVal()                                                                    formula,
        XMLElement(EVALNAME(single_table_prefix || ':Security'),DECODE(c.personally_id_information ||'/'||c.sensitive_information||'/'||c.mask_for_none_production,'//',
                                      null,c.personally_id_information ||'/'||c.sensitive_information||'/'||c.mask_for_none_production)).getClobVal()       security,
        XMLElement(EVALNAME(single_table_prefix || ':PreferredAbbreviation'),c.abbreviation).getClobVal()                                                                              abbreviation,
        COUNT(c.column_name) over()                                                                                                                         total_row_count
 FROM 	dmrs_columns c
 WHERE  c.container_ovid = v_t_ovid
 ORDER BY c.sequence;
rec_columns cur_columns%ROWTYPE;

-- Columns Comments Data
CURSOR cur_columns_comments(v_t_ovid IN VARCHAR2) IS
 SELECT a.seq                       seq, 
        a.column_name               column_name, 
        a.column_description        column_description, 
        a.column_notes              column_notes,
        COUNT(a.column_name) over() total_row_count
 FROM (
  SELECT XMLElement(EVALNAME(single_table_prefix || ':ColumnCommentsSequence'),c.sequence).getStringVal()  seq,
         XMLElement(EVALNAME(single_table_prefix || ':ColumnCommentsName'),c.column_name).getStringVal()   column_name,
         XMLElement(EVALNAME(single_table_prefix || ':ColumnDescription'),XMLCDATA(
         NVL(
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = c.ovid
         AND    t.type='Comments'),
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = c.ovid
         AND    t.type='CommentsInRDBMS')))).getClobVal()                                                  column_description, 
         XMLElement(EVALNAME(single_table_prefix || ':ColumnNotes'),XMLCDATA(
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = c.ovid
         AND    t.type='Note'))).getClobVal()                                                             column_notes
  FROM   dmrs_columns c
  WHERE  c.container_ovid = v_t_ovid
  ORDER BY c.sequence
 ) a
 WHERE DBMS_LOB.getlength(column_description) > 0 OR DBMS_LOB.getlength(column_notes) > 0;
rec_columns_comments cur_columns_comments%ROWTYPE;

--Indexes
CURSOR cur_indexes(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_table_prefix || ':IndexName'),i.index_name).getClobVal()                                                                                        idx_name,
        XMLElement(EVALNAME(single_table_prefix || ':IndexState'),DECODE(i.state,'Unique Plain Index','UN','Unique Constraint','UK','Primary Constraint','PK',null)).getClobVal()  state,
        XMLElement(EVALNAME(single_table_prefix || ':IndexFunctional'),DECODE(i.functional,'N',' ',i.functional)).getClobVal()                                                     functional,
        XMLElement(EVALNAME(single_table_prefix || ':IndexSpatial'),DECODE(i.spatial_index,'N',' ',i.spatial_index)).getClobVal()                                                  spatial,
        XMLElement(EVALNAME(single_table_prefix || ':IndexExpression'),i.expression).getClobVal()                                                                                  expression,
        XMLElement(EVALNAME(single_table_prefix || ':IndexColumnName'),c.column_name).getClobVal()                                                                                 col_name,
        XMLElement(EVALNAME(single_table_prefix || ':IndexSortOrder'),c.sort_order).getClobVal()                                                                                   sort_order,
        c.sequence                                                                                                                                      idx_sequence,
        COUNT(c.column_name) over()                                                                                                                     total_row_count
 FROM   dmrs_tables t,
        dmrs_indexes i,
        dmrs_constr_index_columns c
 WHERE  t.ovid = i.container_ovid
 AND    i.ovid = c.index_ovid
 AND    t.ovid = v_t_ovid
 ORDER BY i.index_name, c.sequence, c.sort_order;
rec_indexes cur_indexes%ROWTYPE;

-- Table Level Constraints
CURSOR cur_tl_constraints(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_table_prefix || ':TLConstraintType'), CASE WHEN rownum>1 THEN ''
                                               ELSE 'Table Level'
                                               END ).getClobVal()                                         c_type,
        XMLElement(EVALNAME(single_table_prefix || ':TLConstraintName'), tc.constraint_name).getClobVal() c_name,
        XMLElement(EVALNAME(single_table_prefix || ':TLConstraintRule'), XMLCDATA(tc.text)).getClobVal()  c_details,
        COUNT(tc.constraint_name) over()                                                                  total_row_count
 FROM   dmrs_table_constraints tc
 WHERE  tc.table_ovid = v_t_ovid;
rec_tl_constraints cur_tl_constraints%ROWTYPE;

-- Column Level Constraints
CURSOR cur_cl_constraints(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_table_prefix || ':ContstraintType'), CASE WHEN rownum>1 THEN ''
                                              ELSE 'Column Level'
                                              END).getClobVal()                                        c_type,
        XMLElement(EVALNAME(single_table_prefix || ':ALCConstraintName'), c.column_name || 
                                                DECODE((SELECT DISTINCT(constraint_name) 
                                                        FROM dmrs_check_constraints 
                                                        WHERE c.ovid = dataelement_ovid),NULL,'',
                                               ' / '|| (SELECT  DISTINCT(constraint_name) 
                                                        FROM dmrs_check_constraints 
                                                        WHERE c.ovid = dataelement_ovid))).getClobVal() c_name,
        Gather_Constraint_Details_XML(c.ovid, single_table_prefix)                                      c_details,
        COUNT(c.column_name) over()                                                                     total_row_count
 FROM   dmrs_columns c
 WHERE  c.container_ovid = v_t_ovid
 AND    (c.ovid IN (SELECT dataelement_ovid FROM dmrs_avt) OR 
         c.ovid IN (SELECT dataelement_ovid FROM dmrs_value_ranges) OR 
         c.ovid IN (SELECT dataelement_ovid FROM dmrs_check_constraints));
rec_cl_constraints cur_cl_constraints%ROWTYPE;

--Foreign keys referring to other tables
CURSOR cur_fk_referring_to(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_table_prefix || ':FKName'),CASE WHEN ic.sequence>1 THEN ' '
                                    ELSE fk.fk_name
                                    END
                   ).getClobVal()                                               fk_name,
        XMLElement(EVALNAME(single_table_prefix || ':FKReferringTo'),CASE WHEN ic.sequence>1 THEN ' '
                                          ELSE fk.referred_table_name
                                          END
                  ).getClobVal()                                                referring_to,
        XMLElement(EVALNAME(single_table_prefix || ':FKMandatory'),CASE WHEN ic.sequence>1 THEN ' '
                                         ELSE DECODE(fk.mandatory,'Y',fk.mandatory,' ')
                                         END
                  ).getClobVal()                                                mandatory,
        XMLElement(EVALNAME(single_table_prefix || ':FKTransferable'),CASE WHEN ic.sequence>1 THEN ' '
                                            ELSE DECODE(fk.transferable,'Y',fk.transferable,' ')
                                            END
                  ).getClobVal()                                                transferable,
        XMLElement(EVALNAME(single_table_prefix || ':FKInArc'),CASE WHEN ic.sequence>1 THEN ' '
                                     ELSE DECODE(fk.in_arc,'Y',fk.in_arc,' ')
                                     END
                  ).getClobVal()                                                in_arc,
        XMLElement(EVALNAME(single_table_prefix || ':FKColumnName'),ic.column_name).getClobVal()          col_name,
        ic.sequence                                                             seq,
        COUNT(ic.column_name) over()                                            total_row_count
 FROM   dmrs_foreignkeys fk,
        dmrs_constr_fk_columns ic
 WHERE  fk.child_table_ovid = v_t_ovid
 AND    fk.ovid = ic.fk_ovid
 ORDER BY fk.referred_table_name,fk.fk_name, ic.sequence;
rec_fk_referring_to cur_fk_referring_to%ROWTYPE;

--Foreign keys referred from other tables
CURSOR cur_fk_referred_from(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_table_prefix || ':FKName'),CASE WHEN ic.sequence>1 THEN ' '
                                    ELSE fk.fk_name
                                    END
                   ).getClobVal()                                              fk_name,
        XMLElement(EVALNAME(single_table_prefix || ':FKReferredFrom'),CASE WHEN ic.sequence>1 THEN ' '
                                           ELSE fk.child_table_name
                                           END
                  ).getClobVal()                                                referred_from,
        XMLElement(EVALNAME(single_table_prefix || ':FKMandatory'),CASE WHEN ic.sequence>1 THEN ' '
                                         ELSE DECODE(fk.mandatory,'Y',fk.mandatory,' ')
                                         END
                  ).getClobVal()                                                mandatory,
        XMLElement(EVALNAME(single_table_prefix || ':FKTransferable'),CASE WHEN ic.sequence>1 THEN ' '
                                            ELSE DECODE(fk.transferable,'Y',fk.transferable,' ')
                                            END
                  ).getClobVal()                                                transferable,
        XMLElement(EVALNAME(single_table_prefix || ':FKInArc'),CASE WHEN ic.sequence>1 THEN ' '
                                     ELSE DECODE(fk.in_arc,'Y',fk.in_arc,' ')
                                     END
                  ).getClobVal()                                                in_arc,
        XMLElement(EVALNAME(single_table_prefix || ':FKColumnName'),ic.column_name).getClobVal()           col_name,
        ic.sequence                                                             seq,
        COUNT(ic.column_name) over()                                            total_row_count
 FROM   dmrs_foreignkeys fk,
        dmrs_constr_fk_columns ic
 WHERE  fk.referred_table_ovid = v_t_ovid
 AND    fk.ovid = ic.fk_ovid
 ORDER BY fk.child_table_name,fk.fk_name, ic.sequence;
rec_fk_referred_from cur_fk_referred_from%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering single table data started ...');

   DBMS_LOB.CREATETEMPORARY(res, TRUE);
   DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':Table xmlns:' || single_table_prefix || '="http://oracle.com/datamodeler/reports/table">');

   -- Common Data
   FOR rec_common_data IN cur_common_data(v_table_ovid) LOOP

      DBMS_LOB.APPEND (res, rec_common_data.design_name);
      DBMS_LOB.APPEND (res, rec_common_data.version_date);  
      DBMS_LOB.APPEND (res, rec_common_data.version_comment);  
      DBMS_LOB.APPEND (res, rec_common_data.model_name);
 
   END LOOP;

   -- Description / Notes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN

      DBMS_LOB.APPEND (res, '<' || single_table_prefix || ':DescriptionNotes>');

      SELECT 
        XMLElement(EVALNAME(single_table_prefix || ':Description'), XMLCDATA(
            NVL((SELECT t.text comments_in_rdbms
                 FROM   dmrs_large_text t
                 WHERE  t.ovid = v_table_ovid
                 AND    t.type='Comments'),
                (SELECT t.text comments_in_rdbms
                 FROM   dmrs_large_text t
                 WHERE  t.ovid = v_table_ovid
                 AND    t.type='CommentsInRDBMS')))).getClobVal(), 
        XMLElement(EVALNAME(single_table_prefix || ':Notes'), XMLCDATA(
               (SELECT t.text comments_in_rdbms
                FROM   dmrs_large_text t
                WHERE  t.ovid = v_table_ovid
                AND    t.type='Note'))).getClobVal()
      INTO   v_description, 
             v_notes
      FROM  dual;

      DBMS_LOB.APPEND (res, v_description);
      DBMS_LOB.APPEND (res, v_notes);
      DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':DescriptionNotes>');

   END IF;

   --Table General Data
   FOR rec_table IN cur_table(v_table_ovid) LOOP
      DBMS_LOB.APPEND (res, rec_table.table_name);
      DBMS_LOB.APPEND (res, rec_table.functional_name);      
      DBMS_LOB.APPEND (res, rec_table.abbreviation);
      DBMS_LOB.APPEND (res, rec_table.class_type_name);
      DBMS_LOB.APPEND (res, rec_table.obj_type_name);

      IF (reportTemplate.reportType = 0 OR reportTemplate.useQuantitativeInfo = 1) THEN
        DBMS_LOB.APPEND (res, '<' || single_table_prefix || ':QuantitativeInfoCollection>');
        DBMS_LOB.APPEND (res, rec_table.number_cols);
        DBMS_LOB.APPEND (res, rec_table.number_rows_min);
        DBMS_LOB.APPEND (res, rec_table.number_rows_max);
        DBMS_LOB.APPEND (res, rec_table.number_rows_expected);
        DBMS_LOB.APPEND (res, rec_table.growth_expected);
        DBMS_LOB.APPEND (res, rec_table.growth_interval);
        DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':QuantitativeInfoCollection>');
      END IF;
   END LOOP;
   
   -- Diagrams
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDiagrams = 1) THEN
     FOR rec_diagrams IN cur_diagrams(v_table_ovid, v_report_name) LOOP
        IF (cur_diagrams%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':DiagramsCollection>');
        END IF;
          
          DBMS_LOB.APPEND (res, rec_diagrams.pdf_name);

        IF (cur_diagrams%ROWCOUNT = rec_diagrams.total_row_count) THEN
         DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':DiagramsCollection>');
        END IF;
     END LOOP;
   END IF;
   
   -- Columns
   IF (reportTemplate.reportType = 0 OR reportTemplate.useTableColumns = 1) THEN
     FOR rec_columns IN cur_columns(v_table_ovid) LOOP
        IF (cur_columns%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':ColumnsCollection>');
        END IF;
        
          DBMS_LOB.APPEND (res, '<' || single_table_prefix || ':ColumnDetails>');
          DBMS_LOB.APPEND (res, rec_columns.seq);
          DBMS_LOB.APPEND (res, rec_columns.column_name);
          DBMS_LOB.APPEND (res, rec_columns.pk);
          DBMS_LOB.APPEND (res, rec_columns.fk);
          DBMS_LOB.APPEND (res, rec_columns.m);
          IF (INSTR(LOWER(rec_columns.data_type),'unknown') = 0) THEN
            DBMS_LOB.APPEND (res, rec_columns.data_type);
          ELSE
            SELECT XMLElement(EVALNAME(single_table_prefix || ':DataType'), '').getClobVal() INTO token_value FROM dual;
            DBMS_LOB.APPEND (res, token_value);
          END IF;
          DBMS_LOB.APPEND (res, rec_columns.dt_kind);
          DBMS_LOB.APPEND (res, rec_columns.domain_name);
          DBMS_LOB.APPEND (res, rec_columns.formula);
          DBMS_LOB.APPEND (res, rec_columns.security);
          DBMS_LOB.APPEND (res, rec_columns.abbreviation);
          DBMS_LOB.APPEND (res,'</' || single_table_prefix || ':ColumnDetails>');
        
        IF (cur_columns%ROWCOUNT = rec_columns.total_row_count) THEN
         DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':ColumnsCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Columns Comments
   IF (reportTemplate.reportType = 0 OR reportTemplate.useTableColumnsComments = 1) THEN
     FOR rec_columns_comments IN cur_columns_comments(v_table_ovid) LOOP
        IF (cur_columns_comments%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':ColumnsCommentsCollection>');
        END IF;

          DBMS_LOB.APPEND (res, '<' || single_table_prefix || ':ColumnCommentsDetails>');
          DBMS_LOB.APPEND (res, rec_columns_comments.seq);
          DBMS_LOB.APPEND (res, rec_columns_comments.column_name);
          DBMS_LOB.APPEND (res, rec_columns_comments.column_description);
          DBMS_LOB.APPEND (res, rec_columns_comments.column_notes);
          DBMS_LOB.APPEND (res,'</' || single_table_prefix || ':ColumnCommentsDetails>');

        IF (cur_columns_comments%ROWCOUNT = rec_columns_comments.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':ColumnsCommentsCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Indexes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useTableIndexes = 1) THEN
     FOR rec_indexes IN cur_indexes(v_table_ovid) LOOP
        IF (cur_indexes%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':IndexesCollection>');
        END IF;
     
          DBMS_LOB.APPEND (res, '<' || single_table_prefix || ':IndexDetails>');
          DBMS_LOB.APPEND (res, rec_indexes.idx_name);
          DBMS_LOB.APPEND (res, rec_indexes.state);
          DBMS_LOB.APPEND (res, rec_indexes.functional);
          DBMS_LOB.APPEND (res, rec_indexes.spatial);
          DBMS_LOB.APPEND (res, rec_indexes.expression);
          DBMS_LOB.APPEND (res, rec_indexes.col_name);
          DBMS_LOB.APPEND (res, rec_indexes.sort_order);
          DBMS_LOB.APPEND (res,'</' || single_table_prefix || ':IndexDetails>');
     
        IF (cur_indexes%ROWCOUNT = rec_indexes.total_row_count) THEN
         DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':IndexesCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Constraints
   v_cc_created := FALSE;
   IF (reportTemplate.reportType = 0 OR reportTemplate.useTableConstraints = 1) THEN
     -- Table Level Constraints
     FOR rec_tl_constraints IN cur_tl_constraints(v_table_ovid) LOOP
        IF (cur_tl_constraints%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':ConstraintsCollection>');
          v_cc_created := TRUE;
          DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':TableLevelConstraintsCollection>');
        END IF;

          DBMS_LOB.APPEND (res, '<' || single_table_prefix || ':TableLevelConstraintDetails>');
          DBMS_LOB.APPEND (res, rec_tl_constraints.c_type);
          DBMS_LOB.APPEND (res, rec_tl_constraints.c_name);
          DBMS_LOB.APPEND (res, rec_tl_constraints.c_details);
          DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':TableLevelConstraintDetails>');

        IF (cur_tl_constraints%ROWCOUNT = rec_tl_constraints.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':TableLevelConstraintsCollection>');
        END IF;

     END LOOP;

     -- Column Level Constraints
     FOR rec_cl_constraints IN cur_cl_constraints(v_table_ovid) LOOP
        IF (cur_cl_constraints%ROWCOUNT = 1) THEN
          IF NOT v_cc_created THEN
             DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':ConstraintsCollection>');
             v_cc_created := TRUE;
          END IF;

         DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':ColumnLevelConstraintsCollection>');
         v_cc_created := TRUE;
        END IF;

         DBMS_LOB.APPEND (res, '<' || single_table_prefix || ':ConstraintDetails>');
         DBMS_LOB.APPEND (res, rec_cl_constraints.c_type);
         DBMS_LOB.APPEND (res, rec_cl_constraints.c_name);
         DBMS_LOB.APPEND (res, rec_cl_constraints.c_details);
         DBMS_LOB.APPEND (res,'</' || single_table_prefix || ':ConstraintDetails>');

        IF (cur_cl_constraints%ROWCOUNT = rec_cl_constraints.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':ColumnLevelConstraintsCollection>');
        END IF;
     END LOOP;

     IF v_cc_created THEN
       DBMS_LOB.APPEND (res,'</' || single_table_prefix || ':ConstraintsCollection>');
     END IF;
   END IF;

   -- Foreign Keys Referring To
   IF (reportTemplate.reportType = 0 OR reportTemplate.useTableFKReferringTo = 1) THEN
     FOR rec_fk_referring_to IN cur_fk_referring_to(v_table_ovid) LOOP
        IF (cur_fk_referring_to%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':FKRTCollection>');
        END IF;

         DBMS_LOB.APPEND (res, '<' || single_table_prefix || ':FKRTDetails>');
         DBMS_LOB.APPEND (res, rec_fk_referring_to.fk_name);
         DBMS_LOB.APPEND (res, rec_fk_referring_to.referring_to);
         DBMS_LOB.APPEND (res, rec_fk_referring_to.mandatory);
         DBMS_LOB.APPEND (res, rec_fk_referring_to.transferable);
         DBMS_LOB.APPEND (res, rec_fk_referring_to.in_arc);
         DBMS_LOB.APPEND (res, rec_fk_referring_to.col_name);
         DBMS_LOB.APPEND (res,'</' || single_table_prefix || ':FKRTDetails>');
         
        IF (cur_fk_referring_to%ROWCOUNT = rec_fk_referring_to.total_row_count) THEN
         DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':FKRTCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Foreign Keys Referred From
   IF (reportTemplate.reportType = 0 OR reportTemplate.useTableFKReferredFrom = 1) THEN
     FOR rec_fk_referred_from IN cur_fk_referred_from(v_table_ovid) LOOP
        IF (cur_fk_referred_from%ROWCOUNT = 1) THEN
            DBMS_LOB.APPEND (res,'<' || single_table_prefix || ':FKRFCollection>');
        END IF;

         DBMS_LOB.APPEND (res, '<' || single_table_prefix || ':FKRFDetails>');
         DBMS_LOB.APPEND (res, rec_fk_referred_from.fk_name);
         DBMS_LOB.APPEND (res, rec_fk_referred_from.referred_from);
         DBMS_LOB.APPEND (res, rec_fk_referred_from.mandatory);
         DBMS_LOB.APPEND (res, rec_fk_referred_from.transferable);
         DBMS_LOB.APPEND (res, rec_fk_referred_from.in_arc);
         DBMS_LOB.APPEND (res, rec_fk_referred_from.col_name);
         DBMS_LOB.APPEND (res,'</' || single_table_prefix || ':FKRFDetails>');
        
        IF (cur_fk_referred_from%ROWCOUNT = rec_fk_referred_from.total_row_count) THEN
         DBMS_LOB.APPEND (res, '</' || single_table_prefix || ':FKRFCollection>');
        END IF;
     END LOOP;
   END IF;

   DBMS_LOB.APPEND (res,'</' || single_table_prefix || ':Table>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering single table data ended');

RETURN res;

 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleTable_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleTable_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
	
END Gather_SingleTable_Data;

FUNCTION Gather_AllTables_Data(v_model_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE, objects IN OBJECTS_LIST, v_report_name IN VARCHAR2) RETURN CLOB IS 

res             CLOB;
v_description   VARCHAR2(32767);
v_notes         VARCHAR2(32767);
v_cc_created    BOOLEAN := FALSE;
token_value     CLOB;

-- Common Data
CURSOR cur_common_data(v_m_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_tables_prefix || ':DesignName'),d.design_name).getClobVal()                                      design_name,
        XMLElement(EVALNAME(all_tables_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal() version_date,
        XMLElement(EVALNAME(all_tables_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                   version_comment,
        XMLElement(EVALNAME(all_tables_prefix || ':ModelName'),m.model_name).getClobVal()                                        model_name
 FROM   dmrs_designs d, 
        dmrs_models m
 WHERE  d.design_ovid = m.design_ovid
 AND    m.model_ovid = v_m_ovid;
rec_common_data cur_common_data%ROWTYPE;

-- All Tables General Data
CURSOR cur_all_tables(v_m_ovid IN VARCHAR2) IS
 SELECT /*+ index(t TABLES_FK_IDXV1) */
        XMLElement(EVALNAME(all_tables_prefix || ':TableName'), DECODE(t.schema_name, NULL, '', t.schema_name ||'.') || t.table_name).getClobVal()  table_name,
        XMLElement(EVALNAME(all_tables_prefix || ':EncodedTableName'),t.ovid).getClobVal()															xml_ovid,
        XMLElement(EVALNAME(all_tables_prefix || ':Abbreviation'),t.abbreviation).getClobVal()                                                      abbreviation,
        XMLElement(EVALNAME(all_tables_prefix || ':ClassificationTypeName'),t.classification_type_name).getClobVal()                                class_type_name,
        XMLElement(EVALNAME(all_tables_prefix || ':ObjectTypeName'),t.structured_type_name).getClobVal()                                            obj_type_name,
        XMLElement(EVALNAME(all_tables_prefix || ':NumberOfColumns'),t.number_data_elements).getClobVal()                                           number_cols,
        XMLElement(EVALNAME(all_tables_prefix || ':NumberOfRowsMin'),t.min_volume).getClobVal()                                                     number_rows_min,
        XMLElement(EVALNAME(all_tables_prefix || ':NumberOfRowsMax'),t.max_volume).getClobVal()                                                     number_rows_max,
        XMLElement(EVALNAME(all_tables_prefix || ':ExpectedNumberOfRows'),t.expected_volume).getClobVal()                                           number_rows_expected,
        XMLElement(EVALNAME(all_tables_prefix || ':ExpectedGrowth'),t.growth_rate_percents).getClobVal()                                            growth_expected,
        XMLElement(EVALNAME(all_tables_prefix || ':GrowthInterval'),t.growth_rate_interval).getClobVal()                                            growth_interval,
        XMLElement(EVALNAME(all_tables_prefix || ':FunctionalName'), (SELECT NVL(e.entity_name,'')                        
                                              FROM   dmrs_entities e,
                                                     dmrs_mappings m
                                              WHERE  m.relational_object_ovid = t.ovid
                                              AND    m.logical_object_ovid  = e.ovid
                                              AND    ROWNUM = 1)).getClobVal()                                                                      functional_name, 
       t.ovid                                                                                                                                       table_ovid,
       COUNT(t.table_name) over()                                                                                                                   total_row_count
 FROM 	 dmrs_tables t
 WHERE  t.model_ovid = v_m_ovid
 AND    t.ovid MEMBER OF objects
 ORDER BY t.table_name;
rec_all_tables cur_all_tables%ROWTYPE;

-- Diagrams
CURSOR cur_diagrams(v_t_ovid IN VARCHAR2, v_rep_name IN VARCHAR2) IS

 SELECT XMLElement(EVALNAME(all_tables_prefix || ':Diagram'), 
          XMLElement(EVALNAME(all_tables_prefix || ':Name'), v_rep_name || '_files/' || REGEXP_REPLACE(SUBSTR(d.pdf_name, 1, INSTR(d.pdf_name, '.PDF')-1), '[^a-zA-Z1-9_]', '_') || '.pdf'),
		  XMLElement(EVALNAME(all_tables_prefix || ':Link'), v_rep_name || '_files/' || REGEXP_REPLACE(SUBSTR(d.pdf_name, 1, INSTR(d.pdf_name, '.PDF')-1), '[^a-zA-Z1-9_]', '_') || '.pdf')   link,          
          XMLElement(EVALNAME(all_tables_prefix || ':Suffix'), NULL)).getClobVal()                                                                                                            pdf_name,
        COUNT(d.pdf_name) over()                                                                                                                                                              total_row_count
 FROM   dmrs_vdiagrams d,
       (SELECT diagram_ovid 
        FROM   dmrs_diagram_elements
        WHERE  ovid = v_t_ovid) b
 WHERE d.ovid = b.diagram_ovid
 AND   d.diagram_type = 'Subview'
 AND   d.is_display = 'N';
rec_diagrams cur_diagrams%ROWTYPE;

-- Columns Data
CURSOR cur_columns(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_tables_prefix || ':Sequence'),c.sequence).getClobVal()                                                                                              seq,
        XMLElement(EVALNAME(all_tables_prefix || ':ColumnName'),c.column_name).getClobVal()                                                                                         column_name,
        XMLElement(EVALNAME(all_tables_prefix || ':PK'),c.pk_flag).getClobVal()                                                                                                     pk,
        XMLElement(EVALNAME(all_tables_prefix || ':FK'),c.fk_flag).getClobVal()                                                                                                     fk,
        XMLElement(EVALNAME(all_tables_prefix || ':M'),DECODE(c.mandatory,'N',' ',c.mandatory)).getClobVal()                                                                        m,
        XMLElement(EVALNAME(all_tables_prefix || ':DataTypeKind'),DECODE(c.datatype_kind,                                                                                           
                                                 'Domain',         'DOM',                                                                                   
                                                 'Logical Type',   'LT',                                                                                    
                                                 'Distinct Type',  'DT',                                                                                    
                                                 'Ref Struct Type','RST',                                                                                   
                                                 'Structured Type','ST',                                                                                    
                                                 'Collection Type','CT')                                                                                    
                  ).getClobVal()                                                                                                                             dt_kind,
         XMLElement(EVALNAME(all_tables_prefix || ':DataType'), 
            DECODE(c.datatype_kind, 
                  'Domain', c.logical_type_name ||' '||
                           DECODE (NVL(c.t_size,''),'',
                              DECODE(NVL(c.t_scale,0),0,
                                 DECODE(NVL(c.t_precision,0),0,null,'('|| DECODE(NVL(c.t_precision,0),0,null,c.t_precision) ||')'),
                                   '('|| DECODE(NVL(c.t_precision,0),0,null,c.t_precision) || ',' || DECODE(NVL(c.t_scale,0),0,null,c.t_scale)||')'),
                                   '('||TRIM(DECODE(c.t_size,'',null,c.t_size||' '||c.char_units ))||')'),
                   'Logical Type', c.logical_type_name  ||' '|| 
                           DECODE (NVL(c.t_size,''),'',
                              DECODE(NVL(c.t_scale,0),0,
                                 DECODE(NVL(c.t_precision,0),0,null,'('|| DECODE(NVL(c.t_precision,0),0,null,c.t_precision) ||')'),
                                   '('|| DECODE(NVL(c.t_precision,0),0,null,c.t_precision) || ',' || DECODE(NVL(c.t_scale,0),0,null,c.t_scale)||')'),
                                   '('||TRIM(DECODE(c.t_size,'',null,c.t_size||' '||c.char_units ))||')')
            ) ||
            DECODE (c.auto_increment_column,'Y', ' - AI','') ||
            DECODE (c.identity_column,'Y', ' - ID','')
          ).getClobVal()                                                                                                                                     data_type,
        XMLElement(EVALNAME(all_tables_prefix || ':DomainName'),DECODE(c.domain_name,'Unknown',null,c.domain_name)).getClobVal()                                                     domain_name,
        XMLElement(EVALNAME(all_tables_prefix || ':Formula'),TRIM(c.formula||' '||c.default_value)).getClobVal()                                                                     formula,
        XMLElement(EVALNAME(all_tables_prefix || ':Security'),DECODE(c.personally_id_information ||'/'||c.sensitive_information||'/'||c.mask_for_none_production,'//',
                                      null,c.personally_id_information ||'/'||c.sensitive_information||'/'||c.mask_for_none_production)).getClobVal()        security,
        XMLElement(EVALNAME(all_tables_prefix || ':PreferredAbbreviation'),c.abbreviation).getClobVal()                                                                              abbreviation,
        COUNT(c.column_name) over()                                                                                                                          total_row_count
 FROM 	dmrs_columns c
 WHERE  c.container_ovid = v_t_ovid
 ORDER BY c.sequence;
rec_columns cur_columns%ROWTYPE;

-- Columns Comments Data
CURSOR cur_columns_comments(v_t_ovid IN VARCHAR2) IS
 SELECT a.seq                       seq, 
        a.column_name               column_name, 
        a.column_description        column_description, 
        a.column_notes              column_notes,
        COUNT(a.column_name) over() total_row_count
 FROM (
  SELECT XMLElement(EVALNAME(all_tables_prefix || ':ColumnCommentsSequence'),c.sequence).getStringVal()  seq,
         XMLElement(EVALNAME(all_tables_prefix || ':ColumnCommentsName'),c.column_name).getStringVal()   column_name,
         XMLElement(EVALNAME(all_tables_prefix || ':ColumnDescription'),XMLCDATA(
            NVL(( SELECT t.text comments_in_rdbms
                  FROM   dmrs_large_text t
                  WHERE  t.ovid = c.ovid
                  AND    t.type='Comments'),
                ( SELECT t.text comments_in_rdbms
                  FROM   dmrs_large_text t
                  WHERE  t.ovid = c.ovid
                  AND    t.type='CommentsInRDBMS')))).getClobVal()                                       column_description, 
         XMLElement(EVALNAME(all_tables_prefix || ':ColumnNotes'),XMLCDATA(
                ( SELECT t.text comments_in_rdbms
                  FROM   dmrs_large_text t
                  WHERE  t.ovid = c.ovid
                  AND    t.type='Note'))).getClobVal()                                                   column_notes
  FROM   dmrs_columns c
  WHERE  c.container_ovid = v_t_ovid
  ORDER BY c.sequence
 ) a
 WHERE DBMS_LOB.getlength(column_description) > 0 OR DBMS_LOB.getlength(column_notes) > 0;
rec_columns_comments cur_columns_comments%ROWTYPE;

--Indexes
CURSOR cur_indexes(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_tables_prefix || ':IndexName'),i.index_name).getClobVal()                                                                                        idx_name,
        XMLElement(EVALNAME(all_tables_prefix || ':IndexState'),DECODE(i.state,'Unique Plain Index','UN','Unique Constraint','UK','Primary Constraint','PK',null)).getClobVal()  state,
        XMLElement(EVALNAME(all_tables_prefix || ':IndexFunctional'),DECODE(i.functional,'N',' ',i.functional)).getClobVal()                                                     functional,
        XMLElement(EVALNAME(all_tables_prefix || ':IndexSpatial'),DECODE(i.spatial_index,'N',' ',i.spatial_index)).getClobVal()                                                  spatial,
        XMLElement(EVALNAME(all_tables_prefix || ':IndexExpression'),i.expression).getClobVal()                                                                                  expression,
        XMLElement(EVALNAME(all_tables_prefix || ':IndexColumnName'),c.column_name).getClobVal()                                                                                 col_name,
        XMLElement(EVALNAME(all_tables_prefix || ':IndexSortOrder'),c.sort_order).getClobVal()                                                                                   sort_order,
        c.sequence                                                                                                                                       idx_sequence,
        COUNT(c.column_name) over()                                                                                                                      total_row_count
 FROM   dmrs_tables t,
        dmrs_indexes i,
        dmrs_constr_index_columns c
 WHERE  t.ovid = i.container_ovid
 AND    i.ovid = c.index_ovid
 AND    t.ovid = v_t_ovid
 ORDER BY i.index_name, c.sequence, c.sort_order;
rec_indexes cur_indexes%ROWTYPE;

-- Table Level Constraints
CURSOR cur_tl_constraints(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_tables_prefix || ':TLConstraintType'), CASE WHEN rownum>1 THEN ''
                                               ELSE 'Table Level'
                                               END ).getClobVal()               c_type,
        XMLElement(EVALNAME(all_tables_prefix || ':TLConstraintName'), tc.constraint_name).getClobVal() c_name,
        tc.text                                                                 c_details,
        COUNT(tc.constraint_name) over()                                        total_row_count
 FROM   dmrs_table_constraints tc
 WHERE  tc.table_ovid = v_t_ovid;
rec_tl_constraints cur_tl_constraints%ROWTYPE;

-- Column Level Constraints
CURSOR cur_cl_constraints(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_tables_prefix || ':ContstraintType'), CASE WHEN rownum>1 THEN ''
                                              ELSE 'Column Level'
                                              END).getClobVal()                                        c_type,
        XMLElement(EVALNAME(all_tables_prefix || ':ALCConstraintName'), c.column_name || 
                                                DECODE((SELECT DISTINCT(constraint_name) 
                                                        FROM dmrs_check_constraints 
                                                        WHERE c.ovid = dataelement_ovid),NULL,'',
                                               ' / '|| (SELECT  DISTINCT(constraint_name) 
                                                        FROM dmrs_check_constraints 
                                                        WHERE c.ovid = dataelement_ovid))).getClobVal() c_name,
        Gather_Constraint_Details_XML(c.ovid, all_tables_prefix)                                        c_details,
        COUNT(c.column_name) over()                                                                     total_row_count
 FROM   dmrs_columns c
 WHERE  c.container_ovid = v_t_ovid
 AND    (c.ovid IN (SELECT dataelement_ovid FROM dmrs_avt) OR 
         c.ovid IN (SELECT dataelement_ovid FROM dmrs_value_ranges) OR 
         c.ovid IN (SELECT dataelement_ovid FROM dmrs_check_constraints));
rec_cl_constraints cur_cl_constraints%ROWTYPE;

--Foreign keys referring to other tables
CURSOR cur_fk_referring_to(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_tables_prefix || ':FKName'),CASE WHEN ic.sequence>1 THEN ' '
                                    ELSE fk.fk_name
                                    END
                   ).getClobVal()                                               fk_name,
        XMLElement(EVALNAME(all_tables_prefix || ':FKReferringTo'),CASE WHEN ic.sequence>1 THEN ' '
                                          ELSE fk.referred_table_name
                                          END
                  ).getClobVal()                                                referring_to,
        XMLElement(EVALNAME(all_tables_prefix || ':FKMandatory'),CASE WHEN ic.sequence>1 THEN ' '
                                         ELSE DECODE(fk.mandatory,'Y',fk.mandatory,' ')
                                         END
                  ).getClobVal()                                                mandatory,
        XMLElement(EVALNAME(all_tables_prefix || ':FKTransferable'),CASE WHEN ic.sequence>1 THEN ' '
                                            ELSE DECODE(fk.transferable,'Y',fk.transferable,' ')
                                            END
                  ).getClobVal()                                                transferable,
        XMLElement(EVALNAME(all_tables_prefix || ':FKInArc'),CASE WHEN ic.sequence>1 THEN ' '
                                     ELSE DECODE(fk.in_arc,'Y',fk.in_arc,' ')
                                     END
                  ).getClobVal()                                                in_arc,
        XMLElement(EVALNAME(all_tables_prefix || ':FKColumnName'),ic.column_name).getClobVal()          col_name,
        ic.sequence                                                             seq,
        COUNT(ic.column_name) over()                                            total_row_count
 FROM   dmrs_foreignkeys fk,
        dmrs_constr_fk_columns ic
 WHERE  fk.child_table_ovid = v_t_ovid
 AND    fk.ovid = ic.fk_ovid
 ORDER BY fk.referred_table_name,fk.fk_name, ic.sequence;
rec_fk_referring_to cur_fk_referring_to%ROWTYPE;

--Foreign keys referring from other tables
CURSOR cur_fk_referred_from(v_t_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_tables_prefix || ':FKName'),CASE WHEN ic.sequence>1 THEN ' '
                                    ELSE fk.fk_name
                                    END
                   ).getClobVal()                                               fk_name,
        XMLElement(EVALNAME(all_tables_prefix || ':FKReferredFrom'),CASE WHEN ic.sequence>1 THEN ' '
                                           ELSE fk.child_table_name
                                           END
                  ).getClobVal()                                                referred_from,
        XMLElement(EVALNAME(all_tables_prefix || ':FKMandatory'),CASE WHEN ic.sequence>1 THEN ' '
                                         ELSE DECODE(fk.mandatory,'Y',fk.mandatory,' ')
                                         END
                  ).getClobVal()                                                mandatory,
        XMLElement(EVALNAME(all_tables_prefix || ':FKTransferable'),CASE WHEN ic.sequence>1 THEN ' '
                                            ELSE DECODE(fk.transferable,'Y',fk.transferable,' ')
                                            END
                  ).getClobVal()                                                transferable,
        XMLElement(EVALNAME(all_tables_prefix || ':FKInArc'),CASE WHEN ic.sequence>1 THEN ' '
                                     ELSE DECODE(fk.in_arc,'Y',fk.in_arc,' ')
                                     END
                  ).getClobVal()                                                in_arc,
        XMLElement(EVALNAME(all_tables_prefix || ':FKColumnName'),ic.column_name).getClobVal()          col_name,
        ic.sequence                                                             seq,
        COUNT(ic.column_name) over()                                            total_row_count
 FROM   dmrs_foreignkeys fk,
        dmrs_constr_fk_columns ic
 WHERE  fk.referred_table_ovid = v_t_ovid
 AND    fk.ovid = ic.fk_ovid
 ORDER BY fk.child_table_name,fk.fk_name, ic.sequence;
rec_fk_referred_from cur_fk_referred_from%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering all tables data started ...');

  DBMS_LOB.CREATETEMPORARY(res, TRUE);
  DBMS_LOB.APPEND (res,'<' || all_tables_prefix || ':Tables xmlns:' || all_tables_prefix || '="http://oracle.com/datamodeler/reports/tables">');

   -- Common Data
   FOR rec_common_data IN cur_common_data(v_model_ovid) LOOP

      DBMS_LOB.APPEND (res, rec_common_data.design_name);
      DBMS_LOB.APPEND (res, rec_common_data.version_date);
      DBMS_LOB.APPEND (res, rec_common_data.version_comment);
      DBMS_LOB.APPEND (res, rec_common_data.model_name);
 
   END LOOP;

   FOR rec_all_tables IN cur_all_tables(v_model_ovid) LOOP

      IF (cur_all_tables%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':TablesCollection>');
      END IF;
      
      DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':TableDetails>');

      -- Description / Notes
      IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN
      
         DBMS_LOB.APPEND (res, '<'||all_tables_prefix||':DescriptionNotes>');
         
         SELECT 
            XMLElement(EVALNAME(all_tables_prefix || ':Description'), XMLCDATA(
               NVL((SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = rec_all_tables.table_ovid
                    AND    t.type='Comments'),
                  ( SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = rec_all_tables.table_ovid
                    AND    t.type='CommentsInRDBMS')))).getClobVal(), 
            XMLElement(EVALNAME(all_tables_prefix || ':Notes'), XMLCDATA(
                  ( SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = rec_all_tables.table_ovid
                    AND    t.type='Note'))).getClobVal()
         INTO   v_description, 
                v_notes
         FROM  dual;

        DBMS_LOB.APPEND (res, v_description);
        DBMS_LOB.APPEND (res, v_notes);
        DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':DescriptionNotes>');
         
      END IF;

         DBMS_LOB.APPEND (res, rec_all_tables.table_name);
         DBMS_LOB.APPEND (res, rec_all_tables.xml_ovid);
         DBMS_LOB.APPEND (res, rec_all_tables.functional_name);      
         DBMS_LOB.APPEND (res, rec_all_tables.abbreviation);
         DBMS_LOB.APPEND (res, rec_all_tables.class_type_name);
         DBMS_LOB.APPEND (res, rec_all_tables.obj_type_name);
       IF (reportTemplate.reportType = 0 OR reportTemplate.useQuantitativeInfo = 1) THEN
         DBMS_LOB.APPEND (res, '<'||all_tables_prefix||':QuantitativeInfoCollection>');
         DBMS_LOB.APPEND (res, rec_all_tables.number_cols);
         DBMS_LOB.APPEND (res, rec_all_tables.number_rows_min);
         DBMS_LOB.APPEND (res, rec_all_tables.number_rows_max);
         DBMS_LOB.APPEND (res, rec_all_tables.number_rows_expected);
         DBMS_LOB.APPEND (res, rec_all_tables.growth_expected);
         DBMS_LOB.APPEND (res, rec_all_tables.growth_interval);
         DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':QuantitativeInfoCollection>');
       END IF;

       -- Diagrams
       IF (reportTemplate.reportType = 0 OR reportTemplate.useDiagrams = 1) THEN
         FOR rec_diagrams IN cur_diagrams(rec_all_tables.table_ovid, v_report_name) LOOP
            IF (cur_diagrams%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':DiagramsCollection>');
            END IF;
              
              DBMS_LOB.APPEND (res, rec_diagrams.pdf_name);
       
            IF (cur_diagrams%ROWCOUNT = rec_diagrams.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':DiagramsCollection>');
            END IF;
         END LOOP;
       END IF;

       -- Columns
       IF (reportTemplate.reportType = 0 OR reportTemplate.useTableColumns = 1) THEN
         FOR rec_columns IN cur_columns(rec_all_tables.table_ovid) LOOP
            IF (cur_columns%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':ColumnsCollection>');
            END IF;

              DBMS_LOB.APPEND (res, '<'||all_tables_prefix||':ColumnDetails>');
              DBMS_LOB.APPEND (res, rec_columns.seq);
              DBMS_LOB.APPEND (res, rec_columns.column_name);
              DBMS_LOB.APPEND (res, rec_columns.pk);
              DBMS_LOB.APPEND (res, rec_columns.fk);
              DBMS_LOB.APPEND (res, rec_columns.m);
              IF (INSTR(LOWER(rec_columns.data_type),'unknown') = 0) THEN
                DBMS_LOB.APPEND (res, rec_columns.data_type);
              ELSE
                SELECT XMLElement(EVALNAME(all_tables_prefix || ':DataType'), '').getClobVal() INTO token_value FROM dual;
                DBMS_LOB.APPEND (res, token_value);
              END IF;
              DBMS_LOB.APPEND (res, rec_columns.dt_kind);
              DBMS_LOB.APPEND (res, rec_columns.domain_name);
              DBMS_LOB.APPEND (res, rec_columns.formula);
              DBMS_LOB.APPEND (res, rec_columns.security);
              DBMS_LOB.APPEND (res, rec_columns.abbreviation);
              DBMS_LOB.APPEND (res,'</'||all_tables_prefix||':ColumnDetails>');

            IF (cur_columns%ROWCOUNT = rec_columns.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':ColumnsCollection>');
            END IF;
         END LOOP;
       END IF;

       -- Columns Comments
       IF (reportTemplate.reportType = 0 OR reportTemplate.useTableColumnsComments = 1) THEN
         FOR rec_columns_comments IN cur_columns_comments(rec_all_tables.table_ovid) LOOP
            IF (cur_columns_comments%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':ColumnsCommentsCollection>');
            END IF;

            DBMS_LOB.APPEND (res, '<' || all_tables_prefix || ':ColumnCommentsDetails>');
            DBMS_LOB.APPEND (res, rec_columns_comments.seq);
            DBMS_LOB.APPEND (res, rec_columns_comments.column_name);
            DBMS_LOB.APPEND (res, rec_columns_comments.column_description);
            DBMS_LOB.APPEND (res, rec_columns_comments.column_notes);
            DBMS_LOB.APPEND (res,'</' || all_tables_prefix || ':ColumnCommentsDetails>');

            IF (cur_columns_comments%ROWCOUNT = rec_columns_comments.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':ColumnsCommentsCollection>');
            END IF;
         END LOOP;
       END IF;

       -- Indexes
       IF (reportTemplate.reportType = 0 OR reportTemplate.useTableIndexes = 1) THEN
       		FOR rec_indexes IN cur_indexes(rec_all_tables.table_ovid) LOOP
       		   IF (cur_indexes%ROWCOUNT = 1) THEN
       		     DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':IndexesCollection>');
       		   END IF;

       		     DBMS_LOB.APPEND (res, '<'||all_tables_prefix||':IndexDetails>');
       		     DBMS_LOB.APPEND (res, rec_indexes.idx_name);
       		     DBMS_LOB.APPEND (res, rec_indexes.state);
       		     DBMS_LOB.APPEND (res, rec_indexes.functional);
       		     DBMS_LOB.APPEND (res, rec_indexes.spatial);
       		     DBMS_LOB.APPEND (res, rec_indexes.expression);
       		     DBMS_LOB.APPEND (res, rec_indexes.col_name);
       		     DBMS_LOB.APPEND (res, rec_indexes.sort_order);
       		     DBMS_LOB.APPEND (res,'</'||all_tables_prefix||':IndexDetails>');

       		   IF (cur_indexes%ROWCOUNT = rec_indexes.total_row_count) THEN
       		    DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':IndexesCollection>');
       		   END IF;
       		END LOOP;
       END IF;

       v_cc_created := FALSE;
       -- Constraints
       IF (reportTemplate.reportType = 0 OR reportTemplate.useTableConstraints = 1) THEN
         -- Table Level Constraints
         FOR rec_tl_constraints IN cur_tl_constraints(rec_all_tables.table_ovid) LOOP
            IF (cur_tl_constraints%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':ConstraintsCollection>');
              v_cc_created := TRUE;
              DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':TableLevelConstraintsCollection>');
            END IF;

            DBMS_LOB.APPEND (res, '<' || all_tables_prefix || ':TableLevelConstraintDetails>');
            DBMS_LOB.APPEND (res, rec_tl_constraints.c_type);
            DBMS_LOB.APPEND (res, rec_tl_constraints.c_name);
            DBMS_LOB.APPEND (res, rec_tl_constraints.c_details);
            DBMS_LOB.APPEND (res, '</' || all_tables_prefix || ':TableLevelConstraintDetails>');

            IF (cur_tl_constraints%ROWCOUNT = rec_tl_constraints.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':TableLevelConstraintsCollection>');
            END IF;

         END LOOP;

         -- Column Level Constraints
         FOR rec_cl_constraints IN cur_cl_constraints(rec_all_tables.table_ovid) LOOP
            IF (cur_cl_constraints%ROWCOUNT = 1) THEN
              IF NOT v_cc_created THEN
                 DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':ConstraintsCollection>');
                 v_cc_created := TRUE;
              END IF;

             DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':ColumnLevelConstraintsCollection>');
             v_cc_created := TRUE;
            END IF;

             DBMS_LOB.APPEND (res, '<'||all_tables_prefix||':ConstraintDetails>');
             DBMS_LOB.APPEND (res, rec_cl_constraints.c_type);
             DBMS_LOB.APPEND (res, rec_cl_constraints.c_name);
             DBMS_LOB.APPEND (res, rec_cl_constraints.c_details);
             DBMS_LOB.APPEND (res,'</'||all_tables_prefix||':ConstraintDetails>');

            IF (cur_cl_constraints%ROWCOUNT = rec_cl_constraints.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':ColumnLevelConstraintsCollection>');
            END IF;
         END LOOP;
         
         IF v_cc_created THEN
           DBMS_LOB.APPEND (res,'</'||all_tables_prefix||':ConstraintsCollection>');
         END IF;
       END IF;

       -- Foreign Keys Referring To
       IF (reportTemplate.reportType = 0 OR reportTemplate.useTableFKReferringTo = 1) THEN
         FOR rec_fk_referring_to IN cur_fk_referring_to(rec_all_tables.table_ovid) LOOP
            IF (cur_fk_referring_to%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':FKRTCollection>');
            END IF;
         
             DBMS_LOB.APPEND (res, '<'||all_tables_prefix||':FKRTDetails>');
             DBMS_LOB.APPEND (res, rec_fk_referring_to.fk_name);
             DBMS_LOB.APPEND (res, rec_fk_referring_to.referring_to);
             DBMS_LOB.APPEND (res, rec_fk_referring_to.mandatory);
             DBMS_LOB.APPEND (res, rec_fk_referring_to.transferable);
             DBMS_LOB.APPEND (res, rec_fk_referring_to.in_arc);
             DBMS_LOB.APPEND (res, rec_fk_referring_to.col_name);
             DBMS_LOB.APPEND (res,'</'||all_tables_prefix||':FKRTDetails>');
            
            IF (cur_fk_referring_to%ROWCOUNT = rec_fk_referring_to.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':FKRTCollection>');
            END IF;
         END LOOP;
      END IF;
         
       -- Foreign Keys Referred From
       IF (reportTemplate.reportType = 0 OR reportTemplate.useTableFKReferredFrom = 1) THEN         
         FOR rec_fk_referred_from IN cur_fk_referred_from(rec_all_tables.table_ovid) LOOP
            IF (cur_fk_referred_from%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<'||all_tables_prefix||':FKRFCollection>');
            END IF;
           
             DBMS_LOB.APPEND (res, '<'||all_tables_prefix||':FKRFDetails>');
             DBMS_LOB.APPEND (res, rec_fk_referred_from.fk_name);
             DBMS_LOB.APPEND (res, rec_fk_referred_from.referred_from);
             DBMS_LOB.APPEND (res, rec_fk_referred_from.mandatory);
             DBMS_LOB.APPEND (res, rec_fk_referred_from.transferable);
             DBMS_LOB.APPEND (res, rec_fk_referred_from.in_arc);
             DBMS_LOB.APPEND (res, rec_fk_referred_from.col_name);
             DBMS_LOB.APPEND (res,'</'||all_tables_prefix||':FKRFDetails>');

            IF (cur_fk_referred_from%ROWCOUNT = rec_fk_referred_from.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</'||all_tables_prefix||':FKRFCollection>');
            END IF;
         END LOOP;
       END IF;

      DBMS_LOB.APPEND (res,'</'||all_tables_prefix||':TableDetails>');

      IF (cur_all_tables%ROWCOUNT = rec_all_tables.total_row_count) THEN
          DBMS_LOB.APPEND (res,'</'||all_tables_prefix||':TablesCollection>');
      END IF;

   END LOOP;

  DBMS_LOB.APPEND (res,'</'||all_tables_prefix||':Tables>');
  
  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering all tables data ended.');
	
RETURN res;
	
 EXCEPTION
  WHEN others THEN
   UTL_FILE.PUT_LINE(log_file, 'Gathering all tables Exception : : ' || SQLERRM);  
   UTL_FILE.PUT_LINE(log_file, 'Gathering all tables Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
  
END Gather_AllTables_Data;

FUNCTION Gather_SingleEntity_Data(v_entity_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE, v_report_name IN VARCHAR2) RETURN CLOB IS 

res               CLOB;
v_notes           CLOB;
v_description     CLOB;
v_rel_total_count INTEGER;
token_value       CLOB;

CURSOR cur_general_data(v_e_ovid IN VARCHAR2) IS
 -- General data
 SELECT XMLElement(EVALNAME(single_entity_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(single_entity_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(single_entity_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                     version_comment,
        XMLElement(EVALNAME(single_entity_prefix || ':ModelName'),m.model_name).getClobVal()                                          model_name
 FROM   dmrs_designs d, 
        dmrs_models m,
        dmrs_entities e
 WHERE  d.design_ovid = m.design_ovid
 AND    e.model_ovid = m.model_ovid
 AND    e.ovid = v_e_ovid;
rec_general_data cur_general_data%ROWTYPE;

CURSOR cur_entity(v_e_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_entity_prefix || ':EntityName'),e.entity_name).getClobVal()                                                                        entity_name,
        XMLElement(EVALNAME(single_entity_prefix || ':ClassificationTypeName'),e.classification_type_name).getClobVal()                                               classification_type_name,
        XMLElement(EVALNAME(single_entity_prefix || ':Abbreviation'),e.preferred_abbreviation).getClobVal()                                                           pref_abbreviation, 
        XMLElement(EVALNAME(single_entity_prefix || ':SuperType'),(SELECT e1.entity_name FROM  dmrs_entities e1 WHERE e.supertypeentity_ovid = e1.ovid)).getClobVal() super_type,
        XMLElement(EVALNAME(single_entity_prefix || ':Synonyms'), e.synonyms).getClobVal()                                                                            table_synonyms,
        XMLElement(EVALNAME(single_entity_prefix || ':ObjectTypeName'),e.structured_type_name).getClobVal()                                                           object_type_name,
        XMLElement(EVALNAME(single_entity_prefix || ':NumberOfAttributes'),e.number_data_elements).getClobVal()                                                       number_of_attributes, 
        XMLElement(EVALNAME(single_entity_prefix || ':NumberOfRowsMin'),e.min_volume).getClobVal()                                                                    number_rows_min, 
        XMLElement(EVALNAME(single_entity_prefix || ':NumberOfRowsMax'),e.max_volume).getClobVal()                                                                    number_rows_max, 
        XMLElement(EVALNAME(single_entity_prefix || ':ExpectedNumberOfRows'),e.expected_volume).getClobVal()                                                          expected_number_of_rows, 
        XMLElement(EVALNAME(single_entity_prefix || ':ExpectedGrowth'),e.growth_rate_percents).getClobVal()                                                           expected_growth,
        XMLElement(EVALNAME(single_entity_prefix || ':GrowthInterval'),e.growth_rate_interval).getClobVal()                                                           growth_interval
 FROM   dmrs_entities e
 WHERE  e.ovid = v_e_ovid;
rec_entity cur_entity%ROWTYPE;

CURSOR cur_mapped_tables(v_e_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_entity_prefix || ':TableName'),t.model_name||'.'||t.table_name).getClobVal() table_name,
        COUNT(t.table_name) over()                                total_row_count
 FROM   dmrs_entities e,
        dmrs_tables t,
        dmrs_mappings m
 WHERE  m.relational_object_ovid = t.ovid
 AND    m.logical_object_ovid = e.ovid
 AND    e.ovid = v_e_ovid;
rec_mapped_tables cur_mapped_tables%ROWTYPE;

-- Diagrams
CURSOR cur_diagrams(v_t_ovid IN VARCHAR2, v_rep_name IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_entity_prefix || ':Diagram'), 
          XMLElement(EVALNAME(single_entity_prefix || ':Name'), v_rep_name || '_files/' || REGEXP_REPLACE(SUBSTR(d.pdf_name, 1, INSTR(d.pdf_name, '.PDF')-1), '[^a-zA-Z1-9_]', '_') || '.pdf'),
          XMLElement(EVALNAME(single_entity_prefix || ':Suffix'), NULL)).getClobVal()                                                                                                            pdf_name,
        COUNT(d.pdf_name) over()                                                                                                                                                                 total_row_count
 FROM   dmrs_vdiagrams d,
       (SELECT diagram_ovid 
        FROM   dmrs_diagram_elements
        WHERE  ovid = v_t_ovid) b
 WHERE d.ovid = b.diagram_ovid
 AND   d.diagram_type = 'Subview'
 AND   d.is_display = 'N';
rec_diagrams cur_diagrams%ROWTYPE;

-- Attributes
CURSOR cur_attributes(v_e_ovid IN VARCHAR2) IS
 SELECT  XMLElement(EVALNAME(single_entity_prefix || ':Sequence'),a.sequence).getClobVal()                                                                                             seq, 
         XMLElement(EVALNAME(single_entity_prefix || ':AttributeName'),a.attribute_name).getClobVal()                                                                                  attr_name,
         XMLElement(EVALNAME(single_entity_prefix || ':DataTypeKind'),DECODE(a.datatype_kind,
                                                 'Domain',         'DOM',
                                                 'Logical Type',   'LT',
                                                 'Distinct Type',  'DT',
                                                 'Ref Struct Type','RST',
                                                 'Structured Type','ST',
                                                 'Collection Type','CT')                                                                                
                   ).getClobVal()                                                                                                                           dt_kind,
         XMLElement(EVALNAME(single_entity_prefix || ':DomainName'),DECODE(a.domain_name,'Unknown',null,a.domain_name)).getClobVal()                                                   domain_name,
         XMLElement(EVALNAME(single_entity_prefix || ':DataType'), 
            DECODE(a.datatype_kind, 
                  'Domain', a.logical_type_name ||' '||
                           DECODE (NVL(a.t_size,''),'',
                              DECODE(NVL(a.t_scale,0),0,
                                 DECODE(NVL(a.t_precision,0),0,null,'('|| DECODE(NVL(a.t_precision,0),0,null,a.t_precision) ||')'),
                                   '('|| DECODE(NVL(a.t_precision,0),0,null,a.t_precision) || ',' || DECODE(NVL(a.t_scale,0),0,null,a.t_scale)||')'),
                                   '('||TRIM(DECODE(a.t_size,'',null,a.t_size||' '||a.char_units ))||')'),
                   'Logical Type', a.logical_type_name  ||' '|| 
                           DECODE (NVL(a.t_size,''),'',
                              DECODE(NVL(a.t_scale,0),0,
                                 DECODE(NVL(a.t_precision,0),0,null,'('|| DECODE(NVL(a.t_precision,0),0,null,a.t_precision) ||')'),
                                   '('|| DECODE(NVL(a.t_precision,0),0,null,a.t_precision) || ',' || DECODE(NVL(a.t_scale,0),0,null,a.t_scale)||')'),
                                   '('||TRIM(DECODE(a.t_size,'',null,a.t_size||' '||a.char_units ))||')')
            )
          ).getClobVal()                                                                                                                                   data_type,
         XMLElement(EVALNAME(single_entity_prefix || ':PK'),a.pk_flag).getClobVal()                                                                                                    pk,
         XMLElement(EVALNAME(single_entity_prefix || ':FK'),a.fk_flag).getClobVal()                                                                                                    fk,
         XMLElement(EVALNAME(single_entity_prefix || ':M'),DECODE(a.mandatory,'N',' ',a.mandatory)).getClobVal()                                                                       m,
         XMLElement(EVALNAME(single_entity_prefix || ':Formula'),TRIM(a.formula||' '||a.default_value)).getClobVal()                                                                   formula,
         XMLElement(EVALNAME(single_entity_prefix || ':AttributeSynonyms'),a.synonyms).getClobVal()                                                                                    synonyms,
         XMLElement(EVALNAME(single_entity_prefix || ':PreferredAbbreviation'),a.preferred_abbreviation).getClobVal()                                                                  pref_abbr,
         COUNT(a.sequence) over()                                                                                                                           total_row_count
  FROM   dmrs_attributes a
  WHERE  a.container_ovid = v_e_ovid
  ORDER BY a.sequence;
rec_attributes cur_attributes%ROWTYPE;

-- Attributes Comments Data
CURSOR cur_attributes_comments(v_e_ovid IN VARCHAR2) IS
 SELECT a.seq                          seq, 
        a.attribute_name               attribute_name, 
        a.attribute_description        attribute_description, 
        a.attribute_notes              attribute_notes,
        COUNT(a.attribute_name) over() total_row_count
 FROM (
  SELECT XMLElement(EVALNAME(single_entity_prefix || ':AttributeCommentsSequence'),a.sequence).getStringVal()     seq,
         XMLElement(EVALNAME(single_entity_prefix || ':AttributeCommentsName'),a.attribute_name).getStringVal()   attribute_name,
         XMLElement(EVALNAME(single_entity_prefix || ':AttributeDescription'),XMLCDATA(
         NVL(
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = a.ovid
         AND    t.type='Comments'),
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = a.ovid
         AND    t.type='CommentsInRDBMS')))).getClobVal()                                                         attribute_description, 
        XMLElement(EVALNAME(single_entity_prefix || ':AttributeNotes'),XMLCDATA(
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = a.ovid
         AND    t.type='Note'))).getClobVal()                                                                     attribute_notes
  FROM   dmrs_entities e, 
         dmrs_attributes a
  WHERE  e.ovid = a.container_ovid
  and    e.ovid = v_e_ovid
  ORDER BY a.sequence
 ) a
 WHERE DBMS_LOB.getlength(attribute_description) > 0 OR DBMS_LOB.getlength(attribute_notes) > 0;
rec_attributes_comments cur_attributes_comments%ROWTYPE;

CURSOR cur_identifiers(v_e_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_entity_prefix || ':IdentifierName'),CASE WHEN ke.sequence>1 THEN ' ' ELSE ke.key_name END).getClobVal()                          nn,
        XMLElement(EVALNAME(single_entity_prefix || ':PrimaryIdentifier'),CASE WHEN ke.sequence>1 THEN ' ' ELSE DECODE(k.state,'Primary Key','Y') END).getClobVal() pi, 
        XMLElement(EVALNAME(single_entity_prefix || ':ElementName'),ke.element_name).getClobVal()                                                                   element_name,
        XMLElement(EVALNAME(single_entity_prefix || ':ElementType'),ke.type).getClobVal()                                                                           type,
        XMLElement(EVALNAME(single_entity_prefix || ':SourceLabel'),ke.source_label).getClobVal()                                                                   source_label,
        XMLElement(EVALNAME(single_entity_prefix || ':TargetLabel'),ke.target_label).getClobVal()                                                                   target_label,
        COUNT(ke.sequence) over()                                                                                                        total_row_count
 FROM   dmrs_keys          k,
        dmrs_key_elements ke
 WHERE  k.container_ovid = v_e_ovid
 AND   ke.key_ovid = k.ovid
 ORDER BY ke.sequence;
rec_identifiers cur_identifiers%ROWTYPE;

CURSOR cur_relationships(v_e_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_entity_prefix || ':SourceName'),r.target_entity_name).getClobVal()                                                                  source_name, 
        XMLElement(EVALNAME(single_entity_prefix || ':SourceRole'),r.source_label).getClobVal()                                                                        source_role,
        XMLElement(EVALNAME(single_entity_prefix || ':TargetRole'),r.target_label).getClobVal()                                                                        target_role,
        XMLElement(EVALNAME(single_entity_prefix || ':InArc'),DECODE(r.in_arc,'N','',r.in_arc)).getClobVal()                                                           in_arc,
        XMLElement(EVALNAME(single_entity_prefix || ':Cardinality'),
           DECODE(r.source_optional,'Y',0,'1') || '..' || r.sourceto_target_cardinality
           ||':'||
           DECODE(r.target_optional,'Y',0,'1') || '..' || r.targetto_source_cardinality
           ).getClobVal()                                                                                                                  cardinality,
        XMLElement(EVALNAME(single_entity_prefix || ':DominantRole'),DECODE(r.dominant_role,'None','')).getClobVal()                                                   dominant_role,
        XMLElement(EVALNAME(single_entity_prefix || ':Identifying'),DECODE(r.identifying,'N','',r.identifying)).getClobVal()                                           identifying,
        XMLElement(EVALNAME(single_entity_prefix || ':Transferable'),DECODE(r.transferable,'N','',r.transferable)).getClobVal()                                        transferable
 FROM   dmrs_relationships r
 WHERE  r.source_ovid  = v_e_ovid
 UNION ALL
 SELECT XMLElement(EVALNAME(single_entity_prefix || ':SourceName'),r.source_entity_name).getClobVal()                                                                  source_name, 
        XMLElement(EVALNAME(single_entity_prefix || ':SourceRole'),r.source_label).getClobVal()                                                                        source_role,
        XMLElement(EVALNAME(single_entity_prefix || ':TargetRole'),r.target_label).getClobVal()                                                                        target_role,
        XMLElement(EVALNAME(single_entity_prefix || ':InArc'),DECODE(r.in_arc,'N','',r.in_arc)).getClobVal()                                                           in_arc,
        XMLElement(EVALNAME(single_entity_prefix || ':Cardinality'),
           DECODE(r.source_optional,'Y',0,'1') || '..' || r.sourceto_target_cardinality
           ||':'||
           DECODE(r.target_optional,'Y',0,'1') || '..' || r.targetto_source_cardinality
           ).getClobVal()                                                                                                                  cardinality,
        XMLElement(EVALNAME(single_entity_prefix || ':DominantRole'),DECODE(r.dominant_role,'None','')).getClobVal()                                                   dominant_role,
        XMLElement(EVALNAME(single_entity_prefix || ':Identifying'),DECODE(r.identifying,'N','',r.identifying)).getClobVal()                                           identifying,
        XMLElement(EVALNAME(single_entity_prefix || ':Transferable'),DECODE(r.transferable,'N','',r.transferable)).getClobVal()                                        transferable
 FROM   dmrs_relationships r
 WHERE  r.target_ovid  = v_e_ovid;
rec_relationships cur_relationships%ROWTYPE;

CURSOR cur_incoming_processes(v_e_ovid IN VARCHAR2) IS
 SELECT  XMLElement(EVALNAME(single_entity_prefix || ':IncomingProcessName'), NVL(pe.process_name,' ')).getClobVal()  ipr_name,
         XMLElement(EVALNAME(single_entity_prefix || ':IncomingFlowName'), NVL(pe.flow_name,' ')).getClobVal()       ipr_flow_name,
         XMLElement(EVALNAME(single_entity_prefix || ':IncomingCRUDCode'), NVL(pe.crud_code,' ')).getClobVal()       ipr_crud_code,
         XMLElement(EVALNAME(single_entity_prefix || ':IncomingDFDName'), NVL(pe.dfd_name,' ')).getClobVal()         ipr_dfd_name,
         COUNT(pe.process_name) over()                                                    total_row_count
  FROM   dmrs_process_entities pe
  WHERE  pe.entity_ovid = v_e_ovid
  AND    pe.flow_direction = 'IN'
  ORDER BY pe.process_name;
rec_incoming_processes cur_incoming_processes%ROWTYPE;

CURSOR cur_outgoing_processes(v_e_ovid IN VARCHAR2) IS
  SELECT XMLElement(EVALNAME(single_entity_prefix || ':OutgoingProcessName'), pe.process_name).getClobVal() opr_name,
         XMLElement(EVALNAME(single_entity_prefix || ':OutgoingFlowName'), pe.flow_name).getClobVal()       opr_flow_name,
         XMLElement(EVALNAME(single_entity_prefix || ':OutgoingCRUDCode'), pe.crud_code).getClobVal()       opr_crud_code,
         XMLElement(EVALNAME(single_entity_prefix || ':OutgoingDFDName'), pe.dfd_name).getClobVal()         opr_dfd_name,
         COUNT(pe.process_name) over()                                           total_row_count
  FROM   dmrs_process_entities pe
  WHERE  pe.entity_ovid = v_e_ovid
  AND    pe.flow_direction = 'OUT'
  ORDER BY pe.process_name;
rec_outgoing_processes cur_outgoing_processes%ROWTYPE;

-- Constraints
CURSOR cur_constraints(v_e_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_entity_prefix || ':ContstraintType'), CASE WHEN rownum>1 THEN ''
                                              ELSE 'Attribute Level'
                                              END).getClobVal()                                        c_type,
        XMLElement(EVALNAME(single_entity_prefix || ':ALCConstraintName'), a.attribute_name || 
                                                DECODE((SELECT DISTINCT(constraint_name)
                                                        FROM dmrs_check_constraints 
                                                        WHERE a.ovid = dataelement_ovid),NULL,'',
                                               ' / '|| (SELECT  DISTINCT(constraint_name) 
                                                        FROM dmrs_check_constraints 
                                                        WHERE a.ovid = dataelement_ovid))).getClobVal() c_name,
        Gather_Constraint_Details_XML(a.ovid, single_entity_prefix)                                     c_details,
        COUNT(a.attribute_name) over()                                                                  total_row_count
 FROM   dmrs_attributes a
 WHERE a.container_ovid = v_e_ovid
 AND  (a.ovid IN (SELECT dataelement_ovid FROM dmrs_avt) OR 
       a.ovid IN (SELECT dataelement_ovid FROM dmrs_value_ranges) OR 
       a.ovid IN (SELECT dataelement_ovid FROM dmrs_check_constraints));
rec_constraints cur_constraints%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering single entity data started ...');

  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || single_entity_prefix || ':Entity xmlns:' || single_entity_prefix || '="http://oracle.com/datamodeler/reports/entity">');

   FOR rec_general_data IN cur_general_data(v_entity_ovid) LOOP
   
      DBMS_LOB.APPEND (res, rec_general_data.design_name);
      DBMS_LOB.APPEND (res, rec_general_data.version_date);
      DBMS_LOB.APPEND (res, rec_general_data.version_comment);
      DBMS_LOB.APPEND (res, rec_general_data.model_name);

   END LOOP;

   -- Mapped tables
   FOR rec_mapped_tables IN cur_mapped_tables(v_entity_ovid) LOOP
      IF (cur_mapped_tables%ROWCOUNT = 1) THEN
        DBMS_LOB.APPEND (res,'<' || single_entity_prefix || ':MappedTablesCollection>');
      END IF;

        DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':MappedTablesDetails>');
        DBMS_LOB.APPEND (res, rec_mapped_tables.table_name);
        DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':MappedTablesDetails>');

      IF (cur_mapped_tables%ROWCOUNT = rec_mapped_tables.total_row_count) THEN
        DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':MappedTablesCollection>');
      END IF;
   END LOOP;

   -- Description / Notes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN
   
    DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':DescriptionNotes>');
     
    SELECT  XMLElement(EVALNAME(single_entity_prefix || ':Description'), XMLCDATA(
              NVL((SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = v_entity_ovid
                    AND    t.type='Comments'),
                   (SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = v_entity_ovid
                    AND    t.type='CommentsInRDBMS')))).getClobVal(), 
            XMLElement(EVALNAME(single_entity_prefix || ':Notes'), XMLCDATA(
                    (SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = v_entity_ovid
                    AND    t.type='Note'))).getClobVal()
    INTO    v_description, 
            v_notes
    FROM  dual;

    DBMS_LOB.APPEND (res, v_description);
    DBMS_LOB.APPEND (res, v_notes);

    DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':DescriptionNotes>');
     
   END IF;

   FOR rec_entity IN cur_entity(v_entity_ovid) LOOP
      DBMS_LOB.APPEND (res, rec_entity.entity_name);
      DBMS_LOB.APPEND (res, rec_entity.pref_abbreviation);      
      DBMS_LOB.APPEND (res, rec_entity.classification_type_name);
      DBMS_LOB.APPEND (res, rec_entity.object_type_name);
      DBMS_LOB.APPEND (res, rec_entity.super_type);
      DBMS_LOB.APPEND (res, rec_entity.table_synonyms);
      IF (reportTemplate.reportType = 0 OR reportTemplate.useQuantitativeInfo = 1) THEN
        DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':QuantitativeInfoCollection>');
        DBMS_LOB.APPEND (res, rec_entity.number_of_attributes);
        DBMS_LOB.APPEND (res, rec_entity.number_rows_min);
        DBMS_LOB.APPEND (res, rec_entity.number_rows_max);
        DBMS_LOB.APPEND (res, rec_entity.expected_number_of_rows);
        DBMS_LOB.APPEND (res, rec_entity.expected_growth);
        DBMS_LOB.APPEND (res, rec_entity.growth_interval);
        DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':QuantitativeInfoCollection>');
      END IF;
   END LOOP;

   -- Diagrams
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDiagrams = 1) THEN
     FOR rec_diagrams IN cur_diagrams(v_entity_ovid, v_report_name) LOOP
        IF (cur_diagrams%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_entity_prefix || ':DiagramsCollection>');
        END IF;
          
          DBMS_LOB.APPEND (res, rec_diagrams.pdf_name);

        IF (cur_diagrams%ROWCOUNT = rec_diagrams.total_row_count) THEN
         DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':DiagramsCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Attributes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityAttributes = 1) THEN
     FOR rec_attributes IN cur_attributes(v_entity_ovid) LOOP
        IF (cur_attributes%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_entity_prefix || ':AttributesCollection>');
        END IF;

          DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':AttributeDetails>');
          DBMS_LOB.APPEND (res, rec_attributes.seq);
          DBMS_LOB.APPEND (res, rec_attributes.attr_name);
          DBMS_LOB.APPEND (res, rec_attributes.pk);
          DBMS_LOB.APPEND (res, rec_attributes.fk);
          DBMS_LOB.APPEND (res, rec_attributes.m);
          IF (INSTR(LOWER(rec_attributes.data_type),'unknown') = 0) THEN
             DBMS_LOB.APPEND (res, rec_attributes.data_type);
          ELSE
             SELECT XMLElement(EVALNAME(single_entity_prefix || ':DataType'), '').getClobVal() INTO token_value FROM dual;
             DBMS_LOB.APPEND (res, token_value);
          END IF;
          DBMS_LOB.APPEND (res, rec_attributes.dt_kind);
          DBMS_LOB.APPEND (res, rec_attributes.domain_name);
          DBMS_LOB.APPEND (res, rec_attributes.formula);
          DBMS_LOB.APPEND (res, rec_attributes.pref_abbr);
          DBMS_LOB.APPEND (res, rec_attributes.synonyms);
          DBMS_LOB.APPEND (res,'</' || single_entity_prefix || ':AttributeDetails>');

        IF (cur_attributes%ROWCOUNT = rec_attributes.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':AttributesCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Attribute Comments
   IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityAttributesComments = 1) THEN
     FOR rec_attributes_comments IN cur_attributes_comments(v_entity_ovid) LOOP
        IF (cur_attributes_comments%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_entity_prefix || ':AttributesCommentsCollection>');
        END IF;

          DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':AttributeCommentsDetails>');
          DBMS_LOB.APPEND (res, rec_attributes_comments.seq);
          DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_name);
          DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_description);
          DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_notes);
          DBMS_LOB.APPEND (res,'</' || single_entity_prefix || ':AttributeCommentsDetails>');

        IF (cur_attributes_comments%ROWCOUNT = rec_attributes_comments.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':AttributesCommentsCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Constraints
   IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityConstraints = 1) THEN
     FOR rec_constraints IN cur_constraints(v_entity_ovid) LOOP
        IF (cur_constraints%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || single_entity_prefix || ':ConstraintsCollection>');
        END IF;

          DBMS_LOB.APPEND (res,'<' || single_entity_prefix || ':ConstraintDetails>');
          DBMS_LOB.APPEND (res,rec_constraints.c_type);
          DBMS_LOB.APPEND (res,rec_constraints.c_name);
          DBMS_LOB.APPEND (res,rec_constraints.c_details);
          DBMS_LOB.APPEND (res,'</' || single_entity_prefix || ':ConstraintDetails>');

        IF (cur_constraints%ROWCOUNT = rec_constraints.total_row_count) THEN
            DBMS_LOB.APPEND (res,'</' || single_entity_prefix || ':ConstraintsCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Identifiers
   IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityIdentifiers = 1) THEN
     FOR rec_identifiers IN cur_identifiers(v_entity_ovid) LOOP
        IF (cur_identifiers%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':IdentifiersCollection>');
        END IF;

          DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':IdentifierDetails>');
          DBMS_LOB.APPEND (res, rec_identifiers.nn);
          DBMS_LOB.APPEND (res, rec_identifiers.pi);
          DBMS_LOB.APPEND (res, rec_identifiers.element_name);
          DBMS_LOB.APPEND (res, rec_identifiers.type);
          DBMS_LOB.APPEND (res, rec_identifiers.source_label);
          DBMS_LOB.APPEND (res, rec_identifiers.target_label);
          DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':IdentifierDetails>');

        IF (cur_identifiers%ROWCOUNT = rec_identifiers.total_row_count) THEN
           DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':IdentifiersCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Relationships
   IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityRelationships = 1) THEN
     -- Total count of relationships
     SELECT COUNT(1)
     INTO   v_rel_total_count
     FROM (
      SELECT r.ovid
      FROM   dmrs_relationships r,
             dmrs_entities      e
      WHERE  r.source_ovid  = e.ovid
      AND    e.ovid         = v_entity_ovid
      UNION ALL
      SELECT r.ovid
      FROM   dmrs_relationships r,
             dmrs_entities      e
      WHERE  r.target_ovid  = e.ovid
      AND    e.ovid         = v_entity_ovid);

     FOR rec_relationships IN cur_relationships(v_entity_ovid) LOOP
        IF (cur_relationships%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':RelationshipsCollection>');
        END IF;
     
           DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':RelationshipDetails>');
           DBMS_LOB.APPEND (res, rec_relationships.source_name);
           DBMS_LOB.APPEND (res, rec_relationships.source_role);
           DBMS_LOB.APPEND (res, rec_relationships.target_role);
           DBMS_LOB.APPEND (res, rec_relationships.in_arc);
           DBMS_LOB.APPEND (res, rec_relationships.cardinality);
           DBMS_LOB.APPEND (res, rec_relationships.dominant_role);
           DBMS_LOB.APPEND (res, rec_relationships.identifying);
           DBMS_LOB.APPEND (res, rec_relationships.transferable);
           DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':RelationshipDetails>');

        IF (cur_relationships%ROWCOUNT = v_rel_total_count) THEN
           DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':RelationshipsCollection>');
        END IF;
     
     END LOOP;
   END IF;

   -- Incoming Processes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityIncomingProcesses = 1) THEN
     FOR rec_incoming_processes IN cur_incoming_processes(v_entity_ovid) LOOP
        IF (cur_incoming_processes%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':IncomingProcessesCollection>');
        END IF;
          DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':IncomingProcessDetails>');
          DBMS_LOB.APPEND (res, rec_incoming_processes.ipr_name);
          DBMS_LOB.APPEND (res, rec_incoming_processes.ipr_flow_name);
          DBMS_LOB.APPEND (res, rec_incoming_processes.ipr_crud_code);
          DBMS_LOB.APPEND (res, rec_incoming_processes.ipr_dfd_name);
          DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':IncomingProcessDetails>');
        IF (cur_incoming_processes%ROWCOUNT = rec_incoming_processes.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':IncomingProcessesCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Outgoing Processes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityOutgoingProcesses = 1) THEN
     FOR rec_outgoing_processes IN cur_outgoing_processes(v_entity_ovid) LOOP
        IF (cur_outgoing_processes%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':OutgoingProcessesCollection>');
        END IF;
          DBMS_LOB.APPEND (res, '<' || single_entity_prefix || ':OugoingProcessDetails>');
          DBMS_LOB.APPEND (res, rec_outgoing_processes.opr_name);
          DBMS_LOB.APPEND (res, rec_outgoing_processes.opr_flow_name);
          DBMS_LOB.APPEND (res, rec_outgoing_processes.opr_crud_code);
          DBMS_LOB.APPEND (res, rec_outgoing_processes.opr_dfd_name);
          DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':OugoingProcessDetails>');
        IF (cur_outgoing_processes%ROWCOUNT = rec_outgoing_processes.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_entity_prefix || ':OutgoingProcessesCollection>');
        END IF;
     END LOOP;
  END IF;

  DBMS_LOB.APPEND (res,'</' || single_entity_prefix || ':Entity>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering single entity data ended');
  
RETURN res;

 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleEntity_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleEntity_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_SingleEntity_Data;

FUNCTION Gather_AllEntities_Data(v_model_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE, objects IN OBJECTS_LIST, v_report_name IN VARCHAR2) RETURN CLOB IS 

res               CLOB;
v_notes           CLOB;
v_description     CLOB;
v_rel_total_count INTEGER;
token_value       CLOB;

CURSOR cur_general_data(v_m_ovid IN VARCHAR2) IS
 -- General data
 SELECT XMLElement(EVALNAME(all_entities_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(all_entities_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(all_entities_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                     version_comment,
        XMLElement(EVALNAME(all_entities_prefix || ':ModelName'),m.model_name).getClobVal()                                          model_name
 FROM   dmrs_designs d, 
        dmrs_models m
 WHERE  d.design_ovid = m.design_ovid
 AND    m.model_ovid = v_model_ovid;
rec_general_data cur_general_data%ROWTYPE;

CURSOR cur_all_entities(v_m_ovid IN VARCHAR2) IS
 SELECT /*+ index(e ENTITIES_FK_IDXV1) */
        XMLElement(EVALNAME(all_entities_prefix || ':EntityName'),e.entity_name).getClobVal()                                                                        entity_name,
        XMLElement(EVALNAME(all_entities_prefix || ':EncodedEntityName'),e.ovid).getClobVal()																		 xml_ovid,
        XMLElement(EVALNAME(all_entities_prefix || ':ClassificationTypeName'),e.classification_type_name).getClobVal()                                               classification_type_name,
        XMLElement(EVALNAME(all_entities_prefix || ':Abbreviation'),e.preferred_abbreviation).getClobVal()                                                           pref_abbreviation, 
        XMLElement(EVALNAME(all_entities_prefix || ':SuperType'),(SELECT e1.entity_name FROM  dmrs_entities e1 WHERE e.supertypeentity_ovid = e1.ovid)).getClobVal() super_type,
        XMLElement(EVALNAME(all_entities_prefix || ':Synonyms'), e.synonyms).getClobVal()                                                                            table_synonyms,
        XMLElement(EVALNAME(all_entities_prefix || ':ObjectTypeName'),e.structured_type_name).getClobVal()                                                           object_type_name,
        XMLElement(EVALNAME(all_entities_prefix || ':NumberOfAttributes'),e.number_data_elements).getClobVal()                                                       number_of_attributes, 
        XMLElement(EVALNAME(all_entities_prefix || ':NumberOfRowsMin'),e.min_volume).getClobVal()                                                                    number_rows_min, 
        XMLElement(EVALNAME(all_entities_prefix || ':NumberOfRowsMax'),e.max_volume).getClobVal()                                                                    number_rows_max, 
        XMLElement(EVALNAME(all_entities_prefix || ':ExpectedNumberOfRows'),e.expected_volume).getClobVal()                                                          expected_number_of_rows, 
        XMLElement(EVALNAME(all_entities_prefix || ':ExpectedGrowth'),e.growth_rate_percents).getClobVal()                                                           expected_growth,
        XMLElement(EVALNAME(all_entities_prefix || ':GrowthInterval'),e.growth_rate_interval).getClobVal()                                                           growth_interval,
        e.ovid                                                                                                                             entity_ovid,
        COUNT(e.entity_name) over() total_row_count
 FROM   dmrs_entities    e
 WHERE  e.model_ovid = v_m_ovid
 AND    e.ovid MEMBER OF objects
 ORDER BY e.entity_name;
rec_all_entities cur_all_entities%ROWTYPE;

CURSOR cur_mapped_tables(v_e_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_entities_prefix || ':TableName'),t.model_name||'.'||t.table_name).getClobVal() table_name,
        COUNT(t.table_name) over()                                total_row_count
 FROM   dmrs_entities e,
        dmrs_tables t,
        dmrs_mappings m
 WHERE  m.relational_object_ovid = t.ovid
 AND    m.logical_object_ovid = e.ovid
 AND    e.ovid = v_e_ovid;
rec_mapped_tables cur_mapped_tables%ROWTYPE;

-- Diagrams
CURSOR cur_diagrams(v_t_ovid IN VARCHAR2, v_rep_name IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_entities_prefix || ':Diagram'), 
          XMLElement(EVALNAME(all_entities_prefix || ':Name'), v_rep_name || '_files/' || REGEXP_REPLACE(SUBSTR(d.pdf_name, 1, INSTR(d.pdf_name, '.PDF')-1), '[^a-zA-Z1-9_]', '_') || '.pdf'),
          XMLElement(EVALNAME(all_entities_prefix || ':Suffix'), NULL)).getClobVal()                                                                                                            pdf_name,
        COUNT(d.pdf_name) over()                                                                                                                                                                total_row_count
 FROM   dmrs_vdiagrams d,
       (SELECT diagram_ovid 
        FROM   dmrs_diagram_elements
        WHERE  ovid = v_t_ovid) b
 WHERE d.ovid = b.diagram_ovid
 AND   d.diagram_type = 'Subview'
 AND   d.is_display = 'N';
rec_diagrams cur_diagrams%ROWTYPE;

-- Attributes
CURSOR cur_attributes(v_e_ovid IN VARCHAR2) IS
 SELECT  XMLElement(EVALNAME(all_entities_prefix || ':Sequence'),a.sequence).getClobVal()                                                                                              seq, 
         XMLElement(EVALNAME(all_entities_prefix || ':AttributeName'),a.attribute_name).getClobVal()                                                                                  attr_name,
         XMLElement(EVALNAME(all_entities_prefix || ':DataTypeKind'),DECODE(a.datatype_kind,
                                                 'Domain',         'DOM',
                                                 'Logical Type',   'LT',
                                                 'Distinct Type',  'DT',
                                                 'Ref Struct Type','RST',
                                                 'Structured Type','ST',
                                                 'Collection Type','CT')                                                                                
                   ).getClobVal()                                                                                                                           dt_kind,
         XMLElement(EVALNAME(all_entities_prefix || ':DomainName'),DECODE(a.domain_name,'Unknown',null,a.domain_name)).getClobVal()                                                   domain_name,
         XMLElement(EVALNAME(all_entities_prefix || ':DataType'), 
            DECODE(a.datatype_kind, 
                  'Domain', a.logical_type_name ||' '||
                           DECODE (NVL(a.t_size,''),'',
                              DECODE(NVL(a.t_scale,0),0,
                                 DECODE(NVL(a.t_precision,0),0,null,'('|| DECODE(NVL(a.t_precision,0),0,null,a.t_precision) ||')'),
                                   '('|| DECODE(NVL(a.t_precision,0),0,null,a.t_precision) || ',' || DECODE(NVL(a.t_scale,0),0,null,a.t_scale)||')'),
                                   '('||TRIM(DECODE(a.t_size,'',null,a.t_size||' '||a.char_units ))||')'),
                   'Logical Type', a.logical_type_name  ||' '|| 
                           DECODE (NVL(a.t_size,''),'',
                              DECODE(NVL(a.t_scale,0),0,
                                 DECODE(NVL(a.t_precision,0),0,null,'('|| DECODE(NVL(a.t_precision,0),0,null,a.t_precision) ||')'),
                                   '('|| DECODE(NVL(a.t_precision,0),0,null,a.t_precision) || ',' || DECODE(NVL(a.t_scale,0),0,null,a.t_scale)||')'),
                                   '('||TRIM(DECODE(a.t_size,'',null,a.t_size||' '||a.char_units ))||')')
            )
          ).getClobVal()                                                                                                                                    data_type,
         XMLElement(EVALNAME(all_entities_prefix || ':PK'),a.pk_flag).getClobVal()                                                                                                    pk,
         XMLElement(EVALNAME(all_entities_prefix || ':FK'),a.fk_flag).getClobVal()                                                                                                    fk,
         XMLElement(EVALNAME(all_entities_prefix || ':M'),DECODE(a.mandatory,'N',' ',a.mandatory)).getClobVal()                                                                       m,
         XMLElement(EVALNAME(all_entities_prefix || ':Formula'),TRIM(a.formula||' '||a.default_value)).getClobVal()                                                                   formula,
         XMLElement(EVALNAME(all_entities_prefix || ':AttributeSynonyms'),a.synonyms).getClobVal()                                                                                    synonyms,
         XMLElement(EVALNAME(all_entities_prefix || ':PreferredAbbreviation'),a.preferred_abbreviation).getClobVal()                                                                  pref_abbr,
         COUNT(a.sequence) over()                                                                                                                           total_row_count
  FROM   dmrs_attributes a
  WHERE  a.container_ovid = v_e_ovid
  ORDER BY a.sequence;
rec_attributes cur_attributes%ROWTYPE;

-- Attributes Comments Data
CURSOR cur_attributes_comments(v_e_ovid IN VARCHAR2) IS
 SELECT a.seq                          seq, 
        a.attribute_name               attribute_name, 
        a.attribute_description        attribute_description, 
        a.attribute_notes              attribute_notes,
        COUNT(a.attribute_name) over() total_row_count
 FROM (
  SELECT XMLElement(EVALNAME(all_entities_prefix || ':AttributeCommentsSequence'),a.sequence).getStringVal()     seq,
         XMLElement(EVALNAME(all_entities_prefix || ':AttributeCommentsName'),a.attribute_name).getStringVal()   attribute_name,
         XMLElement(EVALNAME(all_entities_prefix || ':AttributeDescription'),XMLCDATA(
         NVL(
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = a.ovid
         AND    t.type='Comments'),
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = a.ovid
         AND    t.type='CommentsInRDBMS')))).getClobVal()                                                        attribute_description, 
         XMLElement(EVALNAME(all_entities_prefix || ':AttributeNotes'),XMLCDATA(
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = a.ovid
         AND    t.type='Note'))).getClobVal()                                                                    attribute_notes
  FROM   dmrs_entities e, 
         dmrs_attributes a
  WHERE  e.ovid = a.container_ovid
  and    e.ovid = v_e_ovid
  ORDER BY a.sequence
 ) a
 WHERE DBMS_LOB.getlength(attribute_description) > 0 OR DBMS_LOB.getlength(attribute_notes) > 0;
rec_attributes_comments cur_attributes_comments%ROWTYPE;

CURSOR cur_identifiers(v_e_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_entities_prefix || ':IdentifierName'),CASE WHEN ke.sequence>1 THEN ' ' ELSE ke.key_name END).getClobVal()                          nn,
        XMLElement(EVALNAME(all_entities_prefix || ':PrimaryIdentifier'),CASE WHEN ke.sequence>1 THEN ' ' ELSE DECODE(k.state,'Primary Key','Y') END).getClobVal() pi, 
        XMLElement(EVALNAME(all_entities_prefix || ':ElementName'),ke.element_name).getClobVal()                                                                   element_name,
        XMLElement(EVALNAME(all_entities_prefix || ':ElementType'),ke.type).getClobVal()                                                                           type,
        XMLElement(EVALNAME(all_entities_prefix || ':SourceLabel'),ke.source_label).getClobVal()                                                                   source_label,
        XMLElement(EVALNAME(all_entities_prefix || ':TargetLabel'),ke.target_label).getClobVal()                                                                   target_label,
        COUNT(ke.sequence) over()                                                                                                        total_row_count
 FROM   dmrs_keys          k,
        dmrs_key_elements ke
 WHERE  k.container_ovid = v_e_ovid
 AND   ke.key_ovid = k.ovid
 ORDER BY ke.sequence;
rec_identifiers cur_identifiers%ROWTYPE;

CURSOR cur_relationships(v_e_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_entities_prefix || ':SourceName'),r.target_entity_name).getClobVal()                                                                  source_name, 
        XMLElement(EVALNAME(all_entities_prefix || ':SourceRole'),r.source_label).getClobVal()                                                                        source_role,
        XMLElement(EVALNAME(all_entities_prefix || ':TargetRole'),r.target_label).getClobVal()                                                                        target_role,
        XMLElement(EVALNAME(all_entities_prefix || ':InArc'),DECODE(r.in_arc,'N','',r.in_arc)).getClobVal()                                                           in_arc,
        XMLElement(EVALNAME(all_entities_prefix || ':Cardinality'),
           DECODE(r.source_optional,'Y',0,'1') || '..' || r.sourceto_target_cardinality
           ||':'||
           DECODE(r.target_optional,'Y',0,'1') || '..' || r.targetto_source_cardinality
           ).getClobVal()                                                                                                                   cardinality,
        XMLElement(EVALNAME(all_entities_prefix || ':DominantRole'),DECODE(r.dominant_role,'None','')).getClobVal()                                                   dominant_role,
        XMLElement(EVALNAME(all_entities_prefix || ':Identifying'),DECODE(r.identifying,'N','',r.identifying)).getClobVal()                                           identifying,
        XMLElement(EVALNAME(all_entities_prefix || ':Transferable'),DECODE(r.transferable,'N','',r.transferable)).getClobVal()                                        transferable
 FROM   dmrs_relationships r
 WHERE  r.source_ovid  = v_e_ovid
 UNION ALL
 SELECT XMLElement(EVALNAME(all_entities_prefix || ':SourceName'),r.source_entity_name).getClobVal()                                                                  source_name, 
        XMLElement(EVALNAME(all_entities_prefix || ':SourceRole'),r.source_label).getClobVal()                                                                        source_role,
        XMLElement(EVALNAME(all_entities_prefix || ':TargetRole'),r.target_label).getClobVal()                                                                        target_role,
        XMLElement(EVALNAME(all_entities_prefix || ':InArc'),DECODE(r.in_arc,'N','',r.in_arc)).getClobVal()                                                           in_arc,
        XMLElement(EVALNAME(all_entities_prefix || ':Cardinality'),
           DECODE(r.source_optional,'Y',0,'1') || '..' || r.sourceto_target_cardinality
           ||':'||
           DECODE(r.target_optional,'Y',0,'1') || '..' || r.targetto_source_cardinality
           ).getClobVal()                                                                                                                   cardinality,
        XMLElement(EVALNAME(all_entities_prefix || ':DominantRole'),DECODE(r.dominant_role,'None','')).getClobVal()                                                   dominant_role,
        XMLElement(EVALNAME(all_entities_prefix || ':Identifying'),DECODE(r.identifying,'N','',r.identifying)).getClobVal()                                           identifying,
        XMLElement(EVALNAME(all_entities_prefix || ':Transferable'),DECODE(r.transferable,'N','',r.transferable)).getClobVal()                                        transferable
 FROM   dmrs_relationships r
 WHERE  r.target_ovid  = v_e_ovid;
rec_relationships cur_relationships%ROWTYPE;

CURSOR cur_incoming_processes(v_e_ovid IN VARCHAR2) IS
 SELECT  XMLElement(EVALNAME(all_entities_prefix || ':IncomingProcessName'), NVL(pe.process_name,' ')).getClobVal()  ipr_name,
         XMLElement(EVALNAME(all_entities_prefix || ':IncomingFlowName'), NVL(pe.flow_name,' ')).getClobVal()       ipr_flow_name,
         XMLElement(EVALNAME(all_entities_prefix || ':IncomingCRUDCode'), NVL(pe.crud_code,' ')).getClobVal()       ipr_crud_code,
         XMLElement(EVALNAME(all_entities_prefix || ':IncomingDFDName'), NVL(pe.dfd_name,' ')).getClobVal()         ipr_dfd_name,
         COUNT(pe.process_name) over()                                                    total_row_count
  FROM   dmrs_process_entities pe
  WHERE  pe.entity_ovid = v_e_ovid
  AND    pe.flow_direction = 'IN'
  ORDER BY pe.process_name;
rec_incoming_processes cur_incoming_processes%ROWTYPE;

CURSOR cur_outgoing_processes(v_e_ovid IN VARCHAR2) IS
  SELECT XMLElement(EVALNAME(all_entities_prefix || ':OutgoingProcessName'), pe.process_name).getClobVal() opr_name,
         XMLElement(EVALNAME(all_entities_prefix || ':OutgoingFlowName'), pe.flow_name).getClobVal()       opr_flow_name,
         XMLElement(EVALNAME(all_entities_prefix || ':OutgoingCRUDCode'), pe.crud_code).getClobVal()       opr_crud_code,
         XMLElement(EVALNAME(all_entities_prefix || ':OutgoingDFDName'), pe.dfd_name).getClobVal()         opr_dfd_name,
         COUNT(pe.process_name) over()                                           total_row_count
  FROM   dmrs_process_entities pe
  WHERE  pe.entity_ovid = v_e_ovid
  AND    pe.flow_direction = 'OUT'
  ORDER BY pe.process_name;
rec_outgoing_processes cur_outgoing_processes%ROWTYPE;

-- Constraints
CURSOR cur_constraints(v_e_ovid IN VARCHAR2) IS
SELECT XMLElement(EVALNAME(all_entities_prefix || ':ContstraintType'), CASE WHEN rownum>1 THEN ''
                                              ELSE 'Attribute Level'
                                              END).getClobVal()                                        c_type,
        XMLElement(EVALNAME(all_entities_prefix || ':ALCConstraintName'), a.attribute_name || 
                                                DECODE((SELECT DISTINCT(constraint_name)
                                                        FROM dmrs_check_constraints 
                                                        WHERE a.ovid = dataelement_ovid),NULL,'',
                                               ' / '|| (SELECT  DISTINCT(constraint_name) 
                                                        FROM dmrs_check_constraints 
                                                        WHERE a.ovid = dataelement_ovid))).getClobVal() c_name,
        Gather_Constraint_Details_XML(a.ovid, all_entities_prefix)                                      c_details,
        COUNT(a.attribute_name) over()                                                                  total_row_count
 FROM   dmrs_attributes a
 WHERE a.container_ovid = v_e_ovid
 AND  (a.ovid IN (SELECT dataelement_ovid FROM dmrs_avt) OR 
       a.ovid IN (SELECT dataelement_ovid FROM dmrs_value_ranges) OR 
       a.ovid IN (SELECT dataelement_ovid FROM dmrs_check_constraints));
rec_constraints cur_constraints%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for all entities started ...');
  
  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || all_entities_prefix || ':Entities xmlns:' || all_entities_prefix || '="http://oracle.com/datamodeler/reports/entities">');
  
  FOR rec_general_data IN cur_general_data(v_model_ovid) LOOP

    DBMS_LOB.APPEND (res, rec_general_data.design_name);
    DBMS_LOB.APPEND (res, rec_general_data.version_date);
    DBMS_LOB.APPEND (res, rec_general_data.version_comment);
    DBMS_LOB.APPEND (res, rec_general_data.model_name);

  END LOOP;
 
   FOR rec_all_entities IN cur_all_entities(v_model_ovid) LOOP

      IF (cur_all_entities%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || all_entities_prefix || ':EntitiesCollection>');
      END IF;

      DBMS_LOB.APPEND (res,'<' || all_entities_prefix || ':EntityDetails>');

      -- Mapped tables
      FOR rec_mapped_tables IN cur_mapped_tables(rec_all_entities.entity_ovid) LOOP
        IF (cur_mapped_tables%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || all_entities_prefix || ':MappedTablesCollection>');
        END IF;

         DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':MappedTablesDetails>');
         DBMS_LOB.APPEND (res, rec_mapped_tables.table_name);
         DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':MappedTablesDetails>');

        IF (cur_mapped_tables%ROWCOUNT = rec_mapped_tables.total_row_count) THEN
         DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':MappedTablesCollection>');
        END IF;
      END LOOP;

      -- Description / Notes
      IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN
         
        DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':DescriptionNotes>');
         
        SELECT  XMLElement(EVALNAME(all_entities_prefix || ':Description'), XMLCDATA(
                  NVL((SELECT t.text comments_in_rdbms
                       FROM   dmrs_large_text t
                       WHERE  t.ovid = rec_all_entities.entity_ovid
                       AND    t.type='Comments'),
                      (SELECT t.text comments_in_rdbms
                       FROM   dmrs_large_text t
                       WHERE  t.ovid = rec_all_entities.entity_ovid
                       AND    t.type='CommentsInRDBMS')))).getClobVal(), 
                XMLElement(EVALNAME(all_entities_prefix || ':Notes'), XMLCDATA(
                      (SELECT t.text comments_in_rdbms
                       FROM   dmrs_large_text t
                       WHERE  t.ovid = rec_all_entities.entity_ovid
                       AND    t.type='Note'))).getClobVal()
        INTO    v_description, 
                v_notes
        FROM dual;

        DBMS_LOB.APPEND (res, v_description);
        DBMS_LOB.APPEND (res, v_notes);
        DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':DescriptionNotes>');

      END IF;
            
      DBMS_LOB.APPEND (res, rec_all_entities.entity_name);
      DBMS_LOB.APPEND (res, rec_all_entities.xml_ovid);
      DBMS_LOB.APPEND (res, rec_all_entities.pref_abbreviation);      
      DBMS_LOB.APPEND (res, rec_all_entities.classification_type_name);
      DBMS_LOB.APPEND (res, rec_all_entities.object_type_name);
      DBMS_LOB.APPEND (res, rec_all_entities.super_type);
      DBMS_LOB.APPEND (res, rec_all_entities.table_synonyms);

      IF (reportTemplate.reportType = 0 OR reportTemplate.useQuantitativeInfo = 1) THEN
        DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':QuantitativeInfoCollection>');
        DBMS_LOB.APPEND (res, rec_all_entities.number_of_attributes);
        DBMS_LOB.APPEND (res, rec_all_entities.number_rows_min);
        DBMS_LOB.APPEND (res, rec_all_entities.number_rows_max);
        DBMS_LOB.APPEND (res, rec_all_entities.expected_number_of_rows);
        DBMS_LOB.APPEND (res, rec_all_entities.expected_growth);
        DBMS_LOB.APPEND (res, rec_all_entities.growth_interval);
        DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':QuantitativeInfoCollection>');
      END IF;
      
       -- Diagrams
       IF (reportTemplate.reportType = 0 OR reportTemplate.useDiagrams = 1) THEN
         FOR rec_diagrams IN cur_diagrams(rec_all_entities.entity_ovid, v_report_name) LOOP
            IF (cur_diagrams%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<' || all_entities_prefix || ':DiagramsCollection>');
            END IF;
              
              DBMS_LOB.APPEND (res, rec_diagrams.pdf_name);
       
            IF (cur_diagrams%ROWCOUNT = rec_diagrams.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':DiagramsCollection>');
            END IF;
         END LOOP;
       END IF;
      
      -- Attributes
      IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityAttributes = 1) THEN
        FOR rec_attributes IN cur_attributes(rec_all_entities.entity_ovid) LOOP

           IF (cur_attributes%ROWCOUNT = 1) THEN
             DBMS_LOB.APPEND (res,'<' || all_entities_prefix || ':AttributesCollection>');
           END IF;

             DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':AttributeDetails>');
             DBMS_LOB.APPEND (res, rec_attributes.seq);
             DBMS_LOB.APPEND (res, rec_attributes.attr_name);
             DBMS_LOB.APPEND (res, rec_attributes.pk);
             DBMS_LOB.APPEND (res, rec_attributes.fk);
             DBMS_LOB.APPEND (res, rec_attributes.m);
             IF (INSTR(LOWER(rec_attributes.data_type),'unknown') = 0) THEN
                DBMS_LOB.APPEND (res, rec_attributes.data_type);
             ELSE
                SELECT XMLElement(EVALNAME(all_entities_prefix || ':DataType'), '').getClobVal() INTO token_value FROM dual;
                DBMS_LOB.APPEND (res, token_value);
             END IF;
             DBMS_LOB.APPEND (res, rec_attributes.dt_kind);
             DBMS_LOB.APPEND (res, rec_attributes.domain_name);
             DBMS_LOB.APPEND (res, rec_attributes.formula);
             DBMS_LOB.APPEND (res, rec_attributes.pref_abbr);
             DBMS_LOB.APPEND (res, rec_attributes.synonyms);
             DBMS_LOB.APPEND (res,'</' || all_entities_prefix || ':AttributeDetails>');

           IF (cur_attributes%ROWCOUNT = rec_attributes.total_row_count) THEN
            DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':AttributesCollection>');
           END IF;
        END LOOP;
      END IF;

      -- Attribute Comments
      IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityAttributesComments = 1) THEN
        FOR rec_attributes_comments IN cur_attributes_comments(rec_all_entities.entity_ovid) LOOP
           IF (cur_attributes_comments%ROWCOUNT = 1) THEN
             DBMS_LOB.APPEND (res,'<' || all_entities_prefix || ':AttributesCommentsCollection>');
           END IF;

            DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':AttributeCommentsDetails>');
            DBMS_LOB.APPEND (res, rec_attributes_comments.seq);
            DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_name);
            DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_description);
            DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_notes);
            DBMS_LOB.APPEND (res,'</' || all_entities_prefix || ':AttributeCommentsDetails>');

           IF (cur_attributes_comments%ROWCOUNT = rec_attributes_comments.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':AttributesCommentsCollection>');
           END IF;
        END LOOP;
      END IF;

      -- Constraints
      IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityConstraints = 1) THEN
        FOR rec_constraints IN cur_constraints(rec_all_entities.entity_ovid) LOOP
           IF (cur_constraints%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<' || all_entities_prefix || ':ConstraintsCollection>');
           END IF;

             DBMS_LOB.APPEND (res,'<' || all_entities_prefix || ':ConstraintDetails>');
             DBMS_LOB.APPEND (res,rec_constraints.c_type);
             DBMS_LOB.APPEND (res,rec_constraints.c_name);
             DBMS_LOB.APPEND (res,rec_constraints.c_details);
             DBMS_LOB.APPEND (res,'</' || all_entities_prefix || ':ConstraintDetails>');

           IF (cur_constraints%ROWCOUNT = rec_constraints.total_row_count) THEN
               DBMS_LOB.APPEND (res,'</' || all_entities_prefix || ':ConstraintsCollection>');
           END IF;
        END LOOP;
      END IF;

      -- Identifiers
      IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityIdentifiers = 1) THEN
        FOR rec_identifiers IN cur_identifiers(rec_all_entities.entity_ovid) LOOP
           IF (cur_identifiers%ROWCOUNT = 1) THEN
             DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':IdentifiersCollection>');
           END IF;
          
             DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':IdentifierDetails>');
             DBMS_LOB.APPEND (res, rec_identifiers.nn);
             DBMS_LOB.APPEND (res, rec_identifiers.pi);
             DBMS_LOB.APPEND (res, rec_identifiers.element_name);
             DBMS_LOB.APPEND (res, rec_identifiers.type);
             DBMS_LOB.APPEND (res, rec_identifiers.source_label);
             DBMS_LOB.APPEND (res, rec_identifiers.target_label);
             DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':IdentifierDetails>');
        
           IF (cur_identifiers%ROWCOUNT = rec_identifiers.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':IdentifiersCollection>');
           END IF;
        END LOOP;
      END IF;

      -- Relationships
      IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityRelationships = 1) THEN
        -- Total count of relationships
        SELECT COUNT(1)
        INTO   v_rel_total_count
        FROM (
         SELECT r.ovid
         FROM   dmrs_relationships r,
                dmrs_entities      e
         WHERE  r.source_ovid  = e.ovid
         AND    e.ovid         = rec_all_entities.entity_ovid
         UNION ALL
         SELECT r.ovid
         FROM   dmrs_relationships r,
                dmrs_entities      e
         WHERE  r.target_ovid  = e.ovid
         AND    e.ovid         = rec_all_entities.entity_ovid);

        FOR rec_relationships IN cur_relationships(rec_all_entities.entity_ovid) LOOP
           IF (cur_relationships%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':RelationshipsCollection>');
           END IF;

              DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':RelationshipDetails>');
              DBMS_LOB.APPEND (res, rec_relationships.source_name);
              DBMS_LOB.APPEND (res, rec_relationships.source_role);
              DBMS_LOB.APPEND (res, rec_relationships.target_role);
              DBMS_LOB.APPEND (res, rec_relationships.in_arc);
              DBMS_LOB.APPEND (res, rec_relationships.cardinality);
              DBMS_LOB.APPEND (res, rec_relationships.dominant_role);
              DBMS_LOB.APPEND (res, rec_relationships.identifying);
              DBMS_LOB.APPEND (res, rec_relationships.transferable);
              DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':RelationshipDetails>');
        
           IF (cur_relationships%ROWCOUNT = v_rel_total_count) THEN
              DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':RelationshipsCollection>');
           END IF;
        
        END LOOP;
      END IF;

      -- Incoming Processes
      IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityIncomingProcesses = 1) THEN
        FOR rec_incoming_processes IN cur_incoming_processes(rec_all_entities.entity_ovid) LOOP
           IF (cur_incoming_processes%ROWCOUNT = 1) THEN
             DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':IncomingProcessesCollection>');
           END IF;
             DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':IncomingProcessDetails>');
             DBMS_LOB.APPEND (res, rec_incoming_processes.ipr_name);
             DBMS_LOB.APPEND (res, rec_incoming_processes.ipr_flow_name);
             DBMS_LOB.APPEND (res, rec_incoming_processes.ipr_crud_code);
             DBMS_LOB.APPEND (res, rec_incoming_processes.ipr_dfd_name);
             DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':IncomingProcessDetails>');
           IF (cur_incoming_processes%ROWCOUNT = rec_incoming_processes.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':IncomingProcessesCollection>');
           END IF;
        END LOOP;
      END IF;
      -- Outgoing Processes
      IF (reportTemplate.reportType = 0 OR reportTemplate.useEntityOutgoingProcesses = 1) THEN
        FOR rec_outgoing_processes IN cur_outgoing_processes(rec_all_entities.entity_ovid) LOOP
           IF (cur_outgoing_processes%ROWCOUNT = 1) THEN
             DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':OutgoingProcessesCollection>');
           END IF;
             DBMS_LOB.APPEND (res, '<' || all_entities_prefix || ':OugoingProcessDetails>');
             DBMS_LOB.APPEND (res, rec_outgoing_processes.opr_name);
             DBMS_LOB.APPEND (res, rec_outgoing_processes.opr_flow_name);
             DBMS_LOB.APPEND (res, rec_outgoing_processes.opr_crud_code);
             DBMS_LOB.APPEND (res, rec_outgoing_processes.opr_dfd_name);
             DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':OugoingProcessDetails>');
           IF (cur_outgoing_processes%ROWCOUNT = rec_outgoing_processes.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</' || all_entities_prefix || ':OutgoingProcessesCollection>');
           END IF;
        END LOOP;
      END IF;

      DBMS_LOB.APPEND (res,'</' || all_entities_prefix || ':EntityDetails>');

      IF (cur_all_entities%ROWCOUNT = rec_all_entities.total_row_count) THEN
         DBMS_LOB.APPEND (res,'</' || all_entities_prefix || ':EntitiesCollection>');
      END IF;

   END LOOP;

  DBMS_LOB.APPEND (res,'</' || all_entities_prefix || ':Entities>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for all entities ended');  

RETURN res;
  
 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllEntities_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllEntities_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_AllEntities_Data;

FUNCTION Gather_Glossary_Data(v_glossary_ovid IN VARCHAR2) RETURN CLOB IS 

res CLOB;

CURSOR cur_glossary(v_g_ovid IN VARCHAR2) IS
 SELECT  /*+ index(g GLOSSARIES_OVID_IDX) */
         XMLElement(EVALNAME(glossary_prefix || ':GlossaryName'), g.glossary_name).getClobVal()                                      glossary_name,
         XMLElement(EVALNAME(glossary_prefix || ':Description'), XMLCDATA(g.description)).getClobVal()                               description,
         XMLElement(EVALNAME(glossary_prefix || ':FileName'), g.file_name).getStringVal()                                            file_name,
         XMLElement(EVALNAME(glossary_prefix || ':IncompleteModifiers'), DECODE(g.incomplete_modifiers,'N','','Y')).getStringVal()   inc_modifiers,
         XMLElement(EVALNAME(glossary_prefix || ':CaseSensitive'), DECODE(g.case_sensitive,'N','','Y')).getStringVal()               case_sensitive,
         XMLElement(EVALNAME(glossary_prefix || ':UniqueAbbreviations'), DECODE(g.unique_abbrevs,'N','','Y')).getStringVal()         unique_abbreviations,
         XMLElement(EVALNAME(glossary_prefix || ':SeparatorType'), g.separator_type).getStringVal()                                  separator_type,
         XMLElement(EVALNAME(glossary_prefix || ':SeparatorChar'), g.separator_char).getStringVal()                                  separator_char
 FROM    dmrs_glossaries g
 WHERE   g.glossary_ovid = v_g_ovid;
rec_glossary cur_glossary%ROWTYPE;

CURSOR cur_glossary_words(v_g_ovid IN VARCHAR2) IS
 SELECT /*+ index(g GLOSSARIES_OVID_IDX) */
        XMLElement(EVALNAME(glossary_prefix || ':TermName'), gt.term_name).getClobVal()                            term_name,
        XMLElement(EVALNAME(glossary_prefix || ':Plural'), gt.plural).getClobVal()                                 plural,
        XMLElement(EVALNAME(glossary_prefix || ':Abbreviation'), gt.abbrev).getClobVal()                           abbr,
        XMLElement(EVALNAME(glossary_prefix || ':AltAbbreviation'), gt.alt_abbrev).getClobVal()                    alt_abbr,
        XMLElement(EVALNAME(glossary_prefix || ':P'), DECODE(gt.prime_word,'N','',gt.prime_word)).getClobVal()     p_word,
        XMLElement(EVALNAME(glossary_prefix || ':C'), DECODE(gt.class_word,'N','',gt.class_word)).getClobVal()     c_word,
        XMLElement(EVALNAME(glossary_prefix || ':M'), DECODE(gt.modifier,'N','',gt.modifier)).getClobVal()         modifier,
        XMLElement(EVALNAME(glossary_prefix || ':Q'), DECODE(gt.qualifier,'N','',gt.qualifier)).getClobVal()       qualifier,
        XMLElement(EVALNAME(glossary_prefix || ':SDescription'), XMLCDATA(gt.short_description)).getClobVal()      description,
        COUNT(gt.term_name) over() total_row_count
 FROM   dmrs_glossaries g,
        dmrs_glossary_terms gt
 WHERE  g.glossary_ovid = gt.glossary_ovid
 AND    g.glossary_ovid = v_g_ovid;
rec_glossary_words cur_glossary_words%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering glossary data started ...');
 
  DBMS_LOB.CREATETEMPORARY(res, TRUE);
  
  DBMS_LOB.APPEND (res,'<' || glossary_prefix || ':Glossary xmlns:' || glossary_prefix || '="http://oracle.com/datamodeler/reports/glossary">');
  
  FOR rec_glossary IN cur_glossary(v_glossary_ovid) LOOP
    DBMS_LOB.APPEND (res, rec_glossary.glossary_name);
    DBMS_LOB.APPEND (res, rec_glossary.description);
    DBMS_LOB.APPEND (res, rec_glossary.file_name);
    DBMS_LOB.APPEND (res, rec_glossary.inc_modifiers);
    DBMS_LOB.APPEND (res, rec_glossary.case_sensitive);
    DBMS_LOB.APPEND (res, rec_glossary.unique_abbreviations);
    DBMS_LOB.APPEND (res, rec_glossary.separator_type);
    DBMS_LOB.APPEND (res, rec_glossary.separator_char);
  END LOOP;

  FOR rec_glossary_words IN cur_glossary_words(v_glossary_ovid) LOOP
    IF (cur_glossary_words%ROWCOUNT = 1) THEN
      DBMS_LOB.APPEND (res, '<' || glossary_prefix || ':GlossaryCollection>');
    END IF;
      DBMS_LOB.APPEND (res, '<' || glossary_prefix || ':GlossaryDetail>');
      DBMS_LOB.APPEND (res, rec_glossary_words.term_name);
      DBMS_LOB.APPEND (res, rec_glossary_words.plural);
      DBMS_LOB.APPEND (res, rec_glossary_words.abbr);
      DBMS_LOB.APPEND (res, rec_glossary_words.alt_abbr);
      DBMS_LOB.APPEND (res, rec_glossary_words.p_word);
      DBMS_LOB.APPEND (res, rec_glossary_words.c_word);
      DBMS_LOB.APPEND (res, rec_glossary_words.modifier);
      DBMS_LOB.APPEND (res, rec_glossary_words.qualifier);
      DBMS_LOB.APPEND (res, rec_glossary_words.description);
      DBMS_LOB.APPEND (res, '</' || glossary_prefix || ':GlossaryDetail>');
    IF (cur_glossary_words%ROWCOUNT = rec_glossary_words.total_row_count) THEN
      DBMS_LOB.APPEND (res, '</' || glossary_prefix || ':GlossaryCollection>');
    END IF;
  END LOOP;

  DBMS_LOB.APPEND (res, '</' || glossary_prefix || ':Glossary>');
  
  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering glossary data ended');
  
RETURN res;

  EXCEPTION
  WHEN others THEN
    UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Glossary_Data Exception : ' || SQLERRM);  
    UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Glossary_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;

END Gather_Glossary_Data;

FUNCTION Gather_SingleST_Data(v_str_type_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE, v_report_name IN VARCHAR2) RETURN CLOB IS 

res               CLOB;
token_value       CLOB;
v_description     CLOB;
v_notes           CLOB;
v_rel_total_count INTEGER;
v_seq             INTEGER := 1;
p_model_name      VARCHAR2(100) :='_';
v_model_name      VARCHAR2(100) :='';
p_table_name      VARCHAR2(100) :='_';
v_table_name      VARCHAR2(100) :='';
p_entity_name     VARCHAR2(100) :='_';
v_entity_name     VARCHAR2(100) :='';

 -- General data
CURSOR cur_general_data(v_st_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_st_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(single_st_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(single_st_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                     version_comment,
        XMLElement(EVALNAME(single_st_prefix || ':ModelName'),m.model_name).getClobVal()                                          model_name
 FROM   dmrs_designs d, 
        dmrs_models m,
        dmrs_structured_types st
 WHERE  d.design_ovid = m.design_ovid
 AND    st.model_ovid = m.model_ovid
 AND    st.structured_type_ovid = v_st_ovid;
rec_general_data cur_general_data%ROWTYPE;

-- Structured Type General Data
CURSOR cur_st(v_st_ovid IN VARCHAR2) IS
SELECT XMLElement(EVALNAME(single_st_prefix || ':STName'),st.structured_type_name).getClobVal()                                                                                     stName,
       XMLElement(EVALNAME(single_st_prefix || ':STSuperType'),(SELECT st1.structured_type_name 
                                           FROM  dmrs_structured_types st1 
                                           WHERE st.super_type_ovid = st1.structured_type_ovid)).getClobVal()                                                  super_type
FROM   dmrs_structured_types st
WHERE  st.structured_type_ovid = v_st_ovid;
rec_st cur_st%ROWTYPE;

-- Diagrams
CURSOR cur_diagrams(v_t_ovid IN VARCHAR2, v_rep_name IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_st_prefix || ':Diagram'), 
          XMLElement(EVALNAME(single_st_prefix || ':Name'), v_rep_name || '_files/' || REGEXP_REPLACE(SUBSTR(d.pdf_name, 1, INSTR(d.pdf_name, '.PDF')-1), '[^a-zA-Z1-9_]', '_') || '.pdf'),
          XMLElement(EVALNAME(single_st_prefix || ':Suffix'), NULL)).getClobVal()                                                                                                            pdf_name,
        COUNT(d.pdf_name) over()                                                                                                                                                             total_row_count
 FROM   dmrs_vdiagrams d,
       (SELECT diagram_ovid 
        FROM   dmrs_diagram_elements
        WHERE  ovid = v_t_ovid) b
 WHERE d.ovid = b.diagram_ovid
 AND   d.diagram_type = 'Subview'
 AND   d.is_display = 'N';
rec_diagrams cur_diagrams%ROWTYPE;

--Attributes
CURSOR cur_st_attr(v_st_ovid IN VARCHAR2) IS
SELECT  XMLElement(EVALNAME(single_st_prefix || ':AttributeName'), sta.attribute_name).getClobVal()                                                                                 attr_name,
        XMLElement(EVALNAME(single_st_prefix || ':M'),DECODE(sta.mandatory,'N','','Y')).getClobVal()                                                                                m,
        XMLElement(EVALNAME(single_st_prefix || ':DataTypeKind'),DECODE(sta.datatype_kind,                                                                                           
                                                 'Domain',         'DOM',
                                                 'Logical Type',   'LT',
                                                 'Distinct Type',  'DT',
                                                 'Ref Struct Type','RST',
                                                 'Structured Type','ST',
                                                 'Collection Type','CT')
                  ).getClobVal()                                                                                                                               dt_kind,
         XMLElement(EVALNAME(single_st_prefix || ':DataType'), 
            DECODE(sta.datatype_kind, 
                  'Domain', sta.type_name ||' '||
                           DECODE (NVL(sta.t_size,''),'',
                              DECODE(NVL(sta.t_scale,0),0,
                                 DECODE(NVL(sta.t_precision,0),0,null,'('|| DECODE(NVL(sta.t_precision,0),0,null,sta.t_precision) ||')'),
                                   '('|| DECODE(NVL(sta.t_precision,0),0,null,sta.t_precision) || ',' || DECODE(NVL(sta.t_scale,0),0,null,sta.t_scale)||')'),
                                   '('||TRIM(DECODE(sta.t_size,'',null,sta.t_size||' '||sta.char_units ))||')'),
                   'Logical Type', sta.type_name  ||' '|| 
                           DECODE (NVL(sta.t_size,''),'',
                              DECODE(NVL(sta.t_scale,0),0,
                                 DECODE(NVL(sta.t_precision,0),0,null,'('|| DECODE(NVL(sta.t_precision,0),0,null,sta.t_precision) ||')'),
                                   '('|| DECODE(NVL(sta.t_precision,0),0,null,sta.t_precision) || ',' || DECODE(NVL(sta.t_scale,0),0,null,sta.t_scale)||')'),
                                   '('||TRIM(DECODE(sta.t_size,'',null,sta.t_size||' '||sta.char_units ))||')')
            )).getClobVal()                                                                                                                                    data_type,
        XMLElement(EVALNAME(single_st_prefix || ':DomainName'),DECODE(sta.domain_name,'Unknown',null,sta.domain_name)).getClobVal()                                                 domain_name,
      COUNT(sta.attribute_name) over()                                                                                                                         total_row_count
FROM  dmrs_struct_type_attrs sta,
      dmrs_structured_types st
WHERE sta.structured_type_ovid = st.structured_type_ovid
AND   st.structured_type_ovid = v_st_ovid;
rec_st_attr cur_st_attr%ROWTYPE;

-- Attributes Comments Data
CURSOR cur_attributes_comments(v_st_ovid IN VARCHAR2) IS
 SELECT a.attribute_name               attribute_name, 
        a.attribute_description        attribute_description, 
        a.attribute_notes              attribute_notes,
        COUNT(a.attribute_name) over() total_row_count
 FROM (
  SELECT XMLElement(EVALNAME(single_st_prefix || ':AttributeCommentsName'),a.attribute_name).getStringVal()   attribute_name,
         XMLElement(EVALNAME(single_st_prefix || ':AttributeDescription'),XMLCDATA(
         NVL(
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = a.attribute_ovid
         AND    t.type='Comments'),
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = a.attribute_ovid
         AND    t.type='CommentsInRDBMS')))).getClobVal()                                                     attribute_description, 
        XMLElement(EVALNAME(single_st_prefix || ':AttributeNotes'),XMLCDATA(
        (SELECT t.text comments_in_rdbms
         FROM   dmrs_large_text t
         WHERE  t.ovid = a.attribute_ovid
         AND    t.type='Note'))).getClobVal()                                                                 attribute_notes
  FROM   dmrs_struct_type_attrs a
  WHERE  a.structured_type_ovid = v_st_ovid
 ) a
 WHERE DBMS_LOB.getlength(attribute_description) > 0 OR DBMS_LOB.getlength(attribute_notes) > 0;
rec_attributes_comments cur_attributes_comments%ROWTYPE;

-- Methods
CURSOR  cur_st_methods(v_st_ovid IN VARCHAR2) IS
SELECT  XMLElement(EVALNAME(single_st_prefix || ':MethodName'), m.method_name).getClobVal()                           m_name,
        XMLElement(EVALNAME(single_st_prefix || ':MethodConstructor'), DECODE(m.constructor,'N','','Y')).getClobVal() m_constr,
        XMLElement(EVALNAME(single_st_prefix || ':MethodOverriding'), DECODE(m.overriding,'N','','Y')).getClobVal()   m_overriding,
        XMLElement(EVALNAME(single_st_prefix || ':MethodOverridenMethod'), m.overridden_method_name).getClobVal()     m_om_name,
        XMLElement(EVALNAME(single_st_prefix || ':MethodReturnValue'), 
        (SELECT sp.type_name  ||' '|| 
                DECODE (NVL(sp.t_size,''),'',
                 DECODE(NVL(sp.t_scale,0),0,
                  DECODE(NVL(sp.t_precision,0),0,null,'('|| DECODE(NVL(sp.t_precision,0),0,null,sp.t_precision) ||')'),
                  '('|| DECODE(NVL(sp.t_precision,0),0,null,sp.t_precision) || ',' || DECODE(NVL(sp.t_scale,0),0,null,sp.t_scale)||')'),
                  '('||TRIM(DECODE(sp.t_size,'',null,sp.t_size ))||')')
         FROM   dmrs_struct_type_method_pars sp 
         WHERE  return_value= 'Y'
         AND    sp.method_ovid = m.method_ovid)).getClobVal()                                    m_return_type,        
        COUNT(m.method_name) over()                                                              total_row_count,
        m.method_ovid                                                                            method_ovid
FROM dmrs_struct_type_methods m,
     dmrs_structured_types st
WHERE m.structured_type_ovid = st.structured_type_ovid
AND   st.structured_type_ovid = v_st_ovid;
rec_st_methods cur_st_methods%ROWTYPE;

-- Method params
CURSOR cur_st_methods_p(v_m_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_st_prefix || ':ParameterName'), parameter_name).getClobVal()  param_name,
        --XMLElement("osdm_s_st:ParameterType", type_name).getClobVal()       param_type,
        XMLElement(EVALNAME(single_st_prefix || ':ParameterType'), 
        type_name  ||' '|| 
                DECODE (NVL(t_size,0),0,
                 DECODE(NVL(t_scale,0),0,
                  DECODE(NVL(t_precision,0),0,null,'('|| DECODE(NVL(t_precision,0),0,null,t_precision) ||')'),
                  '('|| DECODE(NVL(t_precision,0),0,null,t_precision) || ',' || DECODE(NVL(t_scale,0),0,null,t_scale)||')'),
                  '('||TRIM(DECODE(t_size,0,null,t_size ))||')')
        ).getClobVal()       param_type,
        COUNT(parameter_name) over()                                        total_row_count
 FROM   dmrs_struct_type_method_pars
 WHERE  method_ovid = v_m_ovid
 AND    return_value = 'N'
 ORDER BY seq;
rec_st_methods_p cur_st_methods_p%ROWTYPE;

-- Used In tables
CURSOR cur_used_in_tables(v_st_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_st_prefix || ':ModelName'), m.model_name).getClobVal()     model_name,
        XMLElement(EVALNAME(single_st_prefix || ':TableName'), t.table_name).getClobVal()     table_name,
        XMLElement(EVALNAME(single_st_prefix || ':ColumnName'), c.column_name).getClobVal()   column_name,
        COUNT(m.model_name) over()                                       total_row_count
 FROM   dmrs_tables t,
        dmrs_columns c,
        dmrs_structured_types st,
        dmrs_models  m
 WHERE  t.ovid = c.container_ovid
 AND    c.structured_type_ovid = st.structured_type_ovid
 AND    m.model_ovid = t.model_ovid
 AND    c.datatype_kind = 'Structured Type'
 AND    st.structured_type_ovid = v_st_ovid
 ORDER BY m.model_name,
          t.table_name,
          c.column_name;
rec_used_in_tables cur_used_in_tables%ROWTYPE;

-- Used In entities
CURSOR cur_used_in_entities(v_st_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_st_prefix || ':EntityName'), e.entity_name).getClobVal()        entity_name,
        XMLElement(EVALNAME(single_st_prefix || ':AttributeName'), a.attribute_name).getClobVal()  attribute_name,
        COUNT(e.entity_name) over()                                           total_row_count
 FROM   dmrs_entities e,
        dmrs_attributes a,
        dmrs_structured_types st
 WHERE  e.ovid = a.container_ovid
 AND    a.structured_type_ovid = st.structured_type_ovid
 AND    a.datatype_kind = 'Structured Type'
 AND    st.structured_type_ovid = v_st_ovid
 ORDER BY e.entity_name,
          a.attribute_name;
rec_used_in_entities cur_used_in_entities%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for single structured type started ...');
  
  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':StructuredType xmlns:' || single_st_prefix || '="http://oracle.com/datamodeler/reports/structuredtype">');
  
  FOR rec_general_data IN cur_general_data(v_str_type_ovid) LOOP

    DBMS_LOB.APPEND (res, rec_general_data.design_name);
    DBMS_LOB.APPEND (res, rec_general_data.version_date);
    DBMS_LOB.APPEND (res, rec_general_data.version_comment);
    DBMS_LOB.APPEND (res, rec_general_data.model_name);

  END LOOP;
  
   FOR rec_st IN cur_st(v_str_type_ovid) LOOP
      DBMS_LOB.APPEND (res, rec_st.stName);
      DBMS_LOB.APPEND (res, rec_st.super_type);
   END LOOP;
   
   -- Description / Notes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN

     DBMS_LOB.APPEND (res, '<' || single_st_prefix || ':DescriptionNotes>');
     
     SELECT XMLElement(EVALNAME(single_st_prefix || ':Description'), XMLCDATA(
              NVL((SELECT t.text comments_in_rdbms
                  FROM   dmrs_large_text t
                  WHERE  t.ovid = v_str_type_ovid
                  AND    t.type='Comments'),
                  (SELECT t.text comments_in_rdbms
                  FROM   dmrs_large_text t
                  WHERE  t.ovid = v_str_type_ovid
                  AND    t.type='CommentsInRDBMS')))).getClobVal(), 
            XMLElement(EVALNAME(single_st_prefix || ':Notes'), XMLCDATA(
                  (SELECT t.text comments_in_rdbms
                  FROM   dmrs_large_text t
                  WHERE  t.ovid = v_str_type_ovid
                  AND    t.type='Note'))).getClobVal()
     INTO   v_description, 
            v_notes
     FROM  dual;

    DBMS_LOB.APPEND (res, v_description);
    DBMS_LOB.APPEND (res, v_notes);
    DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':DescriptionNotes>');
     
   END IF;
  
   -- Diagrams
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDiagrams = 1) THEN
     FOR rec_diagrams IN cur_diagrams(v_str_type_ovid, v_report_name) LOOP
        IF (cur_diagrams%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':DiagramsCollection>');
        END IF;
          
          DBMS_LOB.APPEND (res, rec_diagrams.pdf_name);

        IF (cur_diagrams%ROWCOUNT = rec_diagrams.total_row_count) THEN
         DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':DiagramsCollection>');
        END IF;
     END LOOP;
   END IF;
  
   -- Attributes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useSTAttributes = 1) THEN
     FOR rec_st_attr IN cur_st_attr(v_str_type_ovid) LOOP
        IF (cur_st_attr%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':AttributesCollection>');
        END IF;

          DBMS_LOB.APPEND (res, '<' || single_st_prefix || ':AttributeDetails>');
          DBMS_LOB.APPEND (res, '<' || single_st_prefix || ':Sequence>' || TO_CHAR(v_seq) || '</' || single_st_prefix || ':Sequence>');
          DBMS_LOB.APPEND (res, rec_st_attr.attr_name);
          DBMS_LOB.APPEND (res, rec_st_attr.m);
          IF (INSTR(LOWER(rec_st_attr.data_type),'unknown') = 0) THEN
             DBMS_LOB.APPEND (res, rec_st_attr.data_type);
          ELSE
             SELECT XMLElement(EVALNAME(single_st_prefix || ':DataType'), '').getClobVal() INTO token_value FROM dual;
             DBMS_LOB.APPEND (res, token_value);
          END IF;
          DBMS_LOB.APPEND (res, rec_st_attr.dt_kind);
          DBMS_LOB.APPEND (res, rec_st_attr.domain_name);
          DBMS_LOB.APPEND (res,'</' || single_st_prefix || ':AttributeDetails>');

        IF (cur_st_attr%ROWCOUNT = rec_st_attr.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':AttributesCollection>');
        END IF;
        v_seq := v_seq + 1;
     END LOOP;
   END IF;
  
   v_seq := 1;
   -- Attribute Comments
   IF (reportTemplate.reportType = 0 OR reportTemplate.useSTAttributesComments = 1) THEN
     FOR rec_attributes_comments IN cur_attributes_comments(v_str_type_ovid) LOOP
        IF (cur_attributes_comments%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':AttributesCommentsCollection>');
        END IF;

          DBMS_LOB.APPEND (res, '<' || single_st_prefix || ':AttributeCommentsDetails>');
          DBMS_LOB.APPEND (res, '<' || single_st_prefix || ':AttributeCommentsSequence>' || TO_CHAR(v_seq) || '</' || single_st_prefix || ':AttributeCommentsSequence>');
          DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_name);
          DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_description);
          DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_notes);
          DBMS_LOB.APPEND (res,'</' || single_st_prefix || ':AttributeCommentsDetails>');

        IF (cur_attributes_comments%ROWCOUNT = rec_attributes_comments.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':AttributesCommentsCollection>');
        END IF;
        v_seq := v_seq + 1;
     END LOOP;
   END IF;

   v_seq := 1;
   IF (reportTemplate.reportType = 0 OR reportTemplate.useSTMethods = 1) THEN
     FOR rec_st_methods IN cur_st_methods(v_str_type_ovid) LOOP
        IF (cur_st_methods%ROWCOUNT = 1) THEN
          DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':MethodsCollection>');
        END IF;
            
            DBMS_LOB.APPEND (res, '<' || single_st_prefix || ':MethodDetails>');
            DBMS_LOB.APPEND (res, '<' || single_st_prefix || ':MethodSequence>' || TO_CHAR(v_seq) || '</' || single_st_prefix || ':MethodSequence>');
            DBMS_LOB.APPEND (res, rec_st_methods.m_name);
            DBMS_LOB.APPEND (res, rec_st_methods.m_constr);
            DBMS_LOB.APPEND (res, rec_st_methods.m_overriding);
            DBMS_LOB.APPEND (res, rec_st_methods.m_om_name);
            DBMS_LOB.APPEND (res, rec_st_methods.m_return_type);
            
            FOR rec_st_methods_p IN cur_st_methods_p(rec_st_methods.method_ovid) LOOP
               IF (cur_st_methods_p%ROWCOUNT = 1) THEN
                 DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':MethodParametersCollection>');
               END IF;

                 DBMS_LOB.APPEND (res, '<' || single_st_prefix || ':MethodParameterDetails>');
                 DBMS_LOB.APPEND (res, rec_st_methods_p.param_name);
                 DBMS_LOB.APPEND (res, rec_st_methods_p.param_type);
                 DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':MethodParameterDetails>');

               IF (cur_st_methods_p%ROWCOUNT = rec_st_methods_p.total_row_count) THEN
                 DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':MethodParametersCollection>');
               END IF;
            END LOOP;       
           
            DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':MethodDetails>');
            
        IF (cur_st_methods%ROWCOUNT = rec_st_methods.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':MethodsCollection>');
        END IF;
        v_seq := v_seq + 1;
     END LOOP;
   END IF;

   -- Used in tables
   IF (reportTemplate.reportType = 0 OR reportTemplate.useSTUsedInTables = 1) THEN
     FOR rec_used_in_tables IN cur_used_in_tables(v_str_type_ovid) LOOP
        IF (cur_used_in_tables%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':TablesCollection>');
        END IF;
           DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':TableDetails>');

           v_model_name := rec_used_in_tables.model_name;
           IF (v_model_name != p_model_name) THEN
             DBMS_LOB.APPEND (res,v_model_name);
             p_model_name := v_model_name;
           ELSE
             DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':ModelName></' || single_st_prefix || ':ModelName>');
           END IF;

           v_table_name := rec_used_in_tables.table_name;
           IF (v_table_name != p_table_name) THEN
           DBMS_LOB.APPEND (res,v_table_name);
             p_table_name := v_table_name;
           ELSE
             DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':TableName></' || single_st_prefix || ':TableName>');
           END IF;

           DBMS_LOB.APPEND (res,rec_used_in_tables.column_name);
           DBMS_LOB.APPEND (res,'</' || single_st_prefix || ':TableDetails>');
        IF (cur_used_in_tables%ROWCOUNT = rec_used_in_tables.total_row_count) THEN
           DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':TablesCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Used in entities
   IF (reportTemplate.reportType = 0 OR reportTemplate.useSTUsedInEntities = 1) THEN
     FOR rec_used_in_entities IN cur_used_in_entities(v_str_type_ovid) LOOP
        IF (cur_used_in_entities%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':EntitiesCollection>');
        END IF;
           DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':EntityDetails>');
          
           v_entity_name := rec_used_in_entities.entity_name;
           IF (v_entity_name != p_entity_name) THEN
             DBMS_LOB.APPEND (res,v_entity_name);
             p_entity_name := v_entity_name;
           ELSE
             DBMS_LOB.APPEND (res,'<' || single_st_prefix || ':EntityName></' || single_st_prefix || ':EntityName>');
           END IF;

           DBMS_LOB.APPEND (res,rec_used_in_entities.attribute_name);
           DBMS_LOB.APPEND (res,'</' || single_st_prefix || ':EntityDetails>');
        IF (cur_used_in_entities%ROWCOUNT = rec_used_in_entities.total_row_count) THEN
           DBMS_LOB.APPEND (res, '</' || single_st_prefix || ':EntitiesCollection>');
        END IF;
     END LOOP;
   END IF;

  DBMS_LOB.APPEND (res,'</' || single_st_prefix || ':StructuredType>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for single structured type ended');  

RETURN res;
  
 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleST_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleST_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_SingleST_Data;

FUNCTION Gather_AllST_Data(v_model_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE, objects IN OBJECTS_LIST, v_report_name IN VARCHAR2) RETURN CLOB IS 

res               CLOB;
v_notes           CLOB;
v_description     CLOB;
v_rel_total_count INTEGER;
token_value       CLOB;
v_seq             INTEGER := 1;
p_model_name      VARCHAR2(100) :='_';
v_model_name      VARCHAR2(100) :='';
p_table_name      VARCHAR2(100) :='_';
v_table_name      VARCHAR2(100) :='';
p_entity_name     VARCHAR2(100) :='_';
v_entity_name     VARCHAR2(100) :='';

-- General data
CURSOR cur_general_data(v_m_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_st_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(all_st_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(all_st_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                     version_comment,
        XMLElement(EVALNAME(all_st_prefix || ':ModelName'),m.model_name).getClobVal()                                          model_name
 FROM   dmrs_designs d, 
        dmrs_models m
 WHERE  d.design_ovid = m.design_ovid
 AND    m.model_ovid = v_model_ovid;
rec_general_data cur_general_data%ROWTYPE;

-- All structured types general data
CURSOR cur_all_st(v_m_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_st_prefix || ':STName'),st.structured_type_name).getClobVal()                                    st_name,
        XMLElement(EVALNAME(all_st_prefix || ':EncodedSTName'),st.structured_type_ovid).getClobVal()                             xml_ovid,
 		XMLElement(EVALNAME(all_st_prefix || ':STSuperType'),(SELECT st1.structured_type_name 
                                            FROM  dmrs_structured_types st1 
                                            WHERE st.super_type_ovid = st1.structured_type_ovid)).getClobVal() super_type,
        st.structured_type_ovid                                                                                					st_ovid,

        COUNT(st.structured_type_name) over()                                                                  					total_row_count
 FROM   dmrs_structured_types st
 WHERE  st.model_ovid = v_m_ovid
 AND    st.structured_type_ovid MEMBER OF objects
 ORDER BY st.structured_type_name;
rec_all_st cur_all_st%ROWTYPE;

-- Diagrams
CURSOR cur_diagrams(v_t_ovid IN VARCHAR2, v_rep_name IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_st_prefix || ':Diagram'), 
          XMLElement(EVALNAME(all_st_prefix || ':Name'), v_rep_name || '_files/' || REGEXP_REPLACE(SUBSTR(d.pdf_name, 1, INSTR(d.pdf_name, '.PDF')-1), '[^a-zA-Z1-9_]', '_') || '.pdf'),
          XMLElement(EVALNAME(all_st_prefix || ':Suffix'), NULL)).getClobVal()                                                                                                            pdf_name,
        COUNT(d.pdf_name) over()                                                                                                                                                          total_row_count
 FROM   dmrs_vdiagrams d,
       (SELECT diagram_ovid 
        FROM   dmrs_diagram_elements
        WHERE  ovid = v_t_ovid) b
 WHERE d.ovid = b.diagram_ovid
 AND   d.diagram_type = 'Subview'
 AND   d.is_display = 'N';
rec_diagrams cur_diagrams%ROWTYPE;

--Attributes
CURSOR cur_st_attr(v_st_ovid IN VARCHAR2) IS
SELECT  XMLElement(EVALNAME(all_st_prefix || ':AttributeName'), sta.attribute_name).getClobVal()                                                                                 attr_name,
        XMLElement(EVALNAME(all_st_prefix || ':M'),DECODE(sta.mandatory,'N','','Y')).getClobVal()                                                                                m,
        XMLElement(EVALNAME(all_st_prefix || ':DataTypeKind'),DECODE(sta.datatype_kind,                                                                                           
                                                 'Domain',         'DOM',
                                                 'Logical Type',   'LT',
                                                 'Distinct Type',  'DT',
                                                 'Ref Struct Type','RST',
                                                 'Structured Type','ST',
                                                 'Collection Type','CT')
                  ).getClobVal()                                                                                                                               dt_kind,
         XMLElement(EVALNAME(all_st_prefix || ':DataType'), 
            DECODE(sta.datatype_kind, 
                  'Domain', sta.type_name ||' '||
                           DECODE (NVL(sta.t_size,''),'',
                              DECODE(NVL(sta.t_scale,0),0,
                                 DECODE(NVL(sta.t_precision,0),0,null,'('|| DECODE(NVL(sta.t_precision,0),0,null,sta.t_precision) ||')'),
                                   '('|| DECODE(NVL(sta.t_precision,0),0,null,sta.t_precision) || ',' || DECODE(NVL(sta.t_scale,0),0,null,sta.t_scale)||')'),
                                   '('||TRIM(DECODE(sta.t_size,'',null,sta.t_size||' '||sta.char_units ))||')'),
                   'Logical Type', sta.type_name  ||' '|| 
                           DECODE (NVL(sta.t_size,''),'',
                              DECODE(NVL(sta.t_scale,0),0,
                                 DECODE(NVL(sta.t_precision,0),0,null,'('|| DECODE(NVL(sta.t_precision,0),0,null,sta.t_precision) ||')'),
                                   '('|| DECODE(NVL(sta.t_precision,0),0,null,sta.t_precision) || ',' || DECODE(NVL(sta.t_scale,0),0,null,sta.t_scale)||')'),
                                   '('||TRIM(DECODE(sta.t_size,'',null,sta.t_size||' '||sta.char_units ))||')')
            )).getClobVal()                                                                                                                                    data_type,
        XMLElement(EVALNAME(all_st_prefix || ':DomainName'),DECODE(sta.domain_name,'Unknown',null,sta.domain_name)).getClobVal()                                                 domain_name,
      COUNT(sta.attribute_name) over()                                                                                                                         total_row_count
FROM  dmrs_struct_type_attrs sta,
      dmrs_structured_types st
WHERE sta.structured_type_ovid = st.structured_type_ovid
AND   st.structured_type_ovid = v_st_ovid;
rec_st_attr cur_st_attr%ROWTYPE;

-- Attributes Comments Data
CURSOR cur_attributes_comments(v_st_ovid IN VARCHAR2) IS
 SELECT a.attribute_name                              attribute_name, 
        a.attribute_description                       attribute_description, 
        a.attribute_notes                             attribute_notes,
        COUNT(a.attribute_name) over()                total_row_count
 FROM (
  SELECT XMLElement(EVALNAME(all_st_prefix || ':AttributeCommentsName'),a.attribute_name).getStringVal()          attribute_name,
         XMLElement(EVALNAME(all_st_prefix || ':AttributeDescription'),XMLCDATA(
            NVL((SELECT t.text comments_in_rdbms
                 FROM   dmrs_large_text t
                 WHERE  t.ovid = a.attribute_ovid
                 AND    t.type='Comments'),
                (SELECT t.text comments_in_rdbms
                FROM   dmrs_large_text t
                WHERE  t.ovid = a.attribute_ovid
                AND    t.type='CommentsInRDBMS')))).getClobVal()                                                  attribute_description, 
         XMLElement(EVALNAME(all_st_prefix || ':AttributeNotes'),XMLCDATA(
                (SELECT t.text comments_in_rdbms
                FROM   dmrs_large_text t
                WHERE  t.ovid = a.attribute_ovid
                AND    t.type='Note'))).getClobVal()                                                              attribute_notes
  FROM   dmrs_struct_type_attrs a
  WHERE  a.structured_type_ovid = v_st_ovid
 ) a
 WHERE DBMS_LOB.getlength(attribute_description) > 0 OR DBMS_LOB.getlength(attribute_notes) > 0;
rec_attributes_comments cur_attributes_comments%ROWTYPE;

-- Methods
CURSOR  cur_st_methods(v_st_ovid IN VARCHAR2) IS
SELECT  XMLElement(EVALNAME(all_st_prefix || ':MethodName'), m.method_name).getClobVal()                           m_name,
        XMLElement(EVALNAME(all_st_prefix || ':MethodConstructor'), DECODE(m.constructor,'N','','Y')).getClobVal() m_constr,
        XMLElement(EVALNAME(all_st_prefix || ':MethodOverriding'), DECODE(m.overriding,'N','','Y')).getClobVal()   m_overriding,
        XMLElement(EVALNAME(all_st_prefix || ':MethodOverridenMethod'), m.overridden_method_name).getClobVal()     m_om_name,
        XMLElement(EVALNAME(all_st_prefix || ':MethodReturnValue'), 
        (SELECT sp.type_name  ||' '|| 
                DECODE (NVL(sp.t_size,''),'',
                 DECODE(NVL(sp.t_scale,0),0,
                  DECODE(NVL(sp.t_precision,0),0,null,'('|| DECODE(NVL(sp.t_precision,0),0,null,sp.t_precision) ||')'),
                  '('|| DECODE(NVL(sp.t_precision,0),0,null,sp.t_precision) || ',' || DECODE(NVL(sp.t_scale,0),0,null,sp.t_scale)||')'),
                  '('||TRIM(DECODE(sp.t_size,'',null,sp.t_size ))||')')
         FROM   dmrs_struct_type_method_pars sp 
         WHERE  return_value= 'Y'
         AND    sp.method_ovid = m.method_ovid)).getClobVal()                                    m_return_type,        
        COUNT(m.method_name) over()                                                              total_row_count,
        m.method_ovid                                                                            method_ovid
FROM dmrs_struct_type_methods m,
     dmrs_structured_types st
WHERE m.structured_type_ovid = st.structured_type_ovid
AND   st.structured_type_ovid = v_st_ovid;
rec_st_methods cur_st_methods%ROWTYPE;

-- Method params
CURSOR cur_st_methods_p(v_m_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_st_prefix || ':ParameterName'), parameter_name).getClobVal()  param_name,
        XMLElement(EVALNAME(all_st_prefix || ':ParameterType'), 
        type_name  ||' '|| 
                DECODE (NVL(t_size,0),0,
                 DECODE(NVL(t_scale,0),0,
                  DECODE(NVL(t_precision,0),0,null,'('|| DECODE(NVL(t_precision,0),0,null,t_precision) ||')'),
                  '('|| DECODE(NVL(t_precision,0),0,null,t_precision) || ',' || DECODE(NVL(t_scale,0),0,null,t_scale)||')'),
                  '('||TRIM(DECODE(t_size,0,null,t_size ))||')')
        ).getClobVal()       param_type,
        COUNT(parameter_name) over()                                        total_row_count
 FROM   dmrs_struct_type_method_pars
 WHERE  method_ovid = v_m_ovid
 AND    return_value = 'N'
 ORDER BY seq;
rec_st_methods_p cur_st_methods_p%ROWTYPE;

-- Used In tables
CURSOR cur_used_in_tables(v_st_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_st_prefix || ':ModelName'), m.model_name).getClobVal()     model_name,
        XMLElement(EVALNAME(all_st_prefix || ':TableName'), t.table_name).getClobVal()     table_name,
        XMLElement(EVALNAME(all_st_prefix || ':ColumnName'), c.column_name).getClobVal()   column_name,
        COUNT(m.model_name) over()                                       total_row_count
 FROM   dmrs_tables t,
        dmrs_columns c,
        dmrs_structured_types st,
        dmrs_models  m
 WHERE  t.ovid = c.container_ovid
 AND    c.structured_type_ovid = st.structured_type_ovid
 AND    m.model_ovid = t.model_ovid
 AND    c.datatype_kind = 'Structured Type'
 AND    st.structured_type_ovid = v_st_ovid
 ORDER BY m.model_name,
          t.table_name,
          c.column_name;
rec_used_in_tables cur_used_in_tables%ROWTYPE;

-- Used In entities
CURSOR cur_used_in_entities(v_st_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_st_prefix || ':EntityName'), e.entity_name).getClobVal()        entity_name,
        XMLElement(EVALNAME(all_st_prefix || ':AttributeName'), a.attribute_name).getClobVal()  attribute_name,
        COUNT(e.entity_name) over()                                           total_row_count
 FROM   dmrs_entities e,
        dmrs_attributes a,
        dmrs_structured_types st
 WHERE  e.ovid = a.container_ovid
 AND    a.structured_type_ovid = st.structured_type_ovid
 AND    a.datatype_kind = 'Structured Type'
 AND    st.structured_type_ovid = v_st_ovid
 ORDER BY e.entity_name,
          a.attribute_name;
rec_used_in_entities cur_used_in_entities%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for all structured types started ...');
  
  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':StructuredTypes xmlns:' || all_st_prefix || '="http://oracle.com/datamodeler/reports/structuredtypes">');
  
  FOR rec_general_data IN cur_general_data(v_model_ovid) LOOP

    DBMS_LOB.APPEND (res, rec_general_data.design_name);
    DBMS_LOB.APPEND (res, rec_general_data.version_date);
    DBMS_LOB.APPEND (res, rec_general_data.version_comment);
    DBMS_LOB.APPEND (res, rec_general_data.model_name);

  END LOOP;

  -- All structured types
  FOR rec_all_st IN cur_all_st(v_model_ovid) LOOP

      IF (cur_all_st%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':STCollection>');
      END IF;
      
      DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':STDetails>');

      DBMS_LOB.APPEND (res, rec_all_st.st_name);
      DBMS_LOB.APPEND (res, rec_all_st.xml_ovid);
      DBMS_LOB.APPEND (res, rec_all_st.super_type);
      
      -- Description / Notes
      IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN
      
         DBMS_LOB.APPEND (res, '<' || all_st_prefix || ':DescriptionNotes>');
         
         SELECT XMLElement(EVALNAME(all_st_prefix || ':Description'), XMLCDATA(
                  NVL((SELECT t.text comments_in_rdbms
                      FROM   dmrs_large_text t
                      WHERE  t.ovid = rec_all_st.st_ovid
                      AND    t.type='Comments'),
                      (SELECT t.text comments_in_rdbms
                      FROM   dmrs_large_text t
                      WHERE  t.ovid = rec_all_st.st_ovid
                      AND    t.type='CommentsInRDBMS')))).getClobVal(), 
                XMLElement(EVALNAME(all_st_prefix || ':Notes'), XMLCDATA(
                      (SELECT t.text comments_in_rdbms
                      FROM   dmrs_large_text t
                      WHERE  t.ovid = rec_all_st.st_ovid
                      AND    t.type='Note'))).getClobVal()
         INTO   v_description, 
                v_notes
         FROM  dual;
        
        DBMS_LOB.APPEND (res, v_description);
        DBMS_LOB.APPEND (res, v_notes);
        DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':DescriptionNotes>');
         
      END IF;
      
       -- Diagrams
       IF (reportTemplate.reportType = 0 OR reportTemplate.useDiagrams = 1) THEN
         FOR rec_diagrams IN cur_diagrams(rec_all_st.st_ovid, v_report_name) LOOP
            IF (cur_diagrams%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':DiagramsCollection>');
            END IF;
              
              DBMS_LOB.APPEND (res, rec_diagrams.pdf_name);
       
            IF (cur_diagrams%ROWCOUNT = rec_diagrams.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':DiagramsCollection>');
            END IF;
         END LOOP;
       END IF;

      v_seq := 1;
      -- Attributes
      IF (reportTemplate.reportType = 0 OR reportTemplate.useSTAttributes = 1) THEN
        FOR rec_st_attr IN cur_st_attr(rec_all_st.st_ovid) LOOP
           IF (cur_st_attr%ROWCOUNT = 1) THEN
             DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':AttributesCollection>');
           END IF;
      
             DBMS_LOB.APPEND (res, '<' || all_st_prefix || ':AttributeDetails>');
             DBMS_LOB.APPEND (res, '<' || all_st_prefix || ':Sequence>' || TO_CHAR(v_seq) || '</' || all_st_prefix || ':Sequence>');
             DBMS_LOB.APPEND (res, rec_st_attr.attr_name);
             DBMS_LOB.APPEND (res, rec_st_attr.m);
             IF (INSTR(LOWER(rec_st_attr.data_type),'unknown') = 0) THEN
                DBMS_LOB.APPEND (res, rec_st_attr.data_type);
             ELSE
                SELECT XMLElement(EVALNAME(all_st_prefix || ':DataType'), '').getClobVal() INTO token_value FROM dual;
                DBMS_LOB.APPEND (res, token_value);
             END IF;
             DBMS_LOB.APPEND (res, rec_st_attr.dt_kind);
             DBMS_LOB.APPEND (res, rec_st_attr.domain_name);
             DBMS_LOB.APPEND (res,'</' || all_st_prefix || ':AttributeDetails>');
      
           IF (cur_st_attr%ROWCOUNT = rec_st_attr.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':AttributesCollection>');
           END IF;
           v_seq := v_seq + 1;
        END LOOP;
      END IF;

      v_seq := 1;
      -- Attribute Comments
      IF (reportTemplate.reportType = 0 OR reportTemplate.useSTAttributesComments = 1) THEN
        FOR rec_attributes_comments IN cur_attributes_comments(rec_all_st.st_ovid) LOOP
           IF (cur_attributes_comments%ROWCOUNT = 1) THEN
             DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':AttributesCommentsCollection>');
           END IF;
      
            DBMS_LOB.APPEND (res, '<' || all_st_prefix || ':AttributeCommentsDetails>');
            
            DBMS_LOB.APPEND (res, '<' || all_st_prefix || ':AttributeCommentsSequence>' || TO_CHAR(v_seq) || '</' || all_st_prefix || ':AttributeCommentsSequence>');
            DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_name);
            DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_description);
            DBMS_LOB.APPEND (res, rec_attributes_comments.attribute_notes); 
            DBMS_LOB.APPEND (res,'</' || all_st_prefix || ':AttributeCommentsDetails>');
      
           IF (cur_attributes_comments%ROWCOUNT = rec_attributes_comments.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':AttributesCommentsCollection>');
           END IF;
           v_seq := v_seq + 1;
        END LOOP;
      END IF;

      v_seq := 1;
      IF (reportTemplate.reportType = 0 OR reportTemplate.useSTMethods = 1) THEN
        FOR rec_st_methods IN cur_st_methods(rec_all_st.st_ovid) LOOP
           IF (cur_st_methods%ROWCOUNT = 1) THEN
             DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':MethodsCollection>');
           END IF;
               
               DBMS_LOB.APPEND (res, '<' || all_st_prefix || ':MethodDetails>');
               DBMS_LOB.APPEND (res, '<' || all_st_prefix || ':MethodSequence>' || TO_CHAR(v_seq) || '</' || all_st_prefix || ':MethodSequence>');
               DBMS_LOB.APPEND (res, rec_st_methods.m_name);
               DBMS_LOB.APPEND (res, rec_st_methods.m_constr);
               DBMS_LOB.APPEND (res, rec_st_methods.m_overriding);
               DBMS_LOB.APPEND (res, rec_st_methods.m_om_name);
               DBMS_LOB.APPEND (res, rec_st_methods.m_return_type);
               
               FOR rec_st_methods_p IN cur_st_methods_p(rec_st_methods.method_ovid) LOOP
                  IF (cur_st_methods_p%ROWCOUNT = 1) THEN
                    DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':MethodParametersCollection>');
                  END IF;
      
                    DBMS_LOB.APPEND (res, '<' || all_st_prefix || ':MethodParameterDetails>');
                    DBMS_LOB.APPEND (res, rec_st_methods_p.param_name);
                    DBMS_LOB.APPEND (res, rec_st_methods_p.param_type);
                    DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':MethodParameterDetails>');
      
                  IF (cur_st_methods_p%ROWCOUNT = rec_st_methods_p.total_row_count) THEN
                    DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':MethodParametersCollection>');
                  END IF;
               END LOOP;       
              
               DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':MethodDetails>');
               
           IF (cur_st_methods%ROWCOUNT = rec_st_methods.total_row_count) THEN
             DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':MethodsCollection>');
           END IF;
           v_seq := v_seq + 1;
        END LOOP;
      END IF;

      -- Used in tables
      IF (reportTemplate.reportType = 0 OR reportTemplate.useSTUsedInTables = 1) THEN
        FOR rec_used_in_tables IN cur_used_in_tables(rec_all_st.st_ovid) LOOP
           IF (cur_used_in_tables%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':TablesCollection>');
           END IF;
              DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':TableDetails>');
      
              v_model_name := rec_used_in_tables.model_name;
              IF (v_model_name != p_model_name) THEN
                DBMS_LOB.APPEND (res,v_model_name);
                p_model_name := v_model_name;
              ELSE
                DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':ModelName></' || all_st_prefix || ':ModelName>');
              END IF;
      
              v_table_name := rec_used_in_tables.table_name;
              IF (v_table_name != p_table_name) THEN
              DBMS_LOB.APPEND (res,v_table_name);
                p_table_name := v_table_name;
              ELSE
                DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':TableName></' || all_st_prefix || ':TableName>');
              END IF;
      
              DBMS_LOB.APPEND (res,rec_used_in_tables.column_name);
              DBMS_LOB.APPEND (res,'</' || all_st_prefix || ':TableDetails>');
           IF (cur_used_in_tables%ROWCOUNT = rec_used_in_tables.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':TablesCollection>');
           END IF;
        END LOOP;
      END IF;
      
      -- Used in entities
      IF (reportTemplate.reportType = 0 OR reportTemplate.useSTUsedInEntities = 1) THEN
        FOR rec_used_in_entities IN cur_used_in_entities(rec_all_st.st_ovid) LOOP
           IF (cur_used_in_entities%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':EntitiesCollection>');
           END IF;
              DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':EntityDetails>');
             
              v_entity_name := rec_used_in_entities.entity_name;
              IF (v_entity_name != p_entity_name) THEN
                DBMS_LOB.APPEND (res,v_entity_name);
                p_entity_name := v_entity_name;
              ELSE
                DBMS_LOB.APPEND (res,'<' || all_st_prefix || ':EntityName></' || all_st_prefix || ':EntityName>');
              END IF;
      
              DBMS_LOB.APPEND (res,rec_used_in_entities.attribute_name);
              DBMS_LOB.APPEND (res,'</' || all_st_prefix || ':EntityDetails>');
           IF (cur_used_in_entities%ROWCOUNT = rec_used_in_entities.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</' || all_st_prefix || ':EntitiesCollection>');
           END IF;
        END LOOP;
      END IF;

      DBMS_LOB.APPEND (res,'</' || all_st_prefix || ':STDetails>');

      IF (cur_all_st%ROWCOUNT = rec_all_st.total_row_count) THEN
          DBMS_LOB.APPEND (res,'</' || all_st_prefix || ':STCollection>');
      END IF;

  END LOOP;
  
  DBMS_LOB.APPEND (res,'</' || all_st_prefix || ':StructuredTypes>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for all structured types ended');  

RETURN res;
  
 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllST_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllST_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_AllST_Data;

FUNCTION Gather_SingleCT_Data(v_ct_type_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE) RETURN CLOB IS 

res               CLOB;
v_notes           CLOB;
v_description     CLOB;
v_rel_total_count INTEGER;
token_value       CLOB;
p_model_name      VARCHAR2(100) :='_';
v_model_name      VARCHAR2(100) :='';
p_table_name      VARCHAR2(100) :='_';
v_table_name      VARCHAR2(100) :='';
p_entity_name     VARCHAR2(100) :='_';
v_entity_name     VARCHAR2(100) :='';

-- General data
CURSOR cur_general_data(v_ct_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_ct_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(single_ct_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(single_ct_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                     version_comment,
        XMLElement(EVALNAME(single_ct_prefix || ':ModelName'),m.model_name).getClobVal()                                          model_name
 FROM   dmrs_designs d, 
        dmrs_models m,
        dmrs_collection_types ct
 WHERE  d.design_ovid = m.design_ovid
 AND    ct.model_ovid = m.model_ovid
 AND    ct.collection_type_ovid = v_ct_ovid;
rec_general_data cur_general_data%ROWTYPE;

CURSOR cur_ct_data(v_ct_ovid IN VARCHAR2) IS
 SELECT  XMLElement(EVALNAME(single_ct_prefix || ':CTName'),ct.collection_type_name).getClobVal()                                                                                   ct_name,
         XMLElement(EVALNAME(single_ct_prefix || ':CTType'),ct.c_type).getClobVal()                                                                                                 ct_type,
         XMLElement(EVALNAME(single_ct_prefix || ':CTMaxElements'),ct.max_element).getClobVal()                                                                                     max_element,
         XMLElement(EVALNAME(single_ct_prefix || ':CTDataTypeKind'),DECODE(ct.datatype_kind,
                                                  'Domain',         'DOM',
                                                  'Logical Type',   'LT',
                                                  'Distinct Type',  'DT',
                                                  'Ref Struct Type','RST',
                                                  'Structured Type','ST',
                                                  'Collection Type','CT')
                   ).getClobVal()                                                                                                                               dt_kind,
          XMLElement(EVALNAME(single_ct_prefix || ':CTDataType'), 
             DECODE(ct.datatype_kind, 
                  'Domain', ct.dt_type ||' '||
                           DECODE (NVL(ct.t_size,''),'',
                              DECODE(NVL(ct.t_scale,0),0,
                                 DECODE(NVL(ct.t_precision,0),0,null,'('|| DECODE(NVL(ct.t_precision,0),0,null,ct.t_precision) ||')'),
                                   '('|| DECODE(NVL(ct.t_precision,0),0,null,ct.t_precision) || ',' || DECODE(NVL(ct.t_scale,0),0,null,ct.t_scale)||')'),
                                   '('||TRIM(DECODE(ct.t_size,'',null,ct.t_size||' '||ct.char_units ))||')'),
                   'Logical Type', ct.dt_type  ||' '|| 
                           DECODE (NVL(ct.t_size,''),'',
                              DECODE(NVL(ct.t_scale,0),0,
                                 DECODE(NVL(ct.t_precision,0),0,null,'('|| DECODE(NVL(ct.t_precision,0),0,null,ct.t_precision) ||')'),
                                   '('|| DECODE(NVL(ct.t_precision,0),0,null,ct.t_precision) || ',' || DECODE(NVL(ct.t_scale,0),0,null,ct.t_scale)||')'),
                                   '('||TRIM(DECODE(ct.t_size,'',null,ct.t_size||' '||ct.char_units ))||')')
             )).getClobVal()                                                                                                                                    data_type,
       XMLElement(EVALNAME(single_ct_prefix || ':CTDomainName'),DECODE(ct.domain_name,'Unknown',null,ct.domain_name)).getClobVal()                                                   domain_name
 FROM  dmrs_collection_types ct
 WHERE ct.collection_type_ovid = v_ct_ovid;
rec_ct_data cur_ct_data%ROWTYPE;

-- Used In tables
CURSOR cur_used_in_tables(v_ct_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_ct_prefix || ':ModelName'), m.model_name).getClobVal()     model_name,
        XMLElement(EVALNAME(single_ct_prefix || ':TableName'), t.table_name).getClobVal()     table_name,
        XMLElement(EVALNAME(single_ct_prefix || ':ColumnName'), c.column_name).getClobVal()   column_name,
        COUNT(m.model_name) over()                                       total_row_count
FROM   dmrs_tables t,
        dmrs_columns c,
        dmrs_collection_types ct,
        dmrs_models  m
 WHERE  t.ovid = c.container_ovid
 AND    c.collection_type_ovid = ct.collection_type_ovid
 AND    m.model_ovid = t.model_ovid
 AND    c.datatype_kind = 'Collection Type'
 AND    ct.collection_type_ovid = v_ct_ovid
 ORDER BY m.model_name,
          t.table_name,
          c.column_name;
rec_used_in_tables cur_used_in_tables%ROWTYPE;

-- Used In entities
CURSOR cur_used_in_entities(v_ct_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_ct_prefix || ':EntityName'), e.entity_name).getClobVal()        entity_name,
        XMLElement(EVALNAME(single_ct_prefix || ':AttributeName'), a.attribute_name).getClobVal()  attribute_name,
        COUNT(e.entity_name) over()                                           total_row_count
 FROM   dmrs_entities e,
        dmrs_attributes a,
        dmrs_collection_types ct
 WHERE  e.ovid = a.container_ovid
 AND    a.collection_type_ovid = ct.collection_type_ovid
 AND    a.datatype_kind = 'Collection Type'
 AND    ct.collection_type_ovid = v_ct_ovid
 ORDER BY e.entity_name,
          a.attribute_name;
rec_used_in_entities cur_used_in_entities%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for single collection type started ...');
  
  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || single_ct_prefix || ':CollectionType xmlns:' || single_ct_prefix || '="http://oracle.com/datamodeler/reports/collectiontype">');
  
  FOR rec_general_data IN cur_general_data(v_ct_type_ovid) LOOP

    DBMS_LOB.APPEND (res, rec_general_data.design_name);
    DBMS_LOB.APPEND (res, rec_general_data.version_date);
    DBMS_LOB.APPEND (res, rec_general_data.version_comment);
    DBMS_LOB.APPEND (res, rec_general_data.model_name);

  END LOOP;

   -- Description / Notes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN
      
      DBMS_LOB.APPEND (res, '<' || single_ct_prefix || ':DescriptionNotes>');
      
      SELECT  XMLElement(EVALNAME(single_ct_prefix || ':Description'), XMLCDATA(
                NVL((SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = v_ct_type_ovid
                    AND    t.type='Comments'),
                    (SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = v_ct_type_ovid
                    AND    t.type='CommentsInRDBMS')))).getClobVal(),
              XMLElement(EVALNAME(single_ct_prefix || ':Notes'), XMLCDATA(
                    (SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = v_ct_type_ovid
                    AND    t.type='Note'))).getClobVal()
      INTO   v_description, 
             v_notes
      FROM  dual;

      DBMS_LOB.APPEND (res, v_description);
      DBMS_LOB.APPEND (res, v_notes);
      DBMS_LOB.APPEND (res, '</' || single_ct_prefix || ':DescriptionNotes>');
      
   END IF;

   FOR rec_ct_data IN cur_ct_data(v_ct_type_ovid) LOOP
      DBMS_LOB.APPEND (res, rec_ct_data.ct_name);
      DBMS_LOB.APPEND (res, rec_ct_data.ct_type);
      DBMS_LOB.APPEND (res, rec_ct_data.max_element);
      DBMS_LOB.APPEND (res, rec_ct_data.data_type);
      DBMS_LOB.APPEND (res, rec_ct_data.dt_kind);
      DBMS_LOB.APPEND (res, rec_ct_data.domain_name);
   END LOOP;

   -- Used in tables
   IF (reportTemplate.reportType = 0 OR reportTemplate.useCTUsedInTables = 1) THEN
     FOR rec_used_in_tables IN cur_used_in_tables(v_ct_type_ovid) LOOP
        IF (cur_used_in_tables%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || single_ct_prefix || ':TablesCollection>');
        END IF;
           DBMS_LOB.APPEND (res,'<' || single_ct_prefix || ':TableDetails>');

           v_model_name := rec_used_in_tables.model_name;
           IF (v_model_name != p_model_name) THEN
             DBMS_LOB.APPEND (res,v_model_name);
             p_model_name := v_model_name;
           ELSE
             DBMS_LOB.APPEND (res,'<' || single_ct_prefix || ':ModelName></' || single_ct_prefix || ':ModelName>');
           END IF;

           v_table_name := rec_used_in_tables.table_name;
           IF (v_table_name != p_table_name) THEN
           DBMS_LOB.APPEND (res,v_table_name);
             p_table_name := v_table_name;
           ELSE
             DBMS_LOB.APPEND (res,'<' || single_ct_prefix || ':TableName></' || single_ct_prefix || ':TableName>');
           END IF;

           DBMS_LOB.APPEND (res,rec_used_in_tables.column_name);
           DBMS_LOB.APPEND (res,'</' || single_ct_prefix || ':TableDetails>');
        IF (cur_used_in_tables%ROWCOUNT = rec_used_in_tables.total_row_count) THEN
           DBMS_LOB.APPEND (res, '</' || single_ct_prefix || ':TablesCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Used in entities
   IF (reportTemplate.reportType = 0 OR reportTemplate.useCTUsedInEntities = 1) THEN
     FOR rec_used_in_entities IN cur_used_in_entities(v_ct_type_ovid) LOOP
        IF (cur_used_in_entities%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || single_ct_prefix || ':EntitiesCollection>');
        END IF;
           DBMS_LOB.APPEND (res,'<' || single_ct_prefix || ':EntityDetails>');
          
           v_entity_name := rec_used_in_entities.entity_name;
           IF (v_entity_name != p_entity_name) THEN
             DBMS_LOB.APPEND (res,v_entity_name);
             p_entity_name := v_entity_name;
           ELSE
             DBMS_LOB.APPEND (res,'<' || single_ct_prefix || ':EntityName></' || single_ct_prefix || ':EntityName>');
           END IF;

           DBMS_LOB.APPEND (res,rec_used_in_entities.attribute_name);
           DBMS_LOB.APPEND (res,'</' || single_ct_prefix || ':EntityDetails>');
        IF (cur_used_in_entities%ROWCOUNT = rec_used_in_entities.total_row_count) THEN
           DBMS_LOB.APPEND (res, '</' || single_ct_prefix || ':EntitiesCollection>');
        END IF;
     END LOOP;
   END IF;
  
  DBMS_LOB.APPEND (res,'</' || single_ct_prefix || ':CollectionType>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for single collection type ended');  

RETURN res;
  
 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleCT_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleCT_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_SingleCT_Data;

FUNCTION Gather_AllCT_Data(v_model_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE, objects IN OBJECTS_LIST) RETURN CLOB IS 

res               CLOB;
v_notes           CLOB;
v_description     CLOB;
v_rel_total_count INTEGER;
token_value       CLOB;
p_model_name      VARCHAR2(100) :='_';
v_model_name      VARCHAR2(100) :='';
p_table_name      VARCHAR2(100) :='_';
v_table_name      VARCHAR2(100) :='';
p_entity_name     VARCHAR2(100) :='_';
v_entity_name     VARCHAR2(100) :='';

CURSOR cur_general_data(v_m_ovid IN VARCHAR2) IS
 -- General data
 SELECT XMLElement(EVALNAME(all_ct_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(all_ct_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(all_ct_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                     version_comment,
        XMLElement(EVALNAME(all_ct_prefix || ':ModelName'),m.model_name).getClobVal()                                          model_name
 FROM   dmrs_designs d, 
        dmrs_models m
 WHERE  d.design_ovid = m.design_ovid
 AND    m.model_ovid = v_model_ovid;
rec_general_data cur_general_data%ROWTYPE;

-- All collection types data 
CURSOR cur_all_ct_data(v_m_ovid IN VARCHAR2) IS
 SELECT  XMLElement(EVALNAME(all_ct_prefix || ':CTName'),ct.collection_type_name).getClobVal()                                                                                   ct_name,
		 XMLElement(EVALNAME(all_ct_prefix || ':EncodedName'),ct.collection_type_ovid).getClobVal()                                                                              xml_ovid,
 		 XMLElement(EVALNAME(all_ct_prefix || ':CTType'),ct.c_type).getClobVal()                                                                                                 ct_type,
         XMLElement(EVALNAME(all_ct_prefix || ':CTMaxElements'),ct.max_element).getClobVal()                                                                                     max_element,
         XMLElement(EVALNAME(all_ct_prefix || ':CTDataTypeKind'),DECODE(ct.datatype_kind,
                                                  'Domain',         'DOM',
                                                  'Logical Type',   'LT',
                                                  'Distinct Type',  'DT',
                                                  'Ref Struct Type','RST',
                                                  'Structured Type','ST',
                                                  'Collection Type','CT')
                   ).getClobVal()                                                                                                                               dt_kind,
          XMLElement(EVALNAME(all_ct_prefix || ':CTDataType'), 
             DECODE(ct.datatype_kind, 
                  'Domain', ct.dt_type ||' '||
                           DECODE (NVL(ct.t_size,''),'',
                              DECODE(NVL(ct.t_scale,0),0,
                                 DECODE(NVL(ct.t_precision,0),0,null,'('|| DECODE(NVL(ct.t_precision,0),0,null,ct.t_precision) ||')'),
                                   '('|| DECODE(NVL(ct.t_precision,0),0,null,ct.t_precision) || ',' || DECODE(NVL(ct.t_scale,0),0,null,ct.t_scale)||')'),
                                   '('||TRIM(DECODE(ct.t_size,'',null,ct.t_size||' '||ct.char_units ))||')'),
                   'Logical Type', ct.dt_type  ||' '|| 
                           DECODE (NVL(ct.t_size,''),'',
                              DECODE(NVL(ct.t_scale,0),0,
                                 DECODE(NVL(ct.t_precision,0),0,null,'('|| DECODE(NVL(ct.t_precision,0),0,null,ct.t_precision) ||')'),
                                   '('|| DECODE(NVL(ct.t_precision,0),0,null,ct.t_precision) || ',' || DECODE(NVL(ct.t_scale,0),0,null,ct.t_scale)||')'),
                                   '('||TRIM(DECODE(ct.t_size,'',null,ct.t_size||' '||ct.char_units ))||')')
             )).getClobVal()                                                                                                                                    data_type,
       XMLElement(EVALNAME(all_ct_prefix || ':CTDomainName'),DECODE(ct.domain_name,'Unknown',null,ct.domain_name)).getClobVal()                                                   domain_name,
       ct.collection_type_ovid                                                                                                                                  ct_ovid,
       COUNT(ct.collection_type_name) over()                                                                                                                    total_row_count
 FROM  dmrs_collection_types ct
 WHERE ct.model_ovid = v_m_ovid
 AND   ct.collection_type_ovid MEMBER OF objects
 ORDER BY ct.collection_type_name;
rec_all_ct_data cur_all_ct_data%ROWTYPE;

-- Used In tables
CURSOR cur_used_in_tables(v_ct_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_ct_prefix || ':ModelName'), m.model_name).getClobVal()     model_name,
        XMLElement(EVALNAME(all_ct_prefix || ':TableName'), t.table_name).getClobVal()     table_name,
        XMLElement(EVALNAME(all_ct_prefix || ':ColumnName'), c.column_name).getClobVal()   column_name,
        COUNT(m.model_name) over()                                       total_row_count
FROM   dmrs_tables t,
        dmrs_columns c,
        dmrs_collection_types ct,
        dmrs_models  m
 WHERE  t.ovid = c.container_ovid
 AND    c.collection_type_ovid = ct.collection_type_ovid
 AND    m.model_ovid = t.model_ovid
 AND    c.datatype_kind = 'Collection Type'
 AND    ct.collection_type_ovid = v_ct_ovid
 ORDER BY m.model_name,
          t.table_name,
          c.column_name;
rec_used_in_tables cur_used_in_tables%ROWTYPE;

-- Used In entities
CURSOR cur_used_in_entities(v_ct_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_ct_prefix || ':EntityName'), e.entity_name).getClobVal()        entity_name,
        XMLElement(EVALNAME(all_ct_prefix || ':AttributeName'), a.attribute_name).getClobVal()  attribute_name,
        COUNT(e.entity_name) over()                                           total_row_count
 FROM   dmrs_entities e,
        dmrs_attributes a,
        dmrs_collection_types ct
 WHERE  e.ovid = a.container_ovid
 AND    a.collection_type_ovid = ct.collection_type_ovid
 AND    a.datatype_kind = 'Collection Type'
 AND    ct.collection_type_ovid = v_ct_ovid
 ORDER BY e.entity_name,
          a.attribute_name;
rec_used_in_entities cur_used_in_entities%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for all collection types started ...');
  
  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':CollectionTypes xmlns:' || all_ct_prefix || '="http://oracle.com/datamodeler/reports/collectiontypes">');

  FOR rec_general_data IN cur_general_data(v_model_ovid) LOOP

    DBMS_LOB.APPEND (res, rec_general_data.design_name);
    DBMS_LOB.APPEND (res, rec_general_data.version_date);
    DBMS_LOB.APPEND (res, rec_general_data.version_comment);
    DBMS_LOB.APPEND (res, rec_general_data.model_name);

  END LOOP;
 
  -- All structured types
  FOR rec_all_ct_data IN cur_all_ct_data(v_model_ovid) LOOP

      IF (cur_all_ct_data%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':CTCollection>');
      END IF;
      
      DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':CTDetails>');

      -- Description / Notes
      IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN
   
         DBMS_LOB.APPEND (res, '<' || all_ct_prefix || ':DescriptionNotes>');
      
         SELECT XMLElement(EVALNAME(all_ct_prefix || ':Description'), XMLCDATA(
                  NVL((SELECT t.text comments_in_rdbms
                      FROM   dmrs_large_text t
                      WHERE  t.ovid = rec_all_ct_data.ct_ovid
                      AND    t.type='Comments'),
                      (SELECT t.text comments_in_rdbms
                      FROM   dmrs_large_text t
                      WHERE  t.ovid = rec_all_ct_data.ct_ovid
                      AND    t.type='CommentsInRDBMS')))).getClobVal(),
                XMLElement(EVALNAME(all_ct_prefix || ':Notes'), XMLCDATA(
                      (SELECT t.text comments_in_rdbms
                      FROM   dmrs_large_text t
                      WHERE  t.ovid = rec_all_ct_data.ct_ovid
                      AND    t.type='Note'))).getClobVal()
         INTO   v_description, 
                v_notes
         FROM  dual;
         
        DBMS_LOB.APPEND (res, v_description);
        DBMS_LOB.APPEND (res, v_notes);
        DBMS_LOB.APPEND (res, '</' || all_ct_prefix || ':DescriptionNotes>');

      END IF;
      
      DBMS_LOB.APPEND (res, rec_all_ct_data.ct_name);
      DBMS_LOB.APPEND (res, rec_all_ct_data.xml_ovid);
      DBMS_LOB.APPEND (res, rec_all_ct_data.ct_type);
      DBMS_LOB.APPEND (res, rec_all_ct_data.max_element);
      DBMS_LOB.APPEND (res, rec_all_ct_data.dt_kind);
      DBMS_LOB.APPEND (res, rec_all_ct_data.data_type);
      DBMS_LOB.APPEND (res, rec_all_ct_data.domain_name);

      -- Used in tables
      IF (reportTemplate.reportType = 0 OR reportTemplate.useCTUsedInTables = 1) THEN
        FOR rec_used_in_tables IN cur_used_in_tables(rec_all_ct_data.ct_ovid) LOOP
           IF (cur_used_in_tables%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':TablesCollection>');
           END IF;
              DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':TableDetails>');
      
              v_model_name := rec_used_in_tables.model_name;
              IF (v_model_name != p_model_name) THEN
                DBMS_LOB.APPEND (res,v_model_name);
                p_model_name := v_model_name;
              ELSE
                DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':ModelName></' || all_ct_prefix || ':ModelName>');
              END IF;
      
              v_table_name := rec_used_in_tables.table_name;
              IF (v_table_name != p_table_name) THEN
              DBMS_LOB.APPEND (res,v_table_name);
                p_table_name := v_table_name;
              ELSE
                DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':TableName></' || all_ct_prefix || ':TableName>');
              END IF;
      
              DBMS_LOB.APPEND (res,rec_used_in_tables.column_name);
              DBMS_LOB.APPEND (res,'</' || all_ct_prefix || ':TableDetails>');
           IF (cur_used_in_tables%ROWCOUNT = rec_used_in_tables.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</' || all_ct_prefix || ':TablesCollection>');
           END IF;
        END LOOP;
      END IF;
      
      -- Used in entities
      IF (reportTemplate.reportType = 0 OR reportTemplate.useCTUsedInEntities = 1) THEN
        FOR rec_used_in_entities IN cur_used_in_entities(rec_all_ct_data.ct_ovid) LOOP
           IF (cur_used_in_entities%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':EntitiesCollection>');
           END IF;
              DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':EntityDetails>');
             
              v_entity_name := rec_used_in_entities.entity_name;
              IF (v_entity_name != p_entity_name) THEN
                DBMS_LOB.APPEND (res,v_entity_name);
                p_entity_name := v_entity_name;
              ELSE
                DBMS_LOB.APPEND (res,'<' || all_ct_prefix || ':EntityName></' || all_ct_prefix || ':EntityName>');
              END IF;
      
              DBMS_LOB.APPEND (res,rec_used_in_entities.attribute_name);
              DBMS_LOB.APPEND (res,'</' || all_ct_prefix || ':EntityDetails>');
           IF (cur_used_in_entities%ROWCOUNT = rec_used_in_entities.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</' || all_ct_prefix || ':EntitiesCollection>');
           END IF;
        END LOOP;
      END IF;
  
      DBMS_LOB.APPEND (res,'</' || all_ct_prefix || ':CTDetails>');

      IF (cur_all_ct_data%ROWCOUNT = rec_all_ct_data.total_row_count) THEN
          DBMS_LOB.APPEND (res,'</' || all_ct_prefix || ':CTCollection>');
      END IF;

  END LOOP;
  
  DBMS_LOB.APPEND (res,'</' || all_ct_prefix || ':CollectionTypes>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for all collection types ended');  

RETURN res;
  
 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllCT_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllCT_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_AllCT_Data;

FUNCTION Gather_SingleDT_Data(v_dt_type_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE) RETURN CLOB IS 

res               CLOB;
v_notes           CLOB;
v_description     CLOB;
v_rel_total_count INTEGER;
token_value       CLOB;
p_model_name      VARCHAR2(100) :='_';
v_model_name      VARCHAR2(100) :='';
p_table_name      VARCHAR2(100) :='_';
v_table_name      VARCHAR2(100) :='';
p_entity_name     VARCHAR2(100) :='_';
v_entity_name     VARCHAR2(100) :='';

-- General data
CURSOR cur_general_data(v_dt_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_dt_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(single_dt_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(single_dt_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                     version_comment,
        XMLElement(EVALNAME(single_dt_prefix || ':ModelName'),m.model_name).getClobVal()                                          model_name
 FROM   dmrs_designs d, 
        dmrs_models m,
        dmrs_distinct_types dt
 WHERE  d.design_ovid = m.design_ovid
 AND    dt.model_ovid = m.model_ovid
 AND    dt.distinct_type_ovid = v_dt_ovid;
rec_general_data cur_general_data%ROWTYPE;

-- Distinct type data
CURSOR cur_dt_data(v_ct_ovid IN VARCHAR2) IS
 SELECT  XMLElement(EVALNAME(single_dt_prefix || ':DTName'),dt.distinct_type_name).getClobVal()                             dt_name,
         XMLElement(EVALNAME(single_dt_prefix || ':DTLogicalType'),dt.logical_type_name).getClobVal()                       lt_type,
         XMLElement(EVALNAME(single_dt_prefix || ':DTSize'),DECODE(dt.t_size,'0','',dt.t_size)).getClobVal()                dt_size,
         XMLElement(EVALNAME(single_dt_prefix || ':DTPrecision'),DECODE(dt.t_precision,'0','',dt.t_precision)).getClobVal() dt_precision,
         XMLElement(EVALNAME(single_dt_prefix || ':DTScale'),DECODE(dt.t_scale,'0','',dt.t_scale)).getClobVal()             dt_scale
 FROM  dmrs_distinct_types dt
 WHERE dt.distinct_type_ovid = v_ct_ovid;
rec_dt_data cur_dt_data%ROWTYPE;

-- Used In tables
CURSOR cur_used_in_tables(v_dt_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_dt_prefix || ':ModelName'), m.model_name).getClobVal()     model_name,
        XMLElement(EVALNAME(single_dt_prefix || ':TableName'), t.table_name).getClobVal()     table_name,
        XMLElement(EVALNAME(single_dt_prefix || ':ColumnName'), c.column_name).getClobVal()   column_name,
        COUNT(m.model_name) over()                                       total_row_count
FROM   dmrs_tables t,
        dmrs_columns c,
        dmrs_distinct_types dt,
        dmrs_models  m
 WHERE  t.ovid = c.container_ovid
 AND    c.distinct_type_ovid = dt.distinct_type_ovid
 AND    m.model_ovid = t.model_ovid
 AND    c.datatype_kind = 'Distinct Type'
 AND    dt.distinct_type_ovid = v_dt_ovid
 ORDER BY m.model_name,
          t.table_name,
          c.column_name;
rec_used_in_tables cur_used_in_tables%ROWTYPE;

-- Used In entities
CURSOR cur_used_in_entities(v_dt_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(single_dt_prefix || ':EntityName'), e.entity_name).getClobVal()        entity_name,
        XMLElement(EVALNAME(single_dt_prefix || ':AttributeName'), a.attribute_name).getClobVal()  attribute_name,
        COUNT(e.entity_name) over()                                           total_row_count
 FROM   dmrs_entities e,
        dmrs_attributes a,
        dmrs_distinct_types dt
 WHERE  e.ovid = a.container_ovid
 AND    a.distinct_type_ovid = dt.distinct_type_ovid
 AND    a.datatype_kind = 'Distinct Type'
 AND    dt.distinct_type_ovid = v_dt_ovid
 ORDER BY e.entity_name,
          a.attribute_name;
rec_used_in_entities cur_used_in_entities%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for single distinct type started ...');
  
  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || single_dt_prefix || ':DistinctType xmlns:' || single_dt_prefix || '="http://oracle.com/datamodeler/reports/distincttype">');
  
  FOR rec_general_data IN cur_general_data(v_dt_type_ovid) LOOP

    DBMS_LOB.APPEND (res, rec_general_data.design_name);
    DBMS_LOB.APPEND (res, rec_general_data.version_date);
    DBMS_LOB.APPEND (res, rec_general_data.version_comment);  
    DBMS_LOB.APPEND (res, rec_general_data.model_name);

  END LOOP;

   -- Description / Notes
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN
   
      DBMS_LOB.APPEND (res, '<' || single_dt_prefix || ':DescriptionNotes>');
      
      SELECT  XMLElement(EVALNAME(single_dt_prefix || ':Description'), XMLCDATA(
                NVL((SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = v_dt_type_ovid
                    AND    t.type='Comments'),
                  (SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = v_dt_type_ovid
                    AND    t.type='CommentsInRDBMS')))).getClobVal(), 
              XMLElement(EVALNAME(single_dt_prefix || ':Notes'), XMLCDATA(
                    (SELECT t.text comments_in_rdbms
                    FROM   dmrs_large_text t
                    WHERE  t.ovid = v_dt_type_ovid
                    AND    t.type='Note'))).getClobVal()
      INTO   v_description, 
             v_notes
      FROM  dual;

      DBMS_LOB.APPEND (res, v_description);
      DBMS_LOB.APPEND (res, v_notes);
      DBMS_LOB.APPEND (res, '</' || single_dt_prefix || ':DescriptionNotes>');
   
   END IF;
   
   FOR rec_dt_data IN cur_dt_data(v_dt_type_ovid) LOOP
      DBMS_LOB.APPEND (res, rec_dt_data.dt_name);
      DBMS_LOB.APPEND (res, rec_dt_data.lt_type);
      DBMS_LOB.APPEND (res, rec_dt_data.dt_size);
      DBMS_LOB.APPEND (res, rec_dt_data.dt_precision);
      DBMS_LOB.APPEND (res, rec_dt_data.dt_scale);
   END LOOP;

   -- Used in tables
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDTUsedInTables = 1) THEN
     FOR rec_used_in_tables IN cur_used_in_tables(v_dt_type_ovid) LOOP
        IF (cur_used_in_tables%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || single_dt_prefix || ':TablesCollection>');
        END IF;
           DBMS_LOB.APPEND (res,'<' || single_dt_prefix || ':TableDetails>');

           v_model_name := rec_used_in_tables.model_name;
           IF (v_model_name != p_model_name) THEN
             DBMS_LOB.APPEND (res,v_model_name);
             p_model_name := v_model_name;
           ELSE
             DBMS_LOB.APPEND (res,'<' || single_dt_prefix || ':ModelName></' || single_dt_prefix || ':ModelName>');
           END IF;

           v_table_name := rec_used_in_tables.table_name;
           IF (v_table_name != p_table_name) THEN
           DBMS_LOB.APPEND (res,v_table_name);
             p_table_name := v_table_name;
           ELSE
             DBMS_LOB.APPEND (res,'<' || single_dt_prefix || ':TableName></' || single_dt_prefix || ':TableName>');
           END IF;

           DBMS_LOB.APPEND (res,rec_used_in_tables.column_name);
           DBMS_LOB.APPEND (res,'</' || single_dt_prefix || ':TableDetails>');
        IF (cur_used_in_tables%ROWCOUNT = rec_used_in_tables.total_row_count) THEN
           DBMS_LOB.APPEND (res, '</' || single_dt_prefix || ':TablesCollection>');
        END IF;
     END LOOP;
   END IF;

   -- Used in entities
   IF (reportTemplate.reportType = 0 OR reportTemplate.useDTUsedInEntities = 1) THEN
     FOR rec_used_in_entities IN cur_used_in_entities(v_dt_type_ovid) LOOP
        IF (cur_used_in_entities%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || single_dt_prefix || ':EntitiesCollection>');
        END IF;
           DBMS_LOB.APPEND (res,'<' || single_dt_prefix || ':EntityDetails>');
          
           v_entity_name := rec_used_in_entities.entity_name;
           IF (v_entity_name != p_entity_name) THEN
             DBMS_LOB.APPEND (res,v_entity_name);
             p_entity_name := v_entity_name;
           ELSE
             DBMS_LOB.APPEND (res,'<' || single_dt_prefix || ':EntityName></' || single_dt_prefix || ':EntityName>');
           END IF;

           DBMS_LOB.APPEND (res,rec_used_in_entities.attribute_name);
           DBMS_LOB.APPEND (res,'</' || single_dt_prefix || ':EntityDetails>');
        IF (cur_used_in_entities%ROWCOUNT = rec_used_in_entities.total_row_count) THEN
           DBMS_LOB.APPEND (res, '</' || single_dt_prefix || ':EntitiesCollection>');
        END IF;
     END LOOP;
   END IF;
  
  DBMS_LOB.APPEND (res,'</' || single_dt_prefix || ':DistinctType>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for single distinct type ended');  

RETURN res;
  
 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleDT_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_SingleDT_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_SingleDT_Data;

FUNCTION Gather_AllDT_Data(v_model_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE, objects IN OBJECTS_LIST) RETURN CLOB IS 

res               CLOB;
v_notes           CLOB;
v_description     CLOB;
v_rel_total_count INTEGER;
token_value       CLOB;
p_model_name      VARCHAR2(100) :='_';
v_model_name      VARCHAR2(100) :='';
p_table_name      VARCHAR2(100) :='_';
v_table_name      VARCHAR2(100) :='';
p_entity_name     VARCHAR2(100) :='_';
v_entity_name     VARCHAR2(100) :='';

CURSOR cur_general_data(v_m_ovid IN VARCHAR2) IS
 -- General data
 SELECT XMLElement(EVALNAME(all_dt_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(all_dt_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(all_dt_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                     version_comment,
        XMLElement(EVALNAME(all_dt_prefix || ':ModelName'),m.model_name).getClobVal()                                          model_name
 FROM   dmrs_designs d, 
        dmrs_models m
 WHERE  d.design_ovid = m.design_ovid
 AND    m.model_ovid = v_model_ovid;
rec_general_data cur_general_data%ROWTYPE;

-- All distinct types data 
CURSOR cur_all_dt_data(v_m_ovid IN VARCHAR2) IS
 SELECT  XMLElement(EVALNAME(all_dt_prefix || ':DTName'),dt.distinct_type_name).getClobVal()                             dt_name,
		 XMLElement(EVALNAME(all_dt_prefix || ':EncodedName'),dt.distinct_type_ovid).getClobVal()   	                 xml_ovid,
		 XMLElement(EVALNAME(all_dt_prefix || ':DTLogicalType'),dt.logical_type_name).getClobVal()                       lt_type,
         XMLElement(EVALNAME(all_dt_prefix || ':DTSize'),DECODE(dt.t_size,'0','',dt.t_size)).getClobVal()                dt_size,
         XMLElement(EVALNAME(all_dt_prefix || ':DTPrecision'),DECODE(dt.t_precision,'0','',dt.t_precision)).getClobVal() dt_precision,
         XMLElement(EVALNAME(all_dt_prefix || ':DTScale'),DECODE(dt.t_scale,'0','',dt.t_scale)).getClobVal()             dt_scale,
         dt.distinct_type_ovid                                                                                           dt_ovid,
         COUNT(dt.distinct_type_name) over()                                                                             total_row_count
 FROM  dmrs_distinct_types dt
 WHERE dt.model_ovid = v_m_ovid
 AND   dt.distinct_type_ovid MEMBER OF objects
 ORDER BY dt.distinct_type_name;
rec_all_dt_data cur_all_dt_data%ROWTYPE;

-- Used In tables
CURSOR cur_used_in_tables(v_dt_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_dt_prefix || ':ModelName'), m.model_name).getClobVal()     model_name,
        XMLElement(EVALNAME(all_dt_prefix || ':TableName'), t.table_name).getClobVal()     table_name,
        XMLElement(EVALNAME(all_dt_prefix || ':ColumnName'), c.column_name).getClobVal()   column_name,
        COUNT(m.model_name) over()                                                         total_row_count
FROM   dmrs_tables t,
        dmrs_columns c,
        dmrs_distinct_types dt,
        dmrs_models  m
 WHERE  t.ovid = c.container_ovid
 AND    c.distinct_type_ovid = dt.distinct_type_ovid
 AND    m.model_ovid = t.model_ovid
 AND    c.datatype_kind = 'Distinct Type'
 AND    dt.distinct_type_ovid = v_dt_ovid
 ORDER BY m.model_name,
          t.table_name,
          c.column_name;
rec_used_in_tables cur_used_in_tables%ROWTYPE;

-- Used In entities
CURSOR cur_used_in_entities(v_dt_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_dt_prefix || ':EntityName'), e.entity_name).getClobVal()        entity_name,
        XMLElement(EVALNAME(all_dt_prefix || ':AttributeName'), a.attribute_name).getClobVal()  attribute_name,
        COUNT(e.entity_name) over()                                           total_row_count
 FROM   dmrs_entities e,
        dmrs_attributes a,
        dmrs_distinct_types dt
 WHERE  e.ovid = a.container_ovid
 AND    a.distinct_type_ovid = dt.distinct_type_ovid
 AND    a.datatype_kind = 'Distinct Type'
 AND    dt.distinct_type_ovid = v_dt_ovid
 ORDER BY e.entity_name,
          a.attribute_name;
rec_used_in_entities cur_used_in_entities%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for all distinct types started ...');
  
  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':DistinctTypes xmlns:' || all_dt_prefix || '="http://oracle.com/datamodeler/reports/distincttypes">');

  FOR rec_general_data IN cur_general_data(v_model_ovid) LOOP

    DBMS_LOB.APPEND (res, rec_general_data.design_name);
    DBMS_LOB.APPEND (res, rec_general_data.version_date);
    DBMS_LOB.APPEND (res, rec_general_data.version_comment);
    DBMS_LOB.APPEND (res, rec_general_data.model_name);

  END LOOP;
  
  -- All distinct types
  FOR rec_all_dt_data IN cur_all_dt_data(v_model_ovid) LOOP

      IF (cur_all_dt_data%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':DTCollection>');
      END IF;
      
      DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':DTDetails>');

      -- Description / Notes
      IF (reportTemplate.reportType = 0 OR reportTemplate.useDescriptionInfo = 1) THEN
      
         DBMS_LOB.APPEND (res, '<' || all_dt_prefix || ':DescriptionNotes>');
         
         SELECT XMLElement(EVALNAME(all_dt_prefix || ':Description'), XMLCDATA(
                  NVL((SELECT t.text comments_in_rdbms
                      FROM   dmrs_large_text t
                      WHERE  t.ovid = rec_all_dt_data.dt_ovid
                      AND    t.type='Comments'),
                      (SELECT t.text comments_in_rdbms
                      FROM   dmrs_large_text t
                      WHERE  t.ovid = rec_all_dt_data.dt_ovid
                      AND    t.type='CommentsInRDBMS')))).getClobVal(), 
                XMLElement(EVALNAME(all_dt_prefix || ':Notes'), XMLCDATA(
                      (SELECT t.text comments_in_rdbms
                      FROM   dmrs_large_text t
                      WHERE  t.ovid = rec_all_dt_data.dt_ovid
                      AND    t.type='Note'))).getClobVal()
         INTO   v_description, 
                v_notes
         FROM  dual;
         
        DBMS_LOB.APPEND (res, v_description);
        DBMS_LOB.APPEND (res, v_notes);
        DBMS_LOB.APPEND (res, '</' || all_dt_prefix || ':DescriptionNotes>');
         
      END IF;
      
      DBMS_LOB.APPEND (res, rec_all_dt_data.dt_name);
      DBMS_LOB.APPEND (res, rec_all_dt_data.xml_ovid);
      DBMS_LOB.APPEND (res, rec_all_dt_data.lt_type);
      DBMS_LOB.APPEND (res, rec_all_dt_data.dt_size);
      DBMS_LOB.APPEND (res, rec_all_dt_data.dt_precision);
      DBMS_LOB.APPEND (res, rec_all_dt_data.dt_scale);

      -- Used in tables
      IF (reportTemplate.reportType = 0 OR reportTemplate.useDTUsedInTables = 1) THEN
        FOR rec_used_in_tables IN cur_used_in_tables(rec_all_dt_data.dt_ovid) LOOP
           IF (cur_used_in_tables%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':TablesCollection>');
           END IF;
              DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':TableDetails>');
      
              v_model_name := rec_used_in_tables.model_name;
              IF (v_model_name != p_model_name) THEN
                DBMS_LOB.APPEND (res,v_model_name);
                p_model_name := v_model_name;
              ELSE
                DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':ModelName></' || all_dt_prefix || ':ModelName>');
              END IF;
      
              v_table_name := rec_used_in_tables.table_name;
              IF (v_table_name != p_table_name) THEN
              DBMS_LOB.APPEND (res,v_table_name);
                p_table_name := v_table_name;
              ELSE
                DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':TableName></' || all_dt_prefix || ':TableName>');
              END IF;
      
              DBMS_LOB.APPEND (res,rec_used_in_tables.column_name);
              DBMS_LOB.APPEND (res,'</' || all_dt_prefix || ':TableDetails>');
           IF (cur_used_in_tables%ROWCOUNT = rec_used_in_tables.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</' || all_dt_prefix || ':TablesCollection>');
           END IF;
        END LOOP;
      END IF;
      
      -- Used in entities
      IF (reportTemplate.reportType = 0 OR reportTemplate.useDTUsedInEntities = 1) THEN
        FOR rec_used_in_entities IN cur_used_in_entities(rec_all_dt_data.dt_ovid) LOOP
           IF (cur_used_in_entities%ROWCOUNT = 1) THEN
              DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':EntitiesCollection>');
           END IF;
              DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':EntityDetails>');
             
              v_entity_name := rec_used_in_entities.entity_name;
              IF (v_entity_name != p_entity_name) THEN
                DBMS_LOB.APPEND (res,v_entity_name);
                p_entity_name := v_entity_name;
              ELSE
                DBMS_LOB.APPEND (res,'<' || all_dt_prefix || ':EntityName></' || all_dt_prefix || ':EntityName>');
              END IF;
      
              DBMS_LOB.APPEND (res,rec_used_in_entities.attribute_name);
              DBMS_LOB.APPEND (res,'</' || all_dt_prefix || ':EntityDetails>');
           IF (cur_used_in_entities%ROWCOUNT = rec_used_in_entities.total_row_count) THEN
              DBMS_LOB.APPEND (res, '</' || all_dt_prefix || ':EntitiesCollection>');
           END IF;
        END LOOP;
      END IF;

      DBMS_LOB.APPEND (res,'</' || all_dt_prefix || ':DTDetails>');

      IF (cur_all_dt_data%ROWCOUNT = rec_all_dt_data.total_row_count) THEN
          DBMS_LOB.APPEND (res,'</' || all_dt_prefix || ':DTCollection>');
      END IF;

  END LOOP;
  
  DBMS_LOB.APPEND (res,'</' || all_dt_prefix || ':DistinctTypes>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for all distinct types ended');  

RETURN res;
  
 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllDT_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllDT_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_AllDT_Data;

FUNCTION Gather_CR_Data(v_design_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE) RETURN CLOB IS 

res               CLOB;
v_notes           CLOB;
v_description     CLOB;
v_reason          CLOB;
v_imp_note        CLOB;
v_rel_total_count INTEGER;
token_value       CLOB;
p_model_name      VARCHAR2(100) :='_';
v_model_name      VARCHAR2(100) :='';

CURSOR cur_general_data(v_d_ovid IN VARCHAR2) IS
 -- General data
 SELECT XMLElement(EVALNAME(all_cr_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(all_cr_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(all_cr_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                     version_comment
 FROM   dmrs_designs d
 WHERE  d.design_ovid = v_d_ovid;
rec_general_data cur_general_data%ROWTYPE;

CURSOR cur_all_cr(v_d_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_cr_prefix || ':CRName'),cr.change_request_name).getClobVal()                  cr_name,
		XMLElement(EVALNAME(all_cr_prefix || ':EncodedName'),cr.change_request_ovid).getClobVal()             xml_ovid,
 		XMLElement(EVALNAME(all_cr_prefix || ':CRReason'), XMLCDATA(cr.reason)).getClobVal()                  cr_reason,
        XMLElement(EVALNAME(all_cr_prefix || ':CRStatus'),cr.request_status).getClobVal()                     cr_status,
        XMLElement(EVALNAME(all_cr_prefix || ':CRCompleted'),cr.is_completed).getClobVal()                    cr_completed,
        XMLElement(EVALNAME(all_cr_prefix || ':CRRequestDate'),cr.request_date_string).getClobVal()           cr_req_date,
        XMLElement(EVALNAME(all_cr_prefix || ':CRCompletionDate'),cr.completion_date_string).getClobVal()     cr_compl_date,
        cr.change_request_ovid                                                                                cr_ovid,
        COUNT(cr.change_request_name) over()                                                                  total_row_count
 FROM   dmrs_change_requests cr
 WHERE  design_ovid = v_d_ovid;
rec_all_cr cur_all_cr%ROWTYPE;

--Impacted Objects
CURSOR cur_i_objects(v_cr_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_cr_prefix || ':ModelName'),cre.element_model_name).getClobVal()    model_name,
        XMLElement(EVALNAME(all_cr_prefix || ':TypeName'),cre.element_type).getClobVal()           type_name,
        XMLElement(EVALNAME(all_cr_prefix || ':ObjectName'),cre.element_name).getClobVal()         obj_name,
        COUNT(cre.element_name) over()                                         total_row_count
 FROM   dmrs_change_request_elements cre
 WHERE  cre.change_request_ovid = v_cr_ovid
 ORDER BY cre.element_model_name,
          cre.element_type,
          cre.element_name;
rec_i_objects cur_i_objects%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for change requests started ...');
  
  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || all_cr_prefix || ':ChangeRequests xmlns:' || all_cr_prefix || '="http://oracle.com/datamodeler/reports/changerequests">');  
  
  FOR rec_general_data IN cur_general_data(v_design_ovid) LOOP

    DBMS_LOB.APPEND (res, rec_general_data.design_name);
    DBMS_LOB.APPEND (res, rec_general_data.version_date);
    DBMS_LOB.APPEND (res, rec_general_data.version_comment);
     
  END LOOP;

  FOR rec_all_cr IN cur_all_cr(v_design_ovid) LOOP

      IF (cur_all_cr%ROWCOUNT = 1) THEN
           DBMS_LOB.APPEND (res,'<' || all_cr_prefix || ':CRCollection>');
      END IF;
      
      DBMS_LOB.APPEND (res,'<' || all_cr_prefix || ':CRDetails>');
      DBMS_LOB.APPEND (res,rec_all_cr.cr_name);
      DBMS_LOB.APPEND (res,rec_all_cr.xml_ovid);

      -- Comments / Notes / Implementation notes
      SELECT 
            XMLElement(EVALNAME(all_cr_prefix || ':CRComment'), XMLCDATA(
              NVL(
               (SELECT t.text comments_in_rdbms
                FROM   dmrs_large_text t
                WHERE  t.ovid = rec_all_cr.cr_ovid
                AND    t.type='Comments'),
               (SELECT t.text comments_in_rdbms
                FROM   dmrs_large_text t
                WHERE  t.ovid = rec_all_cr.cr_ovid
                AND    t.type='CommentsInRDBMS')))).getClobVal(),
            XMLElement(EVALNAME(all_cr_prefix || ':CRNotes'), XMLCDATA(
               (SELECT t.text comments_in_rdbms
                FROM   dmrs_large_text t
                WHERE  t.ovid = rec_all_cr.cr_ovid
                AND    t.type='Note'))).getClobVal(),

            XMLElement(EVALNAME(all_cr_prefix || ':CRImplementationNote'), XMLCDATA(
                (SELECT t.text comments_in_rdbms
                FROM   dmrs_large_text t
                WHERE  t.ovid = rec_all_cr.cr_ovid
                AND    t.type='Implementation Note'))).getClobVal()
      INTO  v_description, 
            v_notes,
            v_imp_note
      FROM  dual;

      DBMS_LOB.APPEND (res, v_description);
      DBMS_LOB.APPEND (res, v_notes);
      DBMS_LOB.APPEND (res,rec_all_cr.cr_reason);
      DBMS_LOB.APPEND (res,rec_all_cr.cr_status);
      DBMS_LOB.APPEND (res,rec_all_cr.cr_completed);
      DBMS_LOB.APPEND (res,rec_all_cr.cr_req_date);
      DBMS_LOB.APPEND (res,rec_all_cr.cr_compl_date);
      DBMS_LOB.APPEND (res, v_imp_note);

      -- Impacted Objects
      IF (reportTemplate.reportType = 0 OR reportTemplate.useCRImpactedObjects = 1) THEN
        FOR rec_i_objects IN cur_i_objects(rec_all_cr.cr_ovid) LOOP
                                                 
             IF (cur_i_objects%ROWCOUNT = 1) THEN
                DBMS_LOB.APPEND (res,'<' || all_cr_prefix || ':CRUsedInObjectCollection>');
             END IF;
                DBMS_LOB.APPEND (res,'<' || all_cr_prefix || ':CRUsedInObjectDetails>');
               
                v_model_name := rec_i_objects.model_name;
                IF (v_model_name != p_model_name) THEN
                  DBMS_LOB.APPEND (res,v_model_name);
                  p_model_name := v_model_name;
                ELSE
                  DBMS_LOB.APPEND (res,'<' || all_cr_prefix || ':ModelName></' || all_cr_prefix || ':ModelName>');
                END IF;
        
                DBMS_LOB.APPEND (res,rec_i_objects.type_name);
                DBMS_LOB.APPEND (res,rec_i_objects.obj_name);
                DBMS_LOB.APPEND (res,'</' || all_cr_prefix || ':CRUsedInObjectDetails>');
             IF (cur_i_objects%ROWCOUNT = rec_i_objects.total_row_count) THEN
                DBMS_LOB.APPEND (res, '</' || all_cr_prefix || ':CRUsedInObjectCollection>');
             END IF;
                                                                           
        END LOOP;
      END IF;
      DBMS_LOB.APPEND (res,'</' || all_cr_prefix || ':CRDetails>');

      IF (cur_all_cr%ROWCOUNT = rec_all_cr.total_row_count) THEN
          DBMS_LOB.APPEND (res,'</' || all_cr_prefix || ':CRCollection>');
      END IF;

  END LOOP;
  
  DBMS_LOB.APPEND (res,'</' || all_cr_prefix || ':ChangeRequests>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for change requests ended');  

RETURN res;
  
 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_CR_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_CR_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_CR_Data;

FUNCTION Gather_MR_Data(v_design_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE) RETURN CLOB IS 

res               CLOB;
v_notes           CLOB;
v_comment         CLOB;
v_rel_total_count INTEGER;
token_value       CLOB;

CURSOR cur_general_data(v_d_ovid IN VARCHAR2) IS
 -- General data
 SELECT XMLElement(EVALNAME(all_mr_prefix || ':DesignName'),d.design_name).getClobVal()                                        design_name,
        XMLElement(EVALNAME(all_mr_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal()   version_date,
        XMLElement(EVALNAME(all_mr_prefix || ':VersionComment'), XMLCDATA(d.version_comments)).getClobVal()                    version_comment
 FROM   dmrs_designs d
 WHERE  d.design_ovid = v_d_ovid;
rec_general_data cur_general_data%ROWTYPE;

CURSOR cur_all_measurements(v_d_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_mr_prefix || ':MName'),mr.measurement_name).getClobVal()             m_name,
        XMLElement(EVALNAME(all_mr_prefix || ':MValue'),mr.measurement_value).getClobVal()           m_value,
        XMLElement(EVALNAME(all_mr_prefix || ':MType'),mr.measurement_type).getClobVal()             m_type,
        XMLElement(EVALNAME(all_mr_prefix || ':MUnit'),mr.measurement_unit).getClobVal()             m_unit,
        XMLElement(EVALNAME(all_mr_prefix || ':MCreationDate'),mr.measurement_cr_date).getClobVal()  m_cr_date,
        XMLElement(EVALNAME(all_mr_prefix || ':MEffectiveDate'),mr.measurement_ef_date).getClobVal() m_ef_date,
        XMLElement(EVALNAME(all_mr_prefix || ':ModelName'),mr.object_model).getClobVal()             obj_model_name,
        XMLElement(EVALNAME(all_mr_prefix || ':ObjectName'),mr.object_name).getClobVal()             object_name,
        XMLElement(EVALNAME(all_mr_prefix || ':TypeName'),mr.object_type).getClobVal()               object_type,
        mr.measurement_ovid                                                                          m_ovid,
        COUNT(mr.measurement_name) over()                                                            total_row_count
 FROM dmrs_measurements mr
 WHERE design_ovid = v_d_ovid;
rec_all_measurements cur_all_measurements%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for measurements started ...');
  
  DBMS_LOB.CREATETEMPORARY(res, TRUE);

  DBMS_LOB.APPEND (res,'<' || all_mr_prefix || ':Measurements xmlns:' || all_mr_prefix || '="http://oracle.com/datamodeler/reports/measurements">');
  
  FOR rec_general_data IN cur_general_data(v_design_ovid) LOOP

    DBMS_LOB.APPEND (res, rec_general_data.design_name);
    DBMS_LOB.APPEND (res, rec_general_data.version_date);
    DBMS_LOB.APPEND (res, rec_general_data.version_comment);

  END LOOP;

  IF (reportTemplate.reportType = 0 OR reportTemplate.useMRImpactedObjects = 1) THEN
    FOR rec_all_measurements IN cur_all_measurements(v_design_ovid) LOOP

      IF (cur_all_measurements%ROWCOUNT = 1) THEN
        DBMS_LOB.APPEND (res,'<' || all_mr_prefix || ':MCollection>');
      END IF;
        DBMS_LOB.APPEND (res,'<' || all_mr_prefix || ':MDetails>');
        DBMS_LOB.APPEND (res,rec_all_measurements.m_name);
        
        -- Comment & Notes
        SELECT  XMLElement(EVALNAME(all_mr_prefix || ':MComment'),XMLCDATA(
                  NVL(( SELECT t.text comments_in_rdbms
                        FROM   dmrs_large_text t
                        WHERE  t.ovid = rec_all_measurements.m_ovid
                        AND    t.type='Comments'),
                        (SELECT t.text comments_in_rdbms
                        FROM   dmrs_large_text t
                        WHERE  t.ovid = rec_all_measurements.m_ovid
                        AND    t.type='CommentsInRDBMS')))).getClobVal(),
                XMLElement(EVALNAME(all_mr_prefix || ':MNotes'),XMLCDATA(
                       (SELECT t.text comments_in_rdbms
                        FROM   dmrs_large_text t
                        WHERE  t.ovid = rec_all_measurements.m_ovid
                        AND    t.type='Note'))).getClobVal()
        INTO  v_comment, 
              v_notes
        FROM dual;
        
        DBMS_LOB.APPEND (res,v_comment);
        DBMS_LOB.APPEND (res,v_notes);
        DBMS_LOB.APPEND (res,rec_all_measurements.m_value);
        DBMS_LOB.APPEND (res,rec_all_measurements.m_unit);
        DBMS_LOB.APPEND (res,rec_all_measurements.m_type);
        DBMS_LOB.APPEND (res,rec_all_measurements.m_cr_date);
        DBMS_LOB.APPEND (res,rec_all_measurements.m_ef_date);
        DBMS_LOB.APPEND (res,'<' || all_mr_prefix || ':MUsedInObjectCollection>');
        DBMS_LOB.APPEND (res,'<' || all_mr_prefix || ':MUsedInObjectDetails>');
        DBMS_LOB.APPEND (res,rec_all_measurements.obj_model_name);
        DBMS_LOB.APPEND (res,rec_all_measurements.object_type);
        DBMS_LOB.APPEND (res,rec_all_measurements.object_name);
        DBMS_LOB.APPEND (res,'</' || all_mr_prefix || ':MUsedInObjectDetails>');
        DBMS_LOB.APPEND (res,'</' || all_mr_prefix || ':MUsedInObjectCollection>');
        DBMS_LOB.APPEND (res,'</' || all_mr_prefix || ':MDetails>');

      IF (cur_all_measurements%ROWCOUNT = rec_all_measurements.total_row_count) THEN
          DBMS_LOB.APPEND (res,'</' || all_mr_prefix || ':MCollection>');
      END IF;

    END LOOP;
  END IF;
  
  DBMS_LOB.APPEND (res,'</' || all_mr_prefix || ':Measurements>');

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering data for measurements ended');  

RETURN res;
  
 EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_MR_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_MR_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_MR_Data;

FUNCTION Gather_Constraint_Details_HTML(col_attr_ovid VARCHAR2) RETURN CLOB IS

clob_ CLOB;
clob_constraints CLOB;
clob_ranges CLOB;
clob_vl CLOB;

CURSOR cur_c_constraints(v_ovid IN VARCHAR2) IS
 SELECT constraint_name,
        text,
        database_type
 FROM   dmrs_check_constraints
 WHERE  dataelement_ovid = v_ovid
 ORDER BY sequence;
 rec_c_constraints cur_c_constraints % rowtype;

 CURSOR cur_ranges(v_ovid IN VARCHAR2) IS
 SELECT begin_value,
        end_value,
        short_description
 FROM   dmrs_value_ranges
 WHERE  dataelement_ovid = v_ovid
 ORDER BY sequence;
rec_ranges cur_ranges % rowtype;

CURSOR cur_valuelist_columns(v_ovid IN VARCHAR2) IS
 SELECT av.VALUE,
        av.short_description
 FROM   dmrs_avt av,
        dmrs_columns c
 WHERE  c.ovid = av.dataelement_ovid
 AND    av.dataelement_ovid = v_ovid;
rec_valuelist_columns cur_valuelist_columns % rowtype;

BEGIN

    FOR rec_c_constraints IN cur_c_constraints(col_attr_ovid) LOOP
      clob_constraints := clob_constraints 
                                           || '<tr><td>'
                                           || REPLACE(rec_c_constraints.text, Chr(10), '<br/>')
                                           || '</td><td align="center">' 
                                           || rec_c_constraints.database_type 
                                           || '</td></tr>';
    END LOOP;

    FOR rec_ranges IN cur_ranges(col_attr_ovid) LOOP
      clob_ranges := clob_ranges || '<tr><td align="right">' 
                                 || rec_ranges.begin_value 
                                 || '</td><td align="right">' 
                                 || rec_ranges.end_value 
                                 || '</td><td>' 
                                 || REPLACE(rec_ranges.short_description, Chr(10), '<br/>')
                                 || '</td></tr>';
    END LOOP;

    FOR rec_valuelist_columns IN cur_valuelist_columns(col_attr_ovid) LOOP
      clob_vl := clob_vl || '<tr><td align="right">' 
                         || rec_valuelist_columns.VALUE 
                         || '</td><td>' 
                         || REPLACE(rec_valuelist_columns.short_description, Chr(10), '<br/>')
                         || '</td></tr>';

    END LOOP;

    IF (clob_constraints IS NULL AND clob_ranges IS NULL AND clob_vl IS NULL) THEN
      RETURN '';
    ELSE
        
      clob_ := '<table class="inlineTable">';

      IF clob_constraints IS NOT NULL THEN
        clob_ := clob_ || '<tr><th>';
        clob_ := clob_ || '<table class="inlineTable">';
        clob_ := clob_ || '<tr><th colspan="3">Check Constraint</th></tr>';
        clob_ := clob_ || '<tr><th>Text</th><th>DB Type</th></tr>';
        clob_ := clob_ || clob_constraints;
        clob_ := clob_ || '</table>';
        clob_ := clob_ || '</th></tr>';
      END IF;

      IF clob_ranges IS NOT NULL THEN
        clob_ := clob_ || '<tr><th>';
        clob_ := clob_ || '<table class="inlineTable">';
        clob_ := clob_ || '<tr><th colspan="3">Ranges</th></tr>';
        clob_ := clob_ || '<tr><th>Begin Value</th><th>End Value</th><th>Description</th></tr>';
        clob_ := clob_ || clob_ranges;
        clob_ := clob_ || '</table>';
        clob_ := clob_ || '</th></tr>';
      END IF;

      IF clob_vl IS NOT NULL THEN
        clob_ := clob_ || '<tr><th>';
        clob_ := clob_ || '<table class="inlineTable">';
        clob_ := clob_ || '<tr><th colspan="2">Value List</th></tr>';
        clob_ := clob_ || '<tr><th>Value</th><th>Description</th></tr>';
        clob_ := clob_ || clob_vl;
        clob_ := clob_ || '</table>';
        clob_ := clob_ || '</th></tr>';
      END IF;

      clob_ := clob_ || '</table>';

      RETURN clob_;

    END IF;

EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Constraint_Details_HTML Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Constraint_Details_HTML Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN clob_;
  
END Gather_Constraint_Details_HTML;

FUNCTION Gather_Domain_Constraints_HTML (domain_ovid VARCHAR2) RETURN CLOB IS

clob_            CLOB;
clob_constraints CLOB;
clob_ranges      CLOB;
clob_vl          CLOB;

CURSOR cur_c_constraints(v_c_ovid IN VARCHAR2) IS
 SELECT NVL(text,' ')           text,
        NVL(database_type,' ')  database_type
 FROM   dmrs_domain_check_constraints
 WHERE  domain_ovid = v_c_ovid
 ORDER BY sequence;
rec_c_constraints cur_c_constraints%rowtype;

CURSOR cur_ranges(v_c_ovid IN VARCHAR2) IS
 SELECT NVL(begin_value,' ')           begin_value,
        NVL(end_value, ' ')            end_value,
        NVL(short_description,' ')     short_description
 FROM   dmrs_domain_value_ranges
 WHERE  domain_ovid = v_c_ovid
 ORDER BY sequence;
rec_ranges cur_ranges%rowtype;

CURSOR cur_valuelist_columns(v_c_ovid IN VARCHAR2) IS
 SELECT NVL(av.value,' ')             value,
        NVL(av.short_description,' ') short_description
 FROM   dmrs_domain_avt av
 WHERE  av.domain_ovid = v_c_ovid;
rec_valuelist_columns cur_valuelist_columns%rowtype;

BEGIN
    
    DBMS_LOB.CREATETEMPORARY(clob_constraints, TRUE);
    DBMS_LOB.CREATETEMPORARY(clob_ranges, TRUE);
    DBMS_LOB.CREATETEMPORARY(clob_vl, TRUE);
    DBMS_LOB.CREATETEMPORARY(clob_, TRUE);
    
    FOR rec_c_constraints IN cur_c_constraints(domain_ovid) LOOP
        DBMS_LOB.APPEND (clob_constraints, '<tr><td>');
        DBMS_LOB.APPEND (clob_constraints, REPLACE(rec_c_constraints.text, Chr(10), '<br/>'));
        DBMS_LOB.APPEND (clob_constraints, '</td><td align="center">' );
        DBMS_LOB.APPEND (clob_constraints, rec_c_constraints.database_type );
        DBMS_LOB.APPEND (clob_constraints, '</td></tr>');
    END LOOP;

    FOR rec_ranges IN cur_ranges(domain_ovid) LOOP
        DBMS_LOB.APPEND (clob_ranges,'<tr><td align="right">');
        DBMS_LOB.APPEND (clob_ranges, rec_ranges.begin_value);
        DBMS_LOB.APPEND (clob_ranges,'</td><td align="right">');    
        DBMS_LOB.APPEND (clob_ranges, rec_ranges.end_value);
        DBMS_LOB.APPEND (clob_ranges,'</td><td>');
        DBMS_LOB.APPEND (clob_ranges,REPLACE(rec_ranges.short_description, Chr(10), '<br/>'));
        DBMS_LOB.APPEND (clob_ranges,'</td></tr>');
    END LOOP;

    FOR rec_valuelist_columns IN cur_valuelist_columns(domain_ovid) LOOP
        DBMS_LOB.APPEND (clob_vl,'<tr><td align="right">');
        DBMS_LOB.APPEND (clob_vl,rec_valuelist_columns.VALUE);
        DBMS_LOB.APPEND (clob_vl,'</td><td>'); 
        DBMS_LOB.APPEND (clob_vl,REPLACE(rec_valuelist_columns.short_description, Chr(10), '<br/>'));
        DBMS_LOB.APPEND (clob_vl,'</td></tr>');
    END LOOP;

    IF (clob_constraints IS NULL AND clob_ranges IS NULL AND clob_vl IS NULL) THEN
      RETURN '';
    ELSE

      DBMS_LOB.APPEND (clob_, '<table class="inlineTable">');

      IF clob_constraints IS NOT NULL THEN
         DBMS_LOB.APPEND (clob_,'<tr><th>');
         DBMS_LOB.APPEND (clob_,'<table class="inlineTable">');
         DBMS_LOB.APPEND (clob_,'<tr><th colspan="3">Check Constraint</th></tr>');
         DBMS_LOB.APPEND (clob_,'<tr><th>Text</th><th>DB Type</th></tr>');
         DBMS_LOB.APPEND (clob_,clob_constraints);
         DBMS_LOB.APPEND (clob_,'</table>');
         DBMS_LOB.APPEND (clob_,'</th></tr>');
      END IF;

      IF clob_ranges IS NOT NULL THEN
         DBMS_LOB.APPEND (clob_,'<tr><th>');
         DBMS_LOB.APPEND (clob_,'<table class="inlineTable">');
         DBMS_LOB.APPEND (clob_,'<tr><th colspan="3">Ranges</th></tr>');
         DBMS_LOB.APPEND (clob_,'<tr><th>Begin Value</th><th>End Value</th><th>Description</th></tr>');
         DBMS_LOB.APPEND (clob_,clob_ranges);
         DBMS_LOB.APPEND (clob_,'</table>');
         DBMS_LOB.APPEND (clob_,'</th></tr>');
      END IF;

      IF clob_vl IS NOT NULL THEN
         DBMS_LOB.APPEND (clob_,'<tr><th>');
         DBMS_LOB.APPEND (clob_,'<table class="inlineTable">');
         DBMS_LOB.APPEND (clob_,'<tr><th colspan="2">Value List</th></tr>');
         DBMS_LOB.APPEND (clob_,'<tr><th>Value</th><th>Description</th></tr>');
         DBMS_LOB.APPEND (clob_,clob_vl);
         DBMS_LOB.APPEND (clob_,'</table>');
         DBMS_LOB.APPEND (clob_,'</th></tr>');
      END IF;

      DBMS_LOB.APPEND (clob_,'</table>');
    END IF;

 RETURN clob_;
 
EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Domain_Constraints_HTML Exception : : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Domain_Constraints_HTML Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN clob_;

END Gather_Domain_Constraints_HTML;

FUNCTION Gather_Domain_Constraints_XML(domain_ovid VARCHAR2) RETURN CLOB IS

res          CLOB;
v_cc_created BOOLEAN := FALSE;

CURSOR cur_c_constraints(v_c_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_domains_prefix || ':Text'),d.text).getClobVal()                  text,
        XMLElement(EVALNAME(all_domains_prefix || ':DatabaseType'),d.database_type).getClobVal() database_type,
        COUNT(text) over()                                                                       total_row_count
 FROM   dmrs_domain_check_constraints d
 WHERE  d.domain_ovid = v_c_ovid
 ORDER BY d.database_type;
rec_c_constraints cur_c_constraints%rowtype;

CURSOR cur_ranges(v_c_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_domains_prefix || ':RangeBeginValue'),d.begin_value).getClobVal()             begin_value,
        XMLElement(EVALNAME(all_domains_prefix || ':RangeEndValue'),d.end_value).getClobVal()                 end_value,
        XMLElement(EVALNAME(all_domains_prefix || ':RangeShortDescription'),d.short_description).getClobVal() short_description,
        COUNT(begin_value) over() total_row_count
 FROM   dmrs_domain_value_ranges d
 WHERE  d.domain_ovid = v_c_ovid
 ORDER BY d.begin_value, 
          d.end_value,
          d.short_description;
rec_ranges cur_ranges%rowtype;

CURSOR cur_valuelist_columns(v_c_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_domains_prefix || ':VLValue'),av.value).getClobVal()                         v_value, 
        XMLElement(EVALNAME(all_domains_prefix || ':VLShortDescription'),av.short_description).getClobVal()  short_description,
        COUNT(value) over() total_row_count
 FROM   dmrs_domain_avt av
 WHERE  av.domain_ovid = v_c_ovid
 ORDER BY av.value, 
          av.short_description;
rec_valuelist_columns cur_valuelist_columns%rowtype;

BEGIN

    DBMS_LOB.CREATETEMPORARY(res, TRUE);

    FOR rec_ranges IN cur_ranges(domain_ovid) LOOP
       IF (cur_ranges%ROWCOUNT = 1) THEN
          IF NOT v_cc_created THEN 
            DBMS_LOB.APPEND (res, '<' || all_domains_prefix || ':ConstraintsCollection>');
            DBMS_LOB.APPEND (res, '<' || all_domains_prefix || ':ConstraintDetails>');
            v_cc_created := TRUE;
          END IF;
          DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':RangesCollection>');
       END IF;
          DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':RangeDetails>');
          DBMS_LOB.APPEND (res,rec_ranges.begin_value);
          DBMS_LOB.APPEND (res,rec_ranges.end_value);
          DBMS_LOB.APPEND (res,rec_ranges.short_description);
          DBMS_LOB.APPEND (res,'</' || all_domains_prefix || ':RangeDetails>');
       IF (cur_ranges%ROWCOUNT = rec_ranges.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || all_domains_prefix || ':RangesCollection>');
       END IF;
    END LOOP;

    FOR rec_valuelist_columns IN cur_valuelist_columns(domain_ovid) LOOP
       IF (cur_valuelist_columns%ROWCOUNT = 1) THEN
          IF NOT v_cc_created THEN 
            DBMS_LOB.APPEND (res, '<' || all_domains_prefix || ':ConstraintsCollection>');
            DBMS_LOB.APPEND (res, '<' || all_domains_prefix || ':ConstraintDetails>');
            v_cc_created := TRUE;
          END IF;
          DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':ValueListsCollection>');
       END IF;
          DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':ValueListDetails>');
          DBMS_LOB.APPEND (res,rec_valuelist_columns.v_value);
          DBMS_LOB.APPEND (res,rec_valuelist_columns.short_description);
          DBMS_LOB.APPEND (res,'</' || all_domains_prefix || ':ValueListDetails>');
       IF (cur_valuelist_columns%ROWCOUNT = rec_valuelist_columns.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || all_domains_prefix || ':ValueListsCollection>');
       END IF;
    END LOOP;
   
    FOR rec_c_constraints IN cur_c_constraints(domain_ovid) LOOP
       IF (cur_c_constraints%ROWCOUNT = 1) THEN
          IF NOT v_cc_created THEN 
            DBMS_LOB.APPEND (res, '<' || all_domains_prefix || ':ConstraintsCollection>');
            DBMS_LOB.APPEND (res, '<' || all_domains_prefix || ':ConstraintDetails>');
            v_cc_created := TRUE;
          END IF;
          DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':CheckConstraintsCollection>');
       END IF;
       
          DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':CheckConstraintDetails>');
          DBMS_LOB.APPEND (res,rec_c_constraints.text);
          DBMS_LOB.APPEND (res,rec_c_constraints.database_type);
          DBMS_LOB.APPEND (res,'</' || all_domains_prefix || ':CheckConstraintDetails>');
       IF (cur_c_constraints%ROWCOUNT = rec_c_constraints.total_row_count) THEN
          DBMS_LOB.APPEND (res, '</' || all_domains_prefix || ':CheckConstraintsCollection>');
       END IF;
    END LOOP;

    IF v_cc_created THEN 
       DBMS_LOB.APPEND (res, '</' || all_domains_prefix || ':ConstraintDetails>');
       DBMS_LOB.APPEND (res, '</' || all_domains_prefix || ':ConstraintsCollection>');
    END IF;

  RETURN res;

EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Domain_Constraints_XML Exception : : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_Domain_Constraints_XML Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
  
END Gather_Domain_Constraints_XML;

FUNCTION Gather_AllDomains_Data(v_obj_ovid IN VARCHAR2, reportTemplate IN REPORT_TEMPLATE) RETURN CLOB IS 

res          CLOB;
token_value  CLOB;
v_comment    CLOB;

-- Common Data
CURSOR cur_common_data(v_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_domains_prefix || ':DesignName'),d.design_name).getClobVal()                                      design_name,
        XMLElement(EVALNAME(all_domains_prefix || ':VersionDate'),TO_CHAR(d.date_published,'dd.mm.yyyy hh24:mi:ss')).getClobVal() version_date,
        XMLElement(EVALNAME(all_domains_prefix || ':VersionComment'),XMLCDATA(d.version_comments)).getClobVal()                   version_comment
 FROM   dmrs_designs d
 WHERE  d.design_ovid = v_ovid;
rec_common_data cur_common_data%ROWTYPE;

CURSOR cur_all_domains(v_o_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_domains_prefix || ':DomainName'), d.domain_name).getClobVal()                        domain_name, 
		XMLElement(EVALNAME(all_domains_prefix || ':EncodedName'), d.ovid).getClobVal()                        		 xml_ovid, 
 		XMLElement(EVALNAME(all_domains_prefix || ':Synonyms'), d.synonyms).getClobVal()                             synonyms,
        XMLElement(EVALNAME(all_domains_prefix || ':DataType'), d.native_type  ||' '||
           DECODE (NVL(d.t_size,''),'',
           DECODE(NVL(d.t_scale,0),0,
                DECODE(NVL(d.t_precision,0),0,null,'('|| DECODE(NVL(d.t_precision,0),0,null,d.t_precision) ||')'),
                        '('|| DECODE(NVL(d.t_precision,0),0,null,d.t_precision) || ',' || DECODE(NVL(d.t_scale,0),0,null,d.t_scale)||')'),
       '('||TRIM(DECODE(d.t_size,'',null,d.t_size||' '||d.char_units ))||')')).getClobVal()  data_type,
        XMLElement(EVALNAME(all_domains_prefix || ':LogicalType'), d.lt_name).getClobVal()                           lt_name,
        XMLElement(EVALNAME(all_domains_prefix || ':UnitOfMeasure'), d.unit_of_measure).getClobVal()                 unit_of_measure,
        XMLElement(EVALNAME(all_domains_prefix || ':DefaultValue'), d.default_value).getClobVal()                    default_value,
        Gather_Domain_Constraints_XML(d.ovid)                                               constraint_details,
        d.ovid                                                                              domain_ovid,
        COUNT(d.domain_name) over()                                                         total_row_count
 FROM   dmrs_domains d
 WHERE  d.design_ovid = v_o_ovid
 ORDER BY d. domain_name;
rec_all_domains cur_all_domains%ROWTYPE;

CURSOR cur_used_in_tables(v_d_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_domains_prefix || ':ModelName'), c.model_name).getClobVal()     model_name,
        XMLElement(EVALNAME(all_domains_prefix || ':TableName'), c.table_name).getClobVal()     table_name,
        XMLElement(EVALNAME(all_domains_prefix || ':ColumnName'), c.column_name).getClobVal()   column_name,
        COUNT(c.model_name) over()                                     total_row_count
 FROM   dmrs_columns c,
        dmrs_domains d
 WHERE  d.ovid = v_d_ovid
 AND    c.domain_ovid = d.ovid
 ORDER BY c.model_name,
          c.table_name,
          c.column_name;
rec_used_in_tables cur_used_in_tables%ROWTYPE;

CURSOR cur_used_in_entities(v_d_ovid IN VARCHAR2) IS
 SELECT XMLElement(EVALNAME(all_domains_prefix || ':EntityName'), a.entity_name).getClobVal()        entity_name,
        XMLElement(EVALNAME(all_domains_prefix || ':AttributeName'), a.attribute_name).getClobVal()  attribute_name,
        COUNT(a.entity_name) over()                                         total_row_count
 FROM   dmrs_attributes a,
        dmrs_domains d
 WHERE  d.ovid = v_d_ovid
 AND    a.domain_ovid = d.ovid
 ORDER BY a.entity_name,
          a.attribute_name;
rec_used_in_entities cur_used_in_entities%ROWTYPE;

BEGIN

  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering all domains data started ...');

  DBMS_LOB.CREATETEMPORARY(res, TRUE);
 
  DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':Domains xmlns:' || all_domains_prefix || '="http://oracle.com/datamodeler/reports/domains">');

   -- Common Data
   FOR rec_common_data IN cur_common_data(v_obj_ovid) LOOP

      DBMS_LOB.APPEND (res, rec_common_data.design_name);
      DBMS_LOB.APPEND (res, rec_common_data.version_date);
      DBMS_LOB.APPEND (res, rec_common_data.version_comment);

   END LOOP;

   FOR rec_all_domains IN cur_all_domains(v_obj_ovid) LOOP
      IF (cur_all_domains%ROWCOUNT = 1) THEN
        DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':DomainsCollection>');
      END IF;

        DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':DomainDetails>');
         
        DBMS_LOB.APPEND (res,rec_all_domains.domain_name);
        DBMS_LOB.APPEND (res,rec_all_domains.xml_ovid);
        DBMS_LOB.APPEND (res,rec_all_domains.synonyms);
        DBMS_LOB.APPEND (res,rec_all_domains.data_type);
        DBMS_LOB.APPEND (res,rec_all_domains.lt_name);
        DBMS_LOB.APPEND (res,rec_all_domains.unit_of_measure);
        DBMS_LOB.APPEND (res,rec_all_domains.default_value);
        
        BEGIN
            SELECT  XMLElement(EVALNAME(all_domains_prefix || ':DomainComment'), XMLCDATA(lt.text)).getClobVal()
            INTO    v_comment
            FROM    dmrs_large_text lt
            WHERE   lt.ovid = rec_all_domains.domain_ovid;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                SELECT  XMLElement(EVALNAME(all_domains_prefix || ':DomainComment'), '').getClobVal()
                INTO    v_comment
                FROM    dual;
        END;
            
        DBMS_LOB.APPEND (res,v_comment);
      
        -- Constraints
        IF (reportTemplate.reportType = 0 OR reportTemplate.useDomainConstraints = 1) THEN
          DBMS_LOB.APPEND (res,rec_all_domains.constraint_details);
        END IF;

        -- Used in tables
        IF (reportTemplate.reportType = 0 OR reportTemplate.useDomainUsedInTables = 1) THEN
          FOR rec_used_in_tables IN cur_used_in_tables(rec_all_domains.domain_ovid) LOOP
             IF (cur_used_in_tables%ROWCOUNT = 1) THEN
                DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':TablesCollection>');
             END IF;
                DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':TableDetails>');
                DBMS_LOB.APPEND (res,rec_used_in_tables.model_name);
                DBMS_LOB.APPEND (res,rec_used_in_tables.table_name);
                DBMS_LOB.APPEND (res,rec_used_in_tables.column_name);
                DBMS_LOB.APPEND (res,'</' || all_domains_prefix || ':TableDetails>');
             IF (cur_used_in_tables%ROWCOUNT = rec_used_in_tables.total_row_count) THEN
                DBMS_LOB.APPEND (res, '</' || all_domains_prefix || ':TablesCollection>');
             END IF;
          END LOOP;
        END IF;

        -- Used in entities
        IF (reportTemplate.reportType = 0 OR reportTemplate.useDomainUsedInEntities = 1) THEN
          FOR rec_used_in_entities IN cur_used_in_entities(rec_all_domains.domain_ovid) LOOP
             IF (cur_used_in_entities%ROWCOUNT = 1) THEN
                DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':EntitiesCollection>');
             END IF;
                DBMS_LOB.APPEND (res,'<' || all_domains_prefix || ':EntityDetails>');
                DBMS_LOB.APPEND (res,rec_used_in_entities.entity_name);
                DBMS_LOB.APPEND (res,rec_used_in_entities.attribute_name);
                DBMS_LOB.APPEND (res,'</' || all_domains_prefix || ':EntityDetails>');
             IF (cur_used_in_entities%ROWCOUNT = rec_used_in_entities.total_row_count) THEN
                DBMS_LOB.APPEND (res, '</' || all_domains_prefix || ':EntitiesCollection>');
             END IF;
          END LOOP;
        END IF;

        DBMS_LOB.APPEND (res,'</' || all_domains_prefix || ':DomainDetails>');

      IF (cur_all_domains%ROWCOUNT = rec_all_domains.total_row_count) THEN
       DBMS_LOB.APPEND (res, '</' || all_domains_prefix || ':DomainsCollection>');
      END IF;
   END LOOP;

  DBMS_LOB.APPEND (res,'</' || all_domains_prefix || ':Domains>');
  
  UTL_FILE.PUT_LINE(log_file, TO_CHAR(SYSDATE,'yy.mm.dd hh:mi:ss') ||' '|| 'Gathering all domains data ended');

RETURN res;

EXCEPTION
 WHEN others THEN
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllDomains_Data Exception : ' || SQLERRM);  
  UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Gather_AllDomains_Data Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
  RETURN res;
 
END Gather_AllDomains_Data;  

FUNCTION Create_Log_File(v_reports_dir IN VARCHAR2) RETURN NUMBER IS 

insufficient_privileges EXCEPTION;
PRAGMA EXCEPTION_INIT(insufficient_privileges, -01031);

BEGIN

 IF v_reports_dir IS NOT NULL THEN
  EXECUTE IMMEDIATE 'CREATE OR REPLACE DIRECTORY OSDDM_REPORTS_DIR AS '''|| v_reports_dir ||'''';
  EXECUTE IMMEDIATE 'GRANT READ, WRITE ON DIRECTORY OSDDM_REPORTS_DIR TO PUBLIC';
 END IF;

 log_file := UTL_FILE.Fopen('OSDDM_REPORTS_DIR','osddm_reports.log','w', 32767);

RETURN 0;

 EXCEPTION
  WHEN UTL_FILE.Invalid_Path THEN
   RETURN 1;
  WHEN  UTL_FILE.Read_Error OR UTL_FILE.Write_Error OR UTL_FILE.Access_Denied THEN 
   RETURN 2;
  WHEN insufficient_privileges THEN
   RETURN 3;

END Create_Log_File;

PROCEDURE Generate_Report(v_rep_id           IN NUMBER,
                          v_obj_ovid         IN VARCHAR2,
                          v_mode             IN NUMBER,
                          v_reports_dir      IN VARCHAR2,
                          v_report_name      IN VARCHAR2, 
                          reportTemplate     IN REPORT_TEMPLATE,
                          objects            IN OBJECTS_LIST,
                          v_raw_xml         OUT BFILE, 
                          v_status          OUT NUMBER, 
                          osddm_reports_dir OUT VARCHAR2,
                          v_diagrams        OUT SYS_REFCURSOR,
                          v_diagrams_svg    OUT SYS_REFCURSOR) IS

raw_xml_fn        CONSTANT VARCHAR2(20) := 'report_data_rs.xml';
res               CLOB;
db_data_clob      CLOB;
v_blob						BLOB;
v_blob_xml				BLOB;
v_dest_offset			INTEGER := 1;
v_src_offset			INTEGER := 1;
warning						INTEGER;
rseq              INTEGER;
nseq              INTEGER;
v_lang_context		NUMBER 	:= DBMS_LOB.Default_Lang_Ctx;
v_p_doc_xml_lngth NUMBER;
j_status          NUMBER;
db_version        VARCHAR2(100);

BEGIN

    v_status := Create_Log_File(v_reports_dir);

    IF (v_status = 0)  THEN

      DBMS_LOB.CREATETEMPORARY(v_blob, TRUE);
      DBMS_LOB.CREATETEMPORARY(v_blob_xml, TRUE);
      DBMS_LOB.CREATETEMPORARY(db_data_clob, TRUE);
      
      DBMS_LOB.APPEND (db_data_clob,'<?xml version = ''1.0'' encoding = ''UTF-8''?>');

      IF v_rep_id = 1 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_SingleTable_Data(v_obj_ovid, reportTemplate, v_report_name));
      ELSIF v_rep_id = 2 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_AllTables_Data(v_obj_ovid, reportTemplate, objects, v_report_name));
      ELSIF v_rep_id = 3 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_SingleEntity_Data(v_obj_ovid, reportTemplate, v_report_name));
      ELSIF v_rep_id = 4 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_AllEntities_Data(v_obj_ovid, reportTemplate, objects, v_report_name));
      ELSIF v_rep_id = 5 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_AllDomains_Data(v_obj_ovid, reportTemplate));
      ELSIF v_rep_id = 6 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_Glossary_Data(v_obj_ovid));
      ELSIF v_rep_id = 7 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_SingleST_Data(v_obj_ovid, reportTemplate, v_report_name));
      ELSIF v_rep_id = 8 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_AllST_Data(v_obj_ovid, reportTemplate, objects, v_report_name));
      ELSIF v_rep_id = 9 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_SingleCT_Data(v_obj_ovid, reportTemplate));
      ELSIF v_rep_id = 10 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_AllCT_Data(v_obj_ovid, reportTemplate, objects));
      ELSIF v_rep_id = 11 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_SingleDT_Data(v_obj_ovid, reportTemplate));
      ELSIF v_rep_id = 12 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_AllDT_Data(v_obj_ovid, reportTemplate, objects));
      ELSIF v_rep_id = 13 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_CR_Data(v_obj_ovid, reportTemplate));
      ELSIF v_rep_id = 14 THEN
         DBMS_LOB.APPEND (db_data_clob, Gather_MR_Data(v_obj_ovid, reportTemplate));
      END IF;
      
      -- Get the PDF diagrams if they are exported
      IF v_rep_id IN(2, 4, 8) THEN
		 -- All Tables, All Entities, All Structured Types
         OPEN v_diagrams FOR
             SELECT pdf_name,
                    diagram_pdf
             FROM   dmrs_vdiagrams
             WHERE  model_ovid = v_obj_ovid
             AND    diagram_type = 'Subview'
             AND    diagram_pdf IS NOT NULL
             AND    is_display = 'N';

      ELSIF v_rep_id IN (1, 3, 7) THEN
		 --Single Table, Single Entity, Single tructured Type
         OPEN v_diagrams FOR
             SELECT d.pdf_name,
                    d.diagram_pdf
             FROM   dmrs_vdiagrams d,
                   (SELECT diagram_ovid 
                    FROM   dmrs_diagram_elements
                    WHERE  ovid = v_obj_ovid) b
             WHERE d.ovid = b.diagram_ovid
             AND   d.diagram_type = 'Subview'
             AND   d.diagram_pdf IS NOT NULL
             AND   d.is_display = 'N';

      END IF;

      -- Get the SVG diagrams if they are exported
      IF v_rep_id IN(2, 4, 8) THEN
		 -- All Tables, All Entities, All Structured Types
         OPEN v_diagrams_svg FOR
             SELECT svg_name,
                    diagram_svg
             FROM   dmrs_vdiagrams
             WHERE  model_ovid = v_obj_ovid
             AND    diagram_type = 'Subview'
             AND    diagram_svg IS NOT NULL
             AND    is_display = 'N';

      ELSIF v_rep_id IN (1, 3, 7) THEN
		 --Single Table, Single Entity, Single tructured Type
         OPEN v_diagrams FOR
             SELECT d.svg_name,
                    d.diagram_svg
             FROM   dmrs_vdiagrams d,
                   (SELECT diagram_ovid 
                    FROM   dmrs_diagram_elements
                    WHERE  ovid = v_obj_ovid) b
             WHERE d.ovid = b.diagram_ovid
             AND   d.diagram_type = 'Subview'
             AND   d.diagram_svg IS NOT NULL
             AND   d.is_display = 'N';

      END IF;
      
	  SELECT banner
      INTO   db_version
      FROM   v$version
      WHERE  banner LIKE 'Oracle%';

      -- raw xml
      DBMS_LOB.CONVERTTOBLOB(v_blob_xml,
                             db_data_clob,
                             DBMS_LOB.LOBMAXSIZE,
                             v_dest_offset,
                             v_src_offset,
                             873, -- AL32UTF8
                             v_lang_context,
                             warning);
      Generate_OS_File(v_blob_xml, raw_xml_fn);
      v_raw_xml := BFILENAME('OSDDM_REPORTS_DIR', raw_xml_fn);

      UTL_FILE.fclose(log_file);

   END IF;

COMMIT;

   SELECT directory_path
   INTO   osddm_reports_dir
   FROM   all_directories
   WHERE  directory_name = 'OSDDM_REPORTS_DIR';

EXCEPTION

   WHEN others THEN
     ROLLBACK;
     IF (v_mode = 1) THEN
        UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Generate_Report Exception : ' || SQLERRM);  
        UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Generate_Report Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
        UTL_FILE.fclose(log_file);
     ELSIF (v_mode = 2) THEN
        htp.p('<br/>');
        htp.p('<br/>');
        htp.p('Error occured during report generation:');
        htp.p('<br/>');
        htp.p('Pkg_Osdm_Utils.Generate_Report Exception:');
        htp.p(sqlerrm);
        htp.p('<br/>');
        htp.p('For more details see the report generation log file in OSDDM_REPORTS_DIR directory.');
        UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Generate_Report Exception : ' || SQLERRM);  
        UTL_FILE.PUT_LINE(log_file, 'Pkg_Osdm_Utils.Generate_Report Exception : ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
     END IF;
     
     IF UTL_FILE.is_open(log_file) THEN
        UTL_FILE.fclose(log_file);
     END IF;
     IF UTL_FILE.is_open(temp_file) THEN
        UTL_FILE.fclose(temp_file);
     END IF;

END Generate_Report;

END PKG_OSDM_UTILS;

/
--------------------------------------------------------
--  Constraints for Table ABILITY
--------------------------------------------------------

  ALTER TABLE "C##LMS"."ABILITY" MODIFY ("SUBJECT_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."ABILITY" MODIFY ("ABILITY_NUM" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."ABILITY" MODIFY ("ABILITY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ATTENDENCE
--------------------------------------------------------

  ALTER TABLE "C##LMS"."ATTENDENCE" MODIFY ("STUDENT_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."ATTENDENCE" MODIFY ("CLASS_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CHATROOM
--------------------------------------------------------

  ALTER TABLE "C##LMS"."CHATROOM" MODIFY ("CHAT_ROOM" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."CHATROOM" MODIFY ("PROF_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."CHATROOM" MODIFY ("STUDENT_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."CHATROOM" ADD CONSTRAINT "PK_CHATROOM" PRIMARY KEY ("CHAT_ROOM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CHAT_CONTENT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."CHAT_CONTENT" MODIFY ("CHAT_ROOM" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."CHAT_CONTENT" MODIFY ("CHAT_TALKER" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."CHAT_CONTENT" MODIFY ("CHAT_CONTENT" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."CHAT_CONTENT" MODIFY ("CHAT_TIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DESIGNED_CLASS
--------------------------------------------------------

  ALTER TABLE "C##LMS"."DESIGNED_CLASS" MODIFY ("CLASS_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."DESIGNED_CLASS" MODIFY ("CLASS_NAME" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."DESIGNED_CLASS" MODIFY ("CLASS_GOAL" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."DESIGNED_CLASS" MODIFY ("UPLOAD_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."DESIGNED_CLASS" MODIFY ("EXECUTE_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."DESIGNED_CLASS" MODIFY ("CONFIRMED" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."DESIGNED_CLASS" MODIFY ("PROF_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."DESIGNED_CLASS" MODIFY ("PROF_CONFIRM" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."DESIGNED_CLASS" ADD CONSTRAINT "PK_DESIGNED_CLASS" PRIMARY KEY ("CLASS_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DESIGNED_SUBJECT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."DESIGNED_SUBJECT" MODIFY ("CLASS_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."DESIGNED_SUBJECT" MODIFY ("SET_TIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FORM
--------------------------------------------------------

  ALTER TABLE "C##LMS"."FORM" MODIFY ("FORM_NO" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."FORM" MODIFY ("FORM_TITLE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."FORM" MODIFY ("FORM_AUTHOR" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."FORM" MODIFY ("FORM_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."FORM" MODIFY ("FORM_CONTENT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HOMEWORK
--------------------------------------------------------

  ALTER TABLE "C##LMS"."HOMEWORK" MODIFY ("HW_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."HOMEWORK" MODIFY ("HW_RST" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."HOMEWORK" MODIFY ("STUDENT_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."HOMEWORK" MODIFY ("PROF_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTICE
--------------------------------------------------------

  ALTER TABLE "C##LMS"."NOTICE" MODIFY ("NOTICE_NO" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."NOTICE" MODIFY ("NOTICE_TITLE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."NOTICE" MODIFY ("NOTICE_AUTHOR" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."NOTICE" MODIFY ("NOTICE_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."NOTICE" MODIFY ("NOTICE_CONTENT" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."NOTICE" MODIFY ("NOTICE_COUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table QBOARD
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QBOARD" MODIFY ("Q_BOARD_SEQ" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD" MODIFY ("Q_BOARD_WRITER" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD" MODIFY ("Q_BOARD_TITLE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD" MODIFY ("Q_BOARD_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD" MODIFY ("Q_BOARD_CONTENT" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD" MODIFY ("Q_BOARD_SECRET" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD" MODIFY ("GRADE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD" ADD CONSTRAINT "PK_QBOARD" PRIMARY KEY ("Q_BOARD_SEQ")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table QBOARD_ANS
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QBOARD_ANS" MODIFY ("Q_BOARD_SEQ" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD_ANS" MODIFY ("QA_BOARD_RESPONSE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD_ANS" MODIFY ("QA_BOARD_CONTENT" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD_ANS" MODIFY ("QA_BOARD_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD_ANS" MODIFY ("GRADE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QBOARD_ANS" ADD CONSTRAINT "PK_QBOARD_ANS" PRIMARY KEY ("Q_BOARD_SEQ")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table QNA
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QNA" MODIFY ("QNA_NO" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QNA" MODIFY ("QNA_CATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QNA" MODIFY ("QNA_TYPE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QNA" MODIFY ("CONTENT" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QNA" ADD CONSTRAINT "PK_QNA" PRIMARY KEY ("QNA_NO", "QNA_CATE", "QNA_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table QNARESULT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QNARESULT" MODIFY ("QNA_CATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QNARESULT" MODIFY ("QNA_NO" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QNARESULT" MODIFY ("QNA_TYPE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QNARESULT" ADD CONSTRAINT "PK_QNARESULT" PRIMARY KEY ("QNA_CATE", "QNA_NO", "QNA_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table QUIZ
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QUIZ" MODIFY ("QUIZ_SEQ" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QUIZ" MODIFY ("PROF_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QUIZ" MODIFY ("QUIZ_CONTENT" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QUIZ" ADD CONSTRAINT "PK_QUIZ" PRIMARY KEY ("QUIZ_SEQ")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table QUIZ_ANSWER
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QUIZ_ANSWER" MODIFY ("QUIZ_SEQ" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QUIZ_ANSWER" MODIFY ("STUDENT_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."QUIZ_ANSWER" MODIFY ("QUIZ_ANSWER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STUDENT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("STUDENT_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("RESIDENT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("PWD" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("MODIFIED_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("EDUATION" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("SCHOOL" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("INACTIVE_OR_NOT" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."STUDENT" ADD CONSTRAINT "PK_STUDENT" PRIMARY KEY ("STUDENT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##LMS"."STUDENT" MODIFY ("PHONE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SUBJECT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("SUBJECT_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("SUBJECT_NAME" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("BASIC_TIME" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("FIRST_CATEGORY" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("SECOND_CATEGORY" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("SECOND_NAME" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("THIRD_CATEGORY" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("THIRD_NAME" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("FOURTH_CATEGORY" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" MODIFY ("FOURTH_NAME" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SUBJECT" ADD CONSTRAINT "PK_SUBJECT" PRIMARY KEY ("SUBJECT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SURVEY
--------------------------------------------------------

  ALTER TABLE "C##LMS"."SURVEY" MODIFY ("SURVEY_NO" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SURVEY" MODIFY ("SURVEY_CATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SURVEY" MODIFY ("SURVEY_TYPE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SURVEY" MODIFY ("SURVEY_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SURVEY" ADD CONSTRAINT "PK_SURVEY" PRIMARY KEY ("SURVEY_NO", "SURVEY_CATE", "SURVEY_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SURVEYDIS
--------------------------------------------------------

  ALTER TABLE "C##LMS"."SURVEYDIS" MODIFY ("SURVEY_NO" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SURVEYDIS" MODIFY ("STUDENT_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SURVEYDIS" MODIFY ("CLASS_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SURVEYRESULT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."SURVEYRESULT" MODIFY ("SURVEY_NO" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SURVEYRESULT" MODIFY ("SURVEY_CATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."SURVEYRESULT" MODIFY ("SURVEY_TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table S_TEST
--------------------------------------------------------

  ALTER TABLE "C##LMS"."S_TEST" MODIFY ("TEST_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."S_TEST" MODIFY ("TEST_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."S_TEST" MODIFY ("TEST_NO" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."S_TEST" MODIFY ("STUDENT_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TEACHER
--------------------------------------------------------

  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("PROF_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("RESIDENT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("PWD" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("MODIFIED_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("INACTIVE_OR_NOT" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("GRADE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEACHER" ADD CONSTRAINT "PK_TEAHCER" PRIMARY KEY ("PROF_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##LMS"."TEACHER" MODIFY ("PHONE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TEST
--------------------------------------------------------

  ALTER TABLE "C##LMS"."TEST" MODIFY ("TEST_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEST" MODIFY ("TEST_NO" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEST" MODIFY ("TEST_RA" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEST" MODIFY ("TEST_SCORE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."TEST" MODIFY ("ABILITY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table T_HOMEWORK
--------------------------------------------------------

  ALTER TABLE "C##LMS"."T_HOMEWORK" MODIFY ("HW_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_HOMEWORK" MODIFY ("PROF_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_HOMEWORK" MODIFY ("HW_STARTDATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_HOMEWORK" MODIFY ("HW_ENDDATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_HOMEWORK" MODIFY ("T_HW_TITLE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_HOMEWORK" MODIFY ("CLASS_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_HOMEWORK" ADD CONSTRAINT "PK_T_HOMEWORK" PRIMARY KEY ("HW_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table T_TEST
--------------------------------------------------------

  ALTER TABLE "C##LMS"."T_TEST" MODIFY ("TEST_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_TEST" MODIFY ("SUBJECT_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_TEST" MODIFY ("TEST_STARTDATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_TEST" MODIFY ("TEST_ENDDATE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_TEST" MODIFY ("TEST_TYPE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_TEST" MODIFY ("CLASS_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_TEST" MODIFY ("PROF_CODE" NOT NULL ENABLE);
  ALTER TABLE "C##LMS"."T_TEST" ADD CONSTRAINT "PK_T_TEST" PRIMARY KEY ("TEST_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ABILITY
--------------------------------------------------------

  ALTER TABLE "C##LMS"."ABILITY" ADD CONSTRAINT "FK_SUBJECT_TO_ABILTY" FOREIGN KEY ("SUBJECT_CODE")
	  REFERENCES "C##LMS"."SUBJECT" ("SUBJECT_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ATTENDENCE
--------------------------------------------------------

  ALTER TABLE "C##LMS"."ATTENDENCE" ADD CONSTRAINT "FK_STUDENT_TO_ATTENDENCE" FOREIGN KEY ("STUDENT_CODE")
	  REFERENCES "C##LMS"."STUDENT" ("STUDENT_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CHATROOM
--------------------------------------------------------

  ALTER TABLE "C##LMS"."CHATROOM" ADD CONSTRAINT "FK_TEAHCER_TO_CHAT" FOREIGN KEY ("PROF_CODE")
	  REFERENCES "C##LMS"."TEACHER" ("PROF_CODE") ENABLE;
  ALTER TABLE "C##LMS"."CHATROOM" ADD CONSTRAINT "FK_STUDENT_TO_CHAT" FOREIGN KEY ("STUDENT_CODE")
	  REFERENCES "C##LMS"."STUDENT" ("STUDENT_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CHAT_CONTENT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."CHAT_CONTENT" ADD CONSTRAINT "FK_CHAT_TO_CHAT_CONTENT" FOREIGN KEY ("CHAT_ROOM")
	  REFERENCES "C##LMS"."CHATROOM" ("CHAT_ROOM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DESIGNED_CLASS
--------------------------------------------------------

  ALTER TABLE "C##LMS"."DESIGNED_CLASS" ADD CONSTRAINT "FK_TEAHCER_TO_DESIGNED_CLASS" FOREIGN KEY ("PROF_CODE")
	  REFERENCES "C##LMS"."TEACHER" ("PROF_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DESIGNED_SUBJECT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."DESIGNED_SUBJECT" ADD CONSTRAINT "FK_SUBJECT_TO_DESIGNED_SUBJECT" FOREIGN KEY ("SUBJECT_CODE")
	  REFERENCES "C##LMS"."SUBJECT" ("SUBJECT_CODE") ENABLE;
  ALTER TABLE "C##LMS"."DESIGNED_SUBJECT" ADD CONSTRAINT "FK_DESIGNED_CLASS_TO_DESIGNED_SUBJECT" FOREIGN KEY ("CLASS_CODE")
	  REFERENCES "C##LMS"."DESIGNED_CLASS" ("CLASS_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HOMEWORK
--------------------------------------------------------

  ALTER TABLE "C##LMS"."HOMEWORK" ADD CONSTRAINT "FK_HW_CLASS" FOREIGN KEY ("CLASS_CODE")
	  REFERENCES "C##LMS"."DESIGNED_CLASS" ("CLASS_CODE") ENABLE;
  ALTER TABLE "C##LMS"."HOMEWORK" ADD CONSTRAINT "FK_T_HOMEWORK_TO_HOMEWORK2" FOREIGN KEY ("HW_CODE")
	  REFERENCES "C##LMS"."T_HOMEWORK" ("HW_CODE") ENABLE;
  ALTER TABLE "C##LMS"."HOMEWORK" ADD CONSTRAINT "FK_STUDENT_TO_HOMEWORK2" FOREIGN KEY ("STUDENT_CODE")
	  REFERENCES "C##LMS"."STUDENT" ("STUDENT_CODE") ENABLE;
  ALTER TABLE "C##LMS"."HOMEWORK" ADD CONSTRAINT "FK_TEAHCER_TO_HOMEWORK" FOREIGN KEY ("PROF_CODE")
	  REFERENCES "C##LMS"."TEACHER" ("PROF_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table QBOARD_ANS
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QBOARD_ANS" ADD CONSTRAINT "FK_QBOARD_TO_QBOARD_ANS" FOREIGN KEY ("Q_BOARD_SEQ")
	  REFERENCES "C##LMS"."QBOARD" ("Q_BOARD_SEQ") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table QNARESULT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QNARESULT" ADD CONSTRAINT "FK_QNA_TO_QNARESULT" FOREIGN KEY ("QNA_NO", "QNA_CATE", "QNA_TYPE")
	  REFERENCES "C##LMS"."QNA" ("QNA_NO", "QNA_CATE", "QNA_TYPE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table QUIZ
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QUIZ" ADD CONSTRAINT "FK_TEAHCER_TO_QUIZ" FOREIGN KEY ("PROF_CODE")
	  REFERENCES "C##LMS"."TEACHER" ("PROF_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table QUIZ_ANSWER
--------------------------------------------------------

  ALTER TABLE "C##LMS"."QUIZ_ANSWER" ADD CONSTRAINT "FK_QUIZ_TO_QUIZ_ANSWER" FOREIGN KEY ("QUIZ_SEQ")
	  REFERENCES "C##LMS"."QUIZ" ("QUIZ_SEQ") ENABLE;
  ALTER TABLE "C##LMS"."QUIZ_ANSWER" ADD CONSTRAINT "FK_STUDENT_TO_QUIZ_ANSWER" FOREIGN KEY ("STUDENT_CODE")
	  REFERENCES "C##LMS"."STUDENT" ("STUDENT_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table STUDENT
--------------------------------------------------------

  ALTER TABLE "C##LMS"."STUDENT" ADD FOREIGN KEY ("CLASS_CODE")
	  REFERENCES "C##LMS"."DESIGNED_CLASS" ("CLASS_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table S_TEST
--------------------------------------------------------

  ALTER TABLE "C##LMS"."S_TEST" ADD CONSTRAINT "FK_T_TEST_TO_S_TEST" FOREIGN KEY ("TEST_CODE")
	  REFERENCES "C##LMS"."T_TEST" ("TEST_CODE") ENABLE;
  ALTER TABLE "C##LMS"."S_TEST" ADD CONSTRAINT "FK_STUDENT_TO_S_TEST" FOREIGN KEY ("STUDENT_CODE")
	  REFERENCES "C##LMS"."STUDENT" ("STUDENT_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TEST
--------------------------------------------------------

  ALTER TABLE "C##LMS"."TEST" ADD CONSTRAINT "FK_T_TEST_TO_TEST" FOREIGN KEY ("TEST_CODE")
	  REFERENCES "C##LMS"."T_TEST" ("TEST_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_HOMEWORK
--------------------------------------------------------

  ALTER TABLE "C##LMS"."T_HOMEWORK" ADD CONSTRAINT "FK_TEAHCER_TO_T_HOMEWORK" FOREIGN KEY ("PROF_CODE")
	  REFERENCES "C##LMS"."TEACHER" ("PROF_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table T_TEST
--------------------------------------------------------

  ALTER TABLE "C##LMS"."T_TEST" ADD CONSTRAINT "FK_SUBJECT_TO_T_TEST" FOREIGN KEY ("SUBJECT_CODE")
	  REFERENCES "C##LMS"."SUBJECT" ("SUBJECT_CODE") ENABLE;
  ALTER TABLE "C##LMS"."T_TEST" ADD CONSTRAINT "FK_TEAHCER_TO_T_TEST" FOREIGN KEY ("PROF_CODE")
	  REFERENCES "C##LMS"."TEACHER" ("PROF_CODE") ENABLE;
